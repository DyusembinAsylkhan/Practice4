{
	"id": "0d377efea9131609abace6a4a51f0b75",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"nft-staking-app/StakingContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\ncontract ERC721Staking is ReentrancyGuard { \r\n    using SafeERC20 for IERC20;\r\n\r\n    // Interfaces for ERC20 and ERC721\r\n    IERC20 public immutable rewardsToken;\r\n    IERC721 public immutable nftCollection;\r\n\r\n    // Constructor function to set the rewards token and the NFT collection addresses\r\n    constructor(IERC721 _nftCollection, IERC20 _rewardsToken) {\r\n        nftCollection = _nftCollection;\r\n        rewardsToken = _rewardsToken;\r\n    }\r\n    struct StakedToken {\r\n        address staker;\r\n        uint256 tokenId;\r\n    }\r\n    \r\n    // Staker info\r\n    struct Staker {\r\n        // Amount of tokens staked by the staker\r\n        uint256 amountStaked;\r\n\r\n        // Staked token ids\r\n        StakedToken[] stakedTokens;\r\n\r\n        // Last time of the rewards were calculated for this user\r\n        uint256 timeOfLastUpdate;\r\n\r\n        // Calculated, but unclaimed rewards for the User. The rewards are\r\n        // calculated each time the user writes to the Smart Contract\r\n        uint256 unclaimedRewards;\r\n    }\r\n\r\n    // Rewards per hour per token deposited in wei.\r\n    uint256 private rewardsPerHour = 10000;\r\n\r\n    // Mapping of User Address to Staker info\r\n    mapping(address => Staker) public stakers;\r\n\r\n    // Mapping of Token Id to staker. Made for the SC to remeber\r\n    // who to send back the ERC721 Token to.\r\n    mapping(uint256 => address) public stakerAddress;\r\n\r\n    // If address already has ERC721 Token/s staked, calculate the rewards.\r\n    // Increment the amountStaked and map msg.sender to the Token Id of the staked\r\n    // Token to later send back on withdrawal. Finally give timeOfLastUpdate the\r\n    // value of now.\r\n    function stake(uint256 _tokenId) external nonReentrant {\r\n        // If wallet has tokens staked, calculate the rewards before adding the new token\r\n        if (stakers[msg.sender].amountStaked > 0) {\r\n            uint256 rewards = calculateRewards(msg.sender);\r\n            stakers[msg.sender].unclaimedRewards += rewards;\r\n        }\r\n\r\n        // Wallet must own the token they are trying to stake\r\n        require(\r\n            nftCollection.ownerOf(_tokenId) == msg.sender,\r\n            \"You don't own this token!\"\r\n        );\r\n\r\n        // Transfer the token from the wallet to the Smart contract\r\n        nftCollection.transferFrom(msg.sender, address(this), _tokenId);\r\n\r\n        // Create StakedToken\r\n        StakedToken memory stakedToken = StakedToken(msg.sender, _tokenId);\r\n\r\n        // Add the token to the stakedTokens array\r\n        stakers[msg.sender].stakedTokens.push(stakedToken);\r\n\r\n        // Increment the amount staked for this wallet\r\n        stakers[msg.sender].amountStaked++;\r\n\r\n        // Update the mapping of the tokenId to the staker's address\r\n        stakerAddress[_tokenId] = msg.sender;\r\n\r\n        // Update the timeOfLastUpdate for the staker   \r\n        stakers[msg.sender].timeOfLastUpdate = block.timestamp;\r\n    }\r\n    \r\n    // Check if user has any ERC721 Tokens Staked and if they tried to withdraw,\r\n    // calculate the rewards and store them in the unclaimedRewards\r\n    // decrement the amountStaked of the user and transfer the ERC721 token back to them\r\n    function withdraw(uint256 _tokenId) external nonReentrant {\r\n        // Make sure the user has at least one token staked before withdrawing\r\n        require(\r\n            stakers[msg.sender].amountStaked > 0,\r\n            \"You have no tokens staked\"\r\n        );\r\n        \r\n        // Wallet must own the token they are trying to withdraw\r\n        require(stakerAddress[_tokenId] == msg.sender, \"You don't own this token!\");\r\n\r\n        // Update the rewards for this user, as the amount of rewards decreases with less tokens.\r\n        uint256 rewards = calculateRewards(msg.sender);\r\n        stakers[msg.sender].unclaimedRewards += rewards;\r\n\r\n        // Find the index of this token id in the stakedTokens array\r\n        uint256 index = 0;\r\n        for (uint256 i = 0; i < stakers[msg.sender].stakedTokens.length; i++) {\r\n            if (\r\n                stakers[msg.sender].stakedTokens[i].tokenId == _tokenId \r\n                && \r\n                stakers[msg.sender].stakedTokens[i].staker != address(0)\r\n            ) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Set this token's .staker to be address 0 to mark it as no longer staked\r\n        stakers[msg.sender].stakedTokens[index].staker = address(0);\r\n\r\n        // Decrement the amount staked for this wallet\r\n        stakers[msg.sender].amountStaked--;\r\n\r\n        // Update the mapping of the tokenId to the be address(0) to indicate that the token is no longer staked\r\n        stakerAddress[_tokenId] = address(0);\r\n\r\n        // Transfer the token back to the withdrawer\r\n        nftCollection.transferFrom(address(this), msg.sender, _tokenId);\r\n\r\n        // Update the timeOfLastUpdate for the withdrawer   \r\n        stakers[msg.sender].timeOfLastUpdate = block.timestamp;\r\n    }\r\n\r\n    // Calculate rewards for the msg.sender, check if there are any rewards\r\n    // claim, set unclaimedRewards to 0 and transfer the ERC20 Reward token\r\n    // to the user.\r\n    function claimRewards() external {\r\n        uint256 rewards = calculateRewards(msg.sender) +\r\n            stakers[msg.sender].unclaimedRewards;\r\n        require(rewards > 0, \"You have no rewards to claim\");\r\n        stakers[msg.sender].timeOfLastUpdate = block.timestamp;\r\n        stakers[msg.sender].unclaimedRewards = 0;\r\n        rewardsToken.safeTransfer(msg.sender, rewards);\r\n    }\r\n\r\n\r\n    //////////\r\n    // View //\r\n    //////////\r\n\r\n    function availableRewards(address _staker) public view returns (uint256) {\r\n        uint256 rewards = calculateRewards(_staker) +\r\n            stakers[_staker].unclaimedRewards;\r\n        return rewards;\r\n    }\r\n\r\n    function getStakedTokens(address _user) public view returns (StakedToken[] memory) {\r\n        // Check if we know this user\r\n        if (stakers[_user].amountStaked > 0) {\r\n            // Return all the tokens in the stakedToken Array for this user that are not -1\r\n            StakedToken[] memory _stakedTokens = new StakedToken[](stakers[_user].amountStaked);\r\n            uint256 _index = 0;\r\n\r\n            for (uint256 j = 0; j < stakers[_user].stakedTokens.length; j++) {\r\n                if (stakers[_user].stakedTokens[j].staker != (address(0))) {\r\n                    _stakedTokens[_index] = stakers[_user].stakedTokens[j];\r\n                    _index++;\r\n                }\r\n            }\r\n\r\n            return _stakedTokens;\r\n        }\r\n        \r\n        // Otherwise, return empty array\r\n        else {\r\n            return new StakedToken[](0);\r\n        }\r\n    }\r\n\r\n    /////////////\r\n    // Internal//\r\n    /////////////\r\n\r\n    // Calculate rewards for param _staker by calculating the time passed\r\n    // since last update in hours and mulitplying it to ERC721 Tokens Staked\r\n    // and rewardsPerHour.\r\n    function calculateRewards(address _staker)\r\n        internal\r\n        view\r\n        returns (uint256 _rewards)\r\n    {\r\n        return (((\r\n            ((block.timestamp - stakers[_staker].timeOfLastUpdate) *\r\n                stakers[_staker].amountStaked)\r\n        ) * rewardsPerHour) / 3600);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xD84D22D1835A3CA1124D5EF32EE0684F33800771 DUP1 0xC5 0xEA PUSH32 0xE8765448DE492764736F6C634300081600330000000000000000000000000000 ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xD84D22D1835A3CA1124D5EF32EE0684F33800771 DUP1 0xC5 0xEA PUSH32 0xE8765448DE492764736F6C634300081600330000000000000000000000000000 ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"nft-staking-app/StakingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC4 0xE3 MSTORE SELFBALANCE MSTORE 0xC 0xDD DUP6 0xD4 POP SELFBALANCE CALLCODE DUP8 PUSH32 0x29A37F5EEC48FFFAA17CB54307A6A87D8464736F6C6343000816003300000000 ",
							"sourceMap": "195:6066:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC4 0xE3 MSTORE SELFBALANCE MSTORE 0xC 0xDD DUP6 0xD4 POP SELFBALANCE CALLCODE DUP8 PUSH32 0x29A37F5EEC48FFFAA17CB54307A6A87D8464736F6C6343000816003300000000 ",
							"sourceMap": "195:6066:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"nft-staking-app/StakingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"nft-staking-app/StakingContract.sol": {
				"ERC721Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC721",
									"name": "_nftCollection",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_rewardsToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_staker",
									"type": "address"
								}
							],
							"name": "availableRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getStakedTokens",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "staker",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										}
									],
									"internalType": "struct ERC721Staking.StakedToken[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftCollection",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakerAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountStaked",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timeOfLastUpdate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unclaimedRewards",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nft-staking-app/StakingContract.sol\":309:7538  contract ERC721Staking is ReentrancyGuard { ... */\n  mstore(0x40, 0xc0)\n    /* \"nft-staking-app/StakingContract.sol\":1426:1431  10000 */\n  0x2710\n    /* \"nft-staking-app/StakingContract.sol\":1393:1431  uint256 private rewardsPerHour = 10000 */\n  0x01\n  sstore\n    /* \"nft-staking-app/StakingContract.sol\":611:757  constructor(IERC721 _nftCollection, IERC20 _rewardsToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"nft-staking-app/StakingContract.sol\":696:710  _nftCollection */\n  dup2\n    /* \"nft-staking-app/StakingContract.sol\":680:710  nftCollection = _nftCollection */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"nft-staking-app/StakingContract.sol\":736:749  _rewardsToken */\n  dup1\n    /* \"nft-staking-app/StakingContract.sol\":721:749  rewardsToken = _rewardsToken */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"nft-staking-app/StakingContract.sol\":611:757  constructor(IERC721 _nftCollection, IERC20 _rewardsToken) {... */\n  pop\n  pop\n    /* \"nft-staking-app/StakingContract.sol\":309:7538  contract ERC721Staking is ReentrancyGuard { ... */\n  jump(tag_8)\n    /* \"#utility.yul\":88:205   */\ntag_10:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_12:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_13:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_26\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_12\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:679   */\ntag_14:\n    /* \"#utility.yul\":620:627   */\n  0x00\n    /* \"#utility.yul\":649:673   */\n  tag_28\n    /* \"#utility.yul\":667:672   */\n  dup3\n    /* \"#utility.yul\":649:673   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":638:673   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:679   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":685:837   */\ntag_15:\n    /* \"#utility.yul\":773:812   */\n  tag_30\n    /* \"#utility.yul\":806:811   */\n  dup2\n    /* \"#utility.yul\":773:812   */\n  tag_14\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":766:771   */\n  dup2\n    /* \"#utility.yul\":763:813   */\n  eq\n    /* \"#utility.yul\":753:831   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":827:828   */\n  0x00\n    /* \"#utility.yul\":824:825   */\n  dup1\n    /* \"#utility.yul\":817:829   */\n  revert\n    /* \"#utility.yul\":753:831   */\ntag_31:\n    /* \"#utility.yul\":685:837   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":843:1016   */\ntag_16:\n    /* \"#utility.yul\":915:920   */\n  0x00\n    /* \"#utility.yul\":946:952   */\n  dup2\n    /* \"#utility.yul\":940:953   */\n  mload\n    /* \"#utility.yul\":931:953   */\n  swap1\n  pop\n    /* \"#utility.yul\":962:1010   */\n  tag_33\n    /* \"#utility.yul\":1004:1009   */\n  dup2\n    /* \"#utility.yul\":962:1010   */\n  tag_15\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":843:1016   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1022:1132   */\ntag_17:\n    /* \"#utility.yul\":1073:1080   */\n  0x00\n    /* \"#utility.yul\":1102:1126   */\n  tag_35\n    /* \"#utility.yul\":1120:1125   */\n  dup3\n    /* \"#utility.yul\":1102:1126   */\n  tag_13\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1091:1126   */\n  swap1\n  pop\n    /* \"#utility.yul\":1022:1132   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1138:1288   */\ntag_18:\n    /* \"#utility.yul\":1225:1263   */\n  tag_37\n    /* \"#utility.yul\":1257:1262   */\n  dup2\n    /* \"#utility.yul\":1225:1263   */\n  tag_17\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1218:1223   */\n  dup2\n    /* \"#utility.yul\":1215:1264   */\n  eq\n    /* \"#utility.yul\":1205:1282   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1278:1279   */\n  0x00\n    /* \"#utility.yul\":1275:1276   */\n  dup1\n    /* \"#utility.yul\":1268:1280   */\n  revert\n    /* \"#utility.yul\":1205:1282   */\ntag_38:\n    /* \"#utility.yul\":1138:1288   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1294:1465   */\ntag_19:\n    /* \"#utility.yul\":1365:1370   */\n  0x00\n    /* \"#utility.yul\":1396:1402   */\n  dup2\n    /* \"#utility.yul\":1390:1403   */\n  mload\n    /* \"#utility.yul\":1381:1403   */\n  swap1\n  pop\n    /* \"#utility.yul\":1412:1459   */\n  tag_40\n    /* \"#utility.yul\":1453:1458   */\n  dup2\n    /* \"#utility.yul\":1412:1459   */\n  tag_18\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1294:1465   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:2036   */\ntag_3:\n    /* \"#utility.yul\":1579:1585   */\n  0x00\n    /* \"#utility.yul\":1587:1593   */\n  dup1\n    /* \"#utility.yul\":1636:1638   */\n  0x40\n    /* \"#utility.yul\":1624:1633   */\n  dup4\n    /* \"#utility.yul\":1615:1622   */\n  dup6\n    /* \"#utility.yul\":1611:1634   */\n  sub\n    /* \"#utility.yul\":1607:1639   */\n  slt\n    /* \"#utility.yul\":1604:1723   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1642:1721   */\n  tag_43\n  tag_10\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1604:1723   */\ntag_42:\n    /* \"#utility.yul\":1762:1763   */\n  0x00\n    /* \"#utility.yul\":1787:1866   */\n  tag_44\n    /* \"#utility.yul\":1858:1865   */\n  dup6\n    /* \"#utility.yul\":1849:1855   */\n  dup3\n    /* \"#utility.yul\":1838:1847   */\n  dup7\n    /* \"#utility.yul\":1834:1856   */\n  add\n    /* \"#utility.yul\":1787:1866   */\n  tag_16\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1777:1866   */\n  swap3\n  pop\n    /* \"#utility.yul\":1733:1876   */\n  pop\n    /* \"#utility.yul\":1915:1917   */\n  0x20\n    /* \"#utility.yul\":1941:2019   */\n  tag_45\n    /* \"#utility.yul\":2011:2018   */\n  dup6\n    /* \"#utility.yul\":2002:2008   */\n  dup3\n    /* \"#utility.yul\":1991:2000   */\n  dup7\n    /* \"#utility.yul\":1987:2009   */\n  add\n    /* \"#utility.yul\":1941:2019   */\n  tag_19\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1931:2019   */\n  swap2\n  pop\n    /* \"#utility.yul\":1886:2029   */\n  pop\n    /* \"#utility.yul\":1471:2036   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"nft-staking-app/StakingContract.sol\":309:7538  contract ERC721Staking is ReentrancyGuard { ... */\ntag_8:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x538742f01864684e7bc02c5833d23bcc80c6c36906ebb070efda83aa556ded94\")\n  0x00\n  assignImmutable(\"0xc6ff54af72699a419b2bb7b4c5a42be0e7bfb5f0cdab490188e69fdfef447f66\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"nft-staking-app/StakingContract.sol\":309:7538  contract ERC721Staking is ReentrancyGuard { ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9168ae72\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x9168ae72\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x94067045\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf854a27f\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x372500ab\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x63c28db1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6588103b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"nft-staking-app/StakingContract.sol\":3478:5268  function withdraw(uint256 _tokenId) external nonReentrant {... */\n    tag_3:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"nft-staking-app/StakingContract.sol\":5451:5837  function claimRewards() external {... */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"nft-staking-app/StakingContract.sol\":6114:6987  function getStakedTokens(address _user) public view returns (StakedToken[] memory) {... */\n    tag_5:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-app/StakingContract.sol\":477:515  IERC721 public immutable nftCollection */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-app/StakingContract.sol\":1487:1528  mapping(address => Staker) public stakers */\n    tag_7:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_32\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-app/StakingContract.sol\":1649:1697  mapping(uint256 => address) public stakerAddress */\n    tag_8:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-app/StakingContract.sol\":1971:3225  function stake(uint256 _tokenId) external nonReentrant {... */\n    tag_9:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      stop\n        /* \"nft-staking-app/StakingContract.sol\":434:470  IERC20 public immutable rewardsToken */\n    tag_10:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-app/StakingContract.sol\":5897:6106  function availableRewards(address _staker) public view returns (uint256) {... */\n    tag_11:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-app/StakingContract.sol\":3478:5268  function withdraw(uint256 _tokenId) external nonReentrant {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_52\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_53\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_52:\n        /* \"nft-staking-app/StakingContract.sol\":3684:3685  0 */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":3649:3656  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":3649:3668  stakers[msg.sender] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":3657:3667  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":3649:3668  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":3649:3681  stakers[msg.sender].amountStaked */\n      0x00\n      add\n      sload\n        /* \"nft-staking-app/StakingContract.sol\":3649:3685  stakers[msg.sender].amountStaked > 0 */\n      gt\n        /* \"nft-staking-app/StakingContract.sol\":3627:3738  require(... */\n      tag_55\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"nft-staking-app/StakingContract.sol\":3860:3870  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":3833:3870  stakerAddress[_tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-app/StakingContract.sol\":3833:3846  stakerAddress */\n      0x03\n        /* \"nft-staking-app/StakingContract.sol\":3833:3856  stakerAddress[_tokenId] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":3847:3855  _tokenId */\n      dup4\n        /* \"nft-staking-app/StakingContract.sol\":3833:3856  stakerAddress[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-app/StakingContract.sol\":3833:3870  stakerAddress[_tokenId] == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nft-staking-app/StakingContract.sol\":3825:3900  require(stakerAddress[_tokenId] == msg.sender, \"You don't own this token!\") */\n      tag_58\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_58:\n        /* \"nft-staking-app/StakingContract.sol\":4012:4027  uint256 rewards */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":4030:4058  calculateRewards(msg.sender) */\n      tag_61\n        /* \"nft-staking-app/StakingContract.sol\":4047:4057  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":4030:4046  calculateRewards */\n      tag_62\n        /* \"nft-staking-app/StakingContract.sol\":4030:4058  calculateRewards(msg.sender) */\n      jump\t// in\n    tag_61:\n        /* \"nft-staking-app/StakingContract.sol\":4012:4058  uint256 rewards = calculateRewards(msg.sender) */\n      swap1\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":4109:4116  rewards */\n      dup1\n        /* \"nft-staking-app/StakingContract.sol\":4069:4076  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":4069:4088  stakers[msg.sender] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":4077:4087  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":4069:4088  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":4069:4105  stakers[msg.sender].unclaimedRewards */\n      0x03\n      add\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":4069:4116  stakers[msg.sender].unclaimedRewards += rewards */\n      dup3\n      dup3\n      sload\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":4199:4212  uint256 index */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":4232:4241  uint256 i */\n      dup1\n        /* \"nft-staking-app/StakingContract.sol\":4227:4580  for (uint256 i = 0; i < stakers[msg.sender].stakedTokens.length; i++) {... */\n    tag_65:\n        /* \"nft-staking-app/StakingContract.sol\":4251:4258  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":4251:4270  stakers[msg.sender] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":4259:4269  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":4251:4270  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":4251:4283  stakers[msg.sender].stakedTokens */\n      0x01\n      add\n        /* \"nft-staking-app/StakingContract.sol\":4251:4290  stakers[msg.sender].stakedTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":4247:4248  i */\n      dup2\n        /* \"nft-staking-app/StakingContract.sol\":4247:4290  i < stakers[msg.sender].stakedTokens.length */\n      lt\n        /* \"nft-staking-app/StakingContract.sol\":4227:4580  for (uint256 i = 0; i < stakers[msg.sender].stakedTokens.length; i++) {... */\n      iszero\n      tag_66\n      jumpi\n        /* \"nft-staking-app/StakingContract.sol\":4381:4389  _tokenId */\n      dup4\n        /* \"nft-staking-app/StakingContract.sol\":4334:4341  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":4334:4353  stakers[msg.sender] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":4342:4352  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":4334:4353  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":4334:4366  stakers[msg.sender].stakedTokens */\n      0x01\n      add\n        /* \"nft-staking-app/StakingContract.sol\":4367:4368  i */\n      dup3\n        /* \"nft-staking-app/StakingContract.sol\":4334:4369  stakers[msg.sender].stakedTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_68\n      jumpi\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n    tag_68:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"nft-staking-app/StakingContract.sol\":4334:4377  stakers[msg.sender].stakedTokens[i].tokenId */\n      0x01\n      add\n      sload\n        /* \"nft-staking-app/StakingContract.sol\":4334:4389  stakers[msg.sender].stakedTokens[i].tokenId == _tokenId */\n      eq\n        /* \"nft-staking-app/StakingContract.sol\":4334:4485  stakers[msg.sender].stakedTokens[i].tokenId == _tokenId ... */\n      dup1\n      iszero\n      tag_72\n      jumpi\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":4483:4484  0 */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":4429:4485  stakers[msg.sender].stakedTokens[i].staker != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-app/StakingContract.sol\":4429:4436  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":4429:4448  stakers[msg.sender] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":4437:4447  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":4429:4448  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":4429:4461  stakers[msg.sender].stakedTokens */\n      0x01\n      add\n        /* \"nft-staking-app/StakingContract.sol\":4462:4463  i */\n      dup3\n        /* \"nft-staking-app/StakingContract.sol\":4429:4464  stakers[msg.sender].stakedTokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_73\n      jumpi\n      tag_74\n      tag_70\n      jump\t// in\n    tag_74:\n    tag_73:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"nft-staking-app/StakingContract.sol\":4429:4471  stakers[msg.sender].stakedTokens[i].staker */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-app/StakingContract.sol\":4429:4485  stakers[msg.sender].stakedTokens[i].staker != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"nft-staking-app/StakingContract.sol\":4334:4485  stakers[msg.sender].stakedTokens[i].tokenId == _tokenId ... */\n    tag_72:\n        /* \"nft-staking-app/StakingContract.sol\":4312:4569  if (... */\n      iszero\n      tag_76\n      jumpi\n        /* \"nft-staking-app/StakingContract.sol\":4528:4529  i */\n      dup1\n        /* \"nft-staking-app/StakingContract.sol\":4520:4529  index = i */\n      swap2\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":4548:4553  break */\n      jump(tag_66)\n        /* \"nft-staking-app/StakingContract.sol\":4312:4569  if (... */\n    tag_76:\n        /* \"nft-staking-app/StakingContract.sol\":4292:4295  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":4227:4580  for (uint256 i = 0; i < stakers[msg.sender].stakedTokens.length; i++) {... */\n      jump(tag_65)\n    tag_66:\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":4733:4734  0 */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":4676:4683  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":4676:4695  stakers[msg.sender] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":4684:4694  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":4676:4695  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":4676:4708  stakers[msg.sender].stakedTokens */\n      0x01\n      add\n        /* \"nft-staking-app/StakingContract.sol\":4709:4714  index */\n      dup3\n        /* \"nft-staking-app/StakingContract.sol\":4676:4715  stakers[msg.sender].stakedTokens[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_77\n      jumpi\n      tag_78\n      tag_70\n      jump\t// in\n    tag_78:\n    tag_77:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"nft-staking-app/StakingContract.sol\":4676:4722  stakers[msg.sender].stakedTokens[index].staker */\n      0x00\n      add\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":4676:4735  stakers[msg.sender].stakedTokens[index].staker = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":4804:4811  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":4804:4823  stakers[msg.sender] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":4812:4822  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":4804:4823  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":4804:4836  stakers[msg.sender].amountStaked */\n      0x00\n      add\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":4804:4838  stakers[msg.sender].amountStaked-- */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":4999:5000  0 */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":4965:4978  stakerAddress */\n      0x03\n        /* \"nft-staking-app/StakingContract.sol\":4965:4988  stakerAddress[_tokenId] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":4979:4987  _tokenId */\n      dup6\n        /* \"nft-staking-app/StakingContract.sol\":4965:4988  stakerAddress[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":4965:5001  stakerAddress[_tokenId] = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":5068:5081  nftCollection */\n      immutable(\"0x538742f01864684e7bc02c5833d23bcc80c6c36906ebb070efda83aa556ded94\")\n        /* \"nft-staking-app/StakingContract.sol\":5068:5094  nftCollection.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"nft-staking-app/StakingContract.sol\":5103:5107  this */\n      address\n        /* \"nft-staking-app/StakingContract.sol\":5110:5120  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":5122:5130  _tokenId */\n      dup7\n        /* \"nft-staking-app/StakingContract.sol\":5068:5131  nftCollection.transferFrom(address(this), msg.sender, _tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":5245:5260  block.timestamp */\n      timestamp\n        /* \"nft-staking-app/StakingContract.sol\":5206:5213  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":5206:5225  stakers[msg.sender] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":5214:5224  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":5206:5225  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":5206:5242  stakers[msg.sender].timeOfLastUpdate */\n      0x02\n      add\n        /* \"nft-staking-app/StakingContract.sol\":5206:5260  stakers[msg.sender].timeOfLastUpdate = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":3536:5268  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_87\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_88\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_87:\n        /* \"nft-staking-app/StakingContract.sol\":3478:5268  function withdraw(uint256 _tokenId) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"nft-staking-app/StakingContract.sol\":5451:5837  function claimRewards() external {... */\n    tag_18:\n        /* \"nft-staking-app/StakingContract.sol\":5495:5510  uint256 rewards */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":5557:5564  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":5557:5576  stakers[msg.sender] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":5565:5575  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":5557:5576  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":5557:5593  stakers[msg.sender].unclaimedRewards */\n      0x03\n      add\n      sload\n        /* \"nft-staking-app/StakingContract.sol\":5513:5541  calculateRewards(msg.sender) */\n      tag_90\n        /* \"nft-staking-app/StakingContract.sol\":5530:5540  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":5513:5529  calculateRewards */\n      tag_62\n        /* \"nft-staking-app/StakingContract.sol\":5513:5541  calculateRewards(msg.sender) */\n      jump\t// in\n    tag_90:\n        /* \"nft-staking-app/StakingContract.sol\":5513:5593  calculateRewards(msg.sender) +... */\n      tag_91\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_91:\n        /* \"nft-staking-app/StakingContract.sol\":5495:5593  uint256 rewards = calculateRewards(msg.sender) +... */\n      swap1\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":5622:5623  0 */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":5612:5619  rewards */\n      dup2\n        /* \"nft-staking-app/StakingContract.sol\":5612:5623  rewards > 0 */\n      gt\n        /* \"nft-staking-app/StakingContract.sol\":5604:5656  require(rewards > 0, \"You have no rewards to claim\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"nft-staking-app/StakingContract.sol\":5706:5721  block.timestamp */\n      timestamp\n        /* \"nft-staking-app/StakingContract.sol\":5667:5674  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":5667:5686  stakers[msg.sender] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":5675:5685  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":5667:5686  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":5667:5703  stakers[msg.sender].timeOfLastUpdate */\n      0x02\n      add\n        /* \"nft-staking-app/StakingContract.sol\":5667:5721  stakers[msg.sender].timeOfLastUpdate = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":5771:5772  0 */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":5732:5739  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":5732:5751  stakers[msg.sender] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":5740:5750  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":5732:5751  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":5732:5768  stakers[msg.sender].unclaimedRewards */\n      0x03\n      add\n        /* \"nft-staking-app/StakingContract.sol\":5732:5772  stakers[msg.sender].unclaimedRewards = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":5783:5829  rewardsToken.safeTransfer(msg.sender, rewards) */\n      tag_95\n        /* \"nft-staking-app/StakingContract.sol\":5809:5819  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":5821:5828  rewards */\n      dup3\n        /* \"nft-staking-app/StakingContract.sol\":5783:5795  rewardsToken */\n      immutable(\"0xc6ff54af72699a419b2bb7b4c5a42be0e7bfb5f0cdab490188e69fdfef447f66\")\n        /* \"nft-staking-app/StakingContract.sol\":5783:5808  rewardsToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_96\n      swap1\n        /* \"nft-staking-app/StakingContract.sol\":5783:5829  rewardsToken.safeTransfer(msg.sender, rewards) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_95:\n        /* \"nft-staking-app/StakingContract.sol\":5484:5837  {... */\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":5451:5837  function claimRewards() external {... */\n      jump\t// out\n        /* \"nft-staking-app/StakingContract.sol\":6114:6987  function getStakedTokens(address _user) public view returns (StakedToken[] memory) {... */\n    tag_22:\n        /* \"nft-staking-app/StakingContract.sol\":6175:6195  StakedToken[] memory */\n      0x60\n        /* \"nft-staking-app/StakingContract.sol\":6281:6282  0 */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":6251:6258  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":6251:6265  stakers[_user] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":6259:6264  _user */\n      dup5\n        /* \"nft-staking-app/StakingContract.sol\":6251:6265  stakers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":6251:6278  stakers[_user].amountStaked */\n      0x00\n      add\n      sload\n        /* \"nft-staking-app/StakingContract.sol\":6251:6282  stakers[_user].amountStaked > 0 */\n      gt\n        /* \"nft-staking-app/StakingContract.sol\":6247:6980  if (stakers[_user].amountStaked > 0) {... */\n      iszero\n      tag_98\n      jumpi\n        /* \"nft-staking-app/StakingContract.sol\":6392:6426  StakedToken[] memory _stakedTokens */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":6447:6454  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":6447:6461  stakers[_user] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":6455:6460  _user */\n      dup5\n        /* \"nft-staking-app/StakingContract.sol\":6447:6461  stakers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":6447:6474  stakers[_user].amountStaked */\n      0x00\n      add\n      sload\n        /* \"nft-staking-app/StakingContract.sol\":6429:6475  new StakedToken[](stakers[_user].amountStaked) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_99\n      jumpi\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n    tag_99:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_102\n      jumpi\n      dup2\n      0x20\n      add\n    tag_103:\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_103\n      jumpi\n      swap1\n      pop\n    tag_102:\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":6392:6475  StakedToken[] memory _stakedTokens = new StakedToken[](stakers[_user].amountStaked) */\n      swap1\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":6490:6504  uint256 _index */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":6530:6539  uint256 j */\n      dup1\n        /* \"nft-staking-app/StakingContract.sol\":6525:6811  for (uint256 j = 0; j < stakers[_user].stakedTokens.length; j++) {... */\n    tag_106:\n        /* \"nft-staking-app/StakingContract.sol\":6549:6556  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":6549:6563  stakers[_user] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":6557:6562  _user */\n      dup7\n        /* \"nft-staking-app/StakingContract.sol\":6549:6563  stakers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":6549:6576  stakers[_user].stakedTokens */\n      0x01\n      add\n        /* \"nft-staking-app/StakingContract.sol\":6549:6583  stakers[_user].stakedTokens.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":6545:6546  j */\n      dup2\n        /* \"nft-staking-app/StakingContract.sol\":6545:6583  j < stakers[_user].stakedTokens.length */\n      lt\n        /* \"nft-staking-app/StakingContract.sol\":6525:6811  for (uint256 j = 0; j < stakers[_user].stakedTokens.length; j++) {... */\n      iszero\n      tag_107\n      jumpi\n        /* \"nft-staking-app/StakingContract.sol\":6663:6664  0 */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":6613:6666  stakers[_user].stakedTokens[j].staker != (address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-app/StakingContract.sol\":6613:6620  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":6613:6627  stakers[_user] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":6621:6626  _user */\n      dup8\n        /* \"nft-staking-app/StakingContract.sol\":6613:6627  stakers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":6613:6640  stakers[_user].stakedTokens */\n      0x01\n      add\n        /* \"nft-staking-app/StakingContract.sol\":6641:6642  j */\n      dup3\n        /* \"nft-staking-app/StakingContract.sol\":6613:6643  stakers[_user].stakedTokens[j] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_109\n      jumpi\n      tag_110\n      tag_70\n      jump\t// in\n    tag_110:\n    tag_109:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"nft-staking-app/StakingContract.sol\":6613:6650  stakers[_user].stakedTokens[j].staker */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-app/StakingContract.sol\":6613:6666  stakers[_user].stakedTokens[j].staker != (address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nft-staking-app/StakingContract.sol\":6609:6796  if (stakers[_user].stakedTokens[j].staker != (address(0))) {... */\n      tag_112\n      jumpi\n        /* \"nft-staking-app/StakingContract.sol\":6715:6722  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":6715:6729  stakers[_user] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":6723:6728  _user */\n      dup7\n        /* \"nft-staking-app/StakingContract.sol\":6715:6729  stakers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":6715:6742  stakers[_user].stakedTokens */\n      0x01\n      add\n        /* \"nft-staking-app/StakingContract.sol\":6743:6744  j */\n      dup2\n        /* \"nft-staking-app/StakingContract.sol\":6715:6745  stakers[_user].stakedTokens[j] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_113\n      jumpi\n      tag_114\n      tag_70\n      jump\t// in\n    tag_114:\n    tag_113:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"nft-staking-app/StakingContract.sol\":6691:6745  _stakedTokens[_index] = stakers[_user].stakedTokens[j] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":6691:6704  _stakedTokens */\n      dup4\n        /* \"nft-staking-app/StakingContract.sol\":6705:6711  _index */\n      dup4\n        /* \"nft-staking-app/StakingContract.sol\":6691:6712  _stakedTokens[_index] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_116\n      jumpi\n      tag_117\n      tag_70\n      jump\t// in\n    tag_117:\n    tag_116:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"nft-staking-app/StakingContract.sol\":6691:6745  _stakedTokens[_index] = stakers[_user].stakedTokens[j] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":6768:6776  _index++ */\n      dup2\n      dup1\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      swap3\n      pop\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":6609:6796  if (stakers[_user].stakedTokens[j].staker != (address(0))) {... */\n    tag_112:\n        /* \"nft-staking-app/StakingContract.sol\":6585:6588  j++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":6525:6811  for (uint256 j = 0; j < stakers[_user].stakedTokens.length; j++) {... */\n      jump(tag_106)\n    tag_107:\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":6834:6847  _stakedTokens */\n      dup2\n        /* \"nft-staking-app/StakingContract.sol\":6827:6847  return _stakedTokens */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_97)\n        /* \"nft-staking-app/StakingContract.sol\":6247:6980  if (stakers[_user].amountStaked > 0) {... */\n    tag_98:\n        /* \"nft-staking-app/StakingContract.sol\":6966:6967  0 */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":6948:6968  new StakedToken[](0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_121\n      jumpi\n      tag_122\n      tag_101\n      jump\t// in\n    tag_122:\n    tag_121:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_123\n      jumpi\n      dup2\n      0x20\n      add\n    tag_124:\n      tag_125\n      tag_105\n      jump\t// in\n    tag_125:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_124\n      jumpi\n      swap1\n      pop\n    tag_123:\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":6941:6968  return new StakedToken[](0) */\n      swap1\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":6114:6987  function getStakedTokens(address _user) public view returns (StakedToken[] memory) {... */\n    tag_97:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nft-staking-app/StakingContract.sol\":477:515  IERC721 public immutable nftCollection */\n    tag_26:\n      immutable(\"0x538742f01864684e7bc02c5833d23bcc80c6c36906ebb070efda83aa556ded94\")\n      dup2\n      jump\t// out\n        /* \"nft-staking-app/StakingContract.sol\":1487:1528  mapping(address => Staker) public stakers */\n    tag_31:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"nft-staking-app/StakingContract.sol\":1649:1697  mapping(uint256 => address) public stakerAddress */\n    tag_36:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"nft-staking-app/StakingContract.sol\":1971:3225  function stake(uint256 _tokenId) external nonReentrant {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_127\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_53\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_127:\n        /* \"nft-staking-app/StakingContract.sol\":2167:2168  0 */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":2132:2139  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":2132:2151  stakers[msg.sender] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":2140:2150  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":2132:2151  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":2132:2164  stakers[msg.sender].amountStaked */\n      0x00\n      add\n      sload\n        /* \"nft-staking-app/StakingContract.sol\":2132:2168  stakers[msg.sender].amountStaked > 0 */\n      gt\n        /* \"nft-staking-app/StakingContract.sol\":2128:2305  if (stakers[msg.sender].amountStaked > 0) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"nft-staking-app/StakingContract.sol\":2185:2200  uint256 rewards */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":2203:2231  calculateRewards(msg.sender) */\n      tag_130\n        /* \"nft-staking-app/StakingContract.sol\":2220:2230  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":2203:2219  calculateRewards */\n      tag_62\n        /* \"nft-staking-app/StakingContract.sol\":2203:2231  calculateRewards(msg.sender) */\n      jump\t// in\n    tag_130:\n        /* \"nft-staking-app/StakingContract.sol\":2185:2231  uint256 rewards = calculateRewards(msg.sender) */\n      swap1\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":2286:2293  rewards */\n      dup1\n        /* \"nft-staking-app/StakingContract.sol\":2246:2253  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":2246:2265  stakers[msg.sender] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":2254:2264  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":2246:2265  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":2246:2282  stakers[msg.sender].unclaimedRewards */\n      0x03\n      add\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":2246:2293  stakers[msg.sender].unclaimedRewards += rewards */\n      dup3\n      dup3\n      sload\n      tag_131\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":2170:2305  {... */\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":2128:2305  if (stakers[msg.sender].amountStaked > 0) {... */\n    tag_129:\n        /* \"nft-staking-app/StakingContract.sol\":2437:2447  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":2402:2447  nftCollection.ownerOf(_tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft-staking-app/StakingContract.sol\":2402:2415  nftCollection */\n      immutable(\"0x538742f01864684e7bc02c5833d23bcc80c6c36906ebb070efda83aa556ded94\")\n        /* \"nft-staking-app/StakingContract.sol\":2402:2423  nftCollection.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"nft-staking-app/StakingContract.sol\":2424:2432  _tokenId */\n      dup4\n        /* \"nft-staking-app/StakingContract.sol\":2402:2433  nftCollection.ownerOf(_tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_132:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"nft-staking-app/StakingContract.sol\":2402:2447  nftCollection.ownerOf(_tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"nft-staking-app/StakingContract.sol\":2380:2500  require(... */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_60\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"nft-staking-app/StakingContract.sol\":2582:2595  nftCollection */\n      immutable(\"0x538742f01864684e7bc02c5833d23bcc80c6c36906ebb070efda83aa556ded94\")\n        /* \"nft-staking-app/StakingContract.sol\":2582:2608  nftCollection.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"nft-staking-app/StakingContract.sol\":2609:2619  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":2629:2633  this */\n      address\n        /* \"nft-staking-app/StakingContract.sol\":2636:2644  _tokenId */\n      dup5\n        /* \"nft-staking-app/StakingContract.sol\":2582:2645  nftCollection.transferFrom(msg.sender, address(this), _tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_139:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_142:\n      pop\n      pop\n      pop\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":2689:2719  StakedToken memory stakedToken */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":2722:2755  StakedToken(msg.sender, _tokenId) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"nft-staking-app/StakingContract.sol\":2734:2744  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":2722:2755  StakedToken(msg.sender, _tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"nft-staking-app/StakingContract.sol\":2746:2754  _tokenId */\n      dup4\n        /* \"nft-staking-app/StakingContract.sol\":2722:2755  StakedToken(msg.sender, _tokenId) */\n      dup2\n      mstore\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":2689:2755  StakedToken memory stakedToken = StakedToken(msg.sender, _tokenId) */\n      swap1\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":2820:2827  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":2820:2839  stakers[msg.sender] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":2828:2838  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":2820:2839  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":2820:2852  stakers[msg.sender].stakedTokens */\n      0x01\n      add\n        /* \"nft-staking-app/StakingContract.sol\":2858:2869  stakedToken */\n      dup2\n        /* \"nft-staking-app/StakingContract.sol\":2820:2870  stakers[msg.sender].stakedTokens.push(stakedToken) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      pop\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":2939:2946  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":2939:2958  stakers[msg.sender] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":2947:2957  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":2939:2958  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":2939:2971  stakers[msg.sender].amountStaked */\n      0x00\n      add\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":2939:2973  stakers[msg.sender].amountStaked++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_144\n      swap1\n      tag_119\n      jump\t// in\n    tag_144:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":3082:3092  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":3056:3069  stakerAddress */\n      0x03\n        /* \"nft-staking-app/StakingContract.sol\":3056:3079  stakerAddress[_tokenId] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":3070:3078  _tokenId */\n      dup5\n        /* \"nft-staking-app/StakingContract.sol\":3056:3079  stakerAddress[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":3056:3092  stakerAddress[_tokenId] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":3202:3217  block.timestamp */\n      timestamp\n        /* \"nft-staking-app/StakingContract.sol\":3163:3170  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":3163:3182  stakers[msg.sender] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":3171:3181  msg.sender */\n      caller\n        /* \"nft-staking-app/StakingContract.sol\":3163:3182  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":3163:3199  stakers[msg.sender].timeOfLastUpdate */\n      0x02\n      add\n        /* \"nft-staking-app/StakingContract.sol\":3163:3217  stakers[msg.sender].timeOfLastUpdate = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":2026:3225  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_145\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_88\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_145:\n        /* \"nft-staking-app/StakingContract.sol\":1971:3225  function stake(uint256 _tokenId) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"nft-staking-app/StakingContract.sol\":434:470  IERC20 public immutable rewardsToken */\n    tag_43:\n      immutable(\"0xc6ff54af72699a419b2bb7b4c5a42be0e7bfb5f0cdab490188e69fdfef447f66\")\n      dup2\n      jump\t// out\n        /* \"nft-staking-app/StakingContract.sol\":5897:6106  function availableRewards(address _staker) public view returns (uint256) {... */\n    tag_48:\n        /* \"nft-staking-app/StakingContract.sol\":5961:5968  uint256 */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":5981:5996  uint256 rewards */\n      dup1\n        /* \"nft-staking-app/StakingContract.sol\":6040:6047  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":6040:6056  stakers[_staker] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":6048:6055  _staker */\n      dup5\n        /* \"nft-staking-app/StakingContract.sol\":6040:6056  stakers[_staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":6040:6073  stakers[_staker].unclaimedRewards */\n      0x03\n      add\n      sload\n        /* \"nft-staking-app/StakingContract.sol\":5999:6024  calculateRewards(_staker) */\n      tag_147\n        /* \"nft-staking-app/StakingContract.sol\":6016:6023  _staker */\n      dup5\n        /* \"nft-staking-app/StakingContract.sol\":5999:6015  calculateRewards */\n      tag_62\n        /* \"nft-staking-app/StakingContract.sol\":5999:6024  calculateRewards(_staker) */\n      jump\t// in\n    tag_147:\n        /* \"nft-staking-app/StakingContract.sol\":5999:6073  calculateRewards(_staker) +... */\n      tag_148\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_148:\n        /* \"nft-staking-app/StakingContract.sol\":5981:6073  uint256 rewards = calculateRewards(_staker) +... */\n      swap1\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":6091:6098  rewards */\n      dup1\n        /* \"nft-staking-app/StakingContract.sol\":6084:6098  return rewards */\n      swap2\n      pop\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":5897:6106  function availableRewards(address _staker) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"nft-staking-app/StakingContract.sol\":7235:7535  function calculateRewards(address _staker)... */\n    tag_62:\n        /* \"nft-staking-app/StakingContract.sol\":7328:7344  uint256 _rewards */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":7522:7526  3600 */\n      0x0e10\n        /* \"nft-staking-app/StakingContract.sol\":7504:7518  rewardsPerHour */\n      sload(0x01)\n        /* \"nft-staking-app/StakingContract.sol\":7460:7467  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":7460:7476  stakers[_staker] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":7468:7475  _staker */\n      dup6\n        /* \"nft-staking-app/StakingContract.sol\":7460:7476  stakers[_staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":7460:7489  stakers[_staker].amountStaked */\n      0x00\n      add\n      sload\n        /* \"nft-staking-app/StakingContract.sol\":7406:7413  stakers */\n      0x02\n        /* \"nft-staking-app/StakingContract.sol\":7406:7422  stakers[_staker] */\n      0x00\n        /* \"nft-staking-app/StakingContract.sol\":7414:7421  _staker */\n      dup7\n        /* \"nft-staking-app/StakingContract.sol\":7406:7422  stakers[_staker] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft-staking-app/StakingContract.sol\":7406:7439  stakers[_staker].timeOfLastUpdate */\n      0x02\n      add\n      sload\n        /* \"nft-staking-app/StakingContract.sol\":7388:7403  block.timestamp */\n      timestamp\n        /* \"nft-staking-app/StakingContract.sol\":7388:7439  block.timestamp - stakers[_staker].timeOfLastUpdate */\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"nft-staking-app/StakingContract.sol\":7387:7489  (block.timestamp - stakers[_staker].timeOfLastUpdate) *... */\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"nft-staking-app/StakingContract.sol\":7371:7518  (... */\n      tag_158\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_158:\n        /* \"nft-staking-app/StakingContract.sol\":7370:7526  ((... */\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"nft-staking-app/StakingContract.sol\":7362:7527  return (((... */\n      swap1\n      pop\n        /* \"nft-staking-app/StakingContract.sol\":7235:7535  function calculateRewards(address _staker)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_164\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_169\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_170\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_176\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_177\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_181\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_185\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_184)\n    tag_185:\n      0x60\n      swap2\n      pop\n    tag_184:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_186\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_187\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_187:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_190\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_191\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_192)\n    tag_189:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_193\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_193:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_188)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_188:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_200:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_202:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_203:\n        /* \"#utility.yul\":490:514   */\n      tag_252\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_202\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_253:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_204:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_255\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_203\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_15:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_258\n      tag_200\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":766:885   */\n    tag_257:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_259\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_204\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_205:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_206:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_262\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_205\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1381   */\n    tag_207:\n        /* \"#utility.yul\":1332:1356   */\n      tag_264\n        /* \"#utility.yul\":1350:1355   */\n      dup2\n        /* \"#utility.yul\":1332:1356   */\n      tag_206\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1325:1330   */\n      dup2\n        /* \"#utility.yul\":1322:1357   */\n      eq\n        /* \"#utility.yul\":1312:1375   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":1371:1372   */\n      0x00\n        /* \"#utility.yul\":1368:1369   */\n      dup1\n        /* \"#utility.yul\":1361:1373   */\n      revert\n        /* \"#utility.yul\":1312:1375   */\n    tag_265:\n        /* \"#utility.yul\":1259:1381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1526   */\n    tag_208:\n        /* \"#utility.yul\":1433:1438   */\n      0x00\n        /* \"#utility.yul\":1471:1477   */\n      dup2\n        /* \"#utility.yul\":1458:1478   */\n      calldataload\n        /* \"#utility.yul\":1449:1478   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1520   */\n      tag_267\n        /* \"#utility.yul\":1514:1519   */\n      dup2\n        /* \"#utility.yul\":1487:1520   */\n      tag_207\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":1387:1526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1861   */\n    tag_21:\n        /* \"#utility.yul\":1591:1597   */\n      0x00\n        /* \"#utility.yul\":1640:1642   */\n      0x20\n        /* \"#utility.yul\":1628:1637   */\n      dup3\n        /* \"#utility.yul\":1619:1626   */\n      dup5\n        /* \"#utility.yul\":1615:1638   */\n      sub\n        /* \"#utility.yul\":1611:1643   */\n      slt\n        /* \"#utility.yul\":1608:1727   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":1646:1725   */\n      tag_270\n      tag_200\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":1608:1727   */\n    tag_269:\n        /* \"#utility.yul\":1766:1767   */\n      0x00\n        /* \"#utility.yul\":1791:1844   */\n      tag_271\n        /* \"#utility.yul\":1836:1843   */\n      dup5\n        /* \"#utility.yul\":1827:1833   */\n      dup3\n        /* \"#utility.yul\":1816:1825   */\n      dup6\n        /* \"#utility.yul\":1812:1834   */\n      add\n        /* \"#utility.yul\":1791:1844   */\n      tag_208\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":1781:1844   */\n      swap2\n      pop\n        /* \"#utility.yul\":1737:1854   */\n      pop\n        /* \"#utility.yul\":1532:1861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1867:2009   */\n    tag_209:\n        /* \"#utility.yul\":1962:1968   */\n      0x00\n        /* \"#utility.yul\":1996:2001   */\n      dup2\n        /* \"#utility.yul\":1990:2002   */\n      mload\n        /* \"#utility.yul\":1980:2002   */\n      swap1\n      pop\n        /* \"#utility.yul\":1867:2009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2015:2227   */\n    tag_210:\n        /* \"#utility.yul\":2142:2153   */\n      0x00\n        /* \"#utility.yul\":2176:2182   */\n      dup3\n        /* \"#utility.yul\":2171:2174   */\n      dup3\n        /* \"#utility.yul\":2164:2183   */\n      mstore\n        /* \"#utility.yul\":2216:2220   */\n      0x20\n        /* \"#utility.yul\":2211:2214   */\n      dup3\n        /* \"#utility.yul\":2207:2221   */\n      add\n        /* \"#utility.yul\":2192:2221   */\n      swap1\n      pop\n        /* \"#utility.yul\":2015:2227   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2233:2393   */\n    tag_211:\n        /* \"#utility.yul\":2328:2332   */\n      0x00\n        /* \"#utility.yul\":2351:2354   */\n      dup2\n        /* \"#utility.yul\":2343:2354   */\n      swap1\n      pop\n        /* \"#utility.yul\":2381:2385   */\n      0x20\n        /* \"#utility.yul\":2376:2379   */\n      dup3\n        /* \"#utility.yul\":2372:2386   */\n      add\n        /* \"#utility.yul\":2364:2386   */\n      swap1\n      pop\n        /* \"#utility.yul\":2233:2393   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2399:2507   */\n    tag_212:\n        /* \"#utility.yul\":2476:2500   */\n      tag_276\n        /* \"#utility.yul\":2494:2499   */\n      dup2\n        /* \"#utility.yul\":2476:2500   */\n      tag_206\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2471:2474   */\n      dup3\n        /* \"#utility.yul\":2464:2501   */\n      mstore\n        /* \"#utility.yul\":2399:2507   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2513:2621   */\n    tag_213:\n        /* \"#utility.yul\":2590:2614   */\n      tag_278\n        /* \"#utility.yul\":2608:2613   */\n      dup2\n        /* \"#utility.yul\":2590:2614   */\n      tag_202\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2585:2588   */\n      dup3\n        /* \"#utility.yul\":2578:2615   */\n      mstore\n        /* \"#utility.yul\":2513:2621   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2703:3211   */\n    tag_214:\n        /* \"#utility.yul\":2846:2850   */\n      0x40\n        /* \"#utility.yul\":2841:2844   */\n      dup3\n        /* \"#utility.yul\":2837:2851   */\n      add\n        /* \"#utility.yul\":2935:2939   */\n      0x00\n        /* \"#utility.yul\":2928:2933   */\n      dup3\n        /* \"#utility.yul\":2924:2940   */\n      add\n        /* \"#utility.yul\":2918:2941   */\n      mload\n        /* \"#utility.yul\":2954:3017   */\n      tag_280\n        /* \"#utility.yul\":3011:3015   */\n      0x00\n        /* \"#utility.yul\":3006:3009   */\n      dup6\n        /* \"#utility.yul\":3002:3016   */\n      add\n        /* \"#utility.yul\":2988:3000   */\n      dup3\n        /* \"#utility.yul\":2954:3017   */\n      tag_212\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2861:3027   */\n      pop\n        /* \"#utility.yul\":3112:3116   */\n      0x20\n        /* \"#utility.yul\":3105:3110   */\n      dup3\n        /* \"#utility.yul\":3101:3117   */\n      add\n        /* \"#utility.yul\":3095:3118   */\n      mload\n        /* \"#utility.yul\":3131:3194   */\n      tag_281\n        /* \"#utility.yul\":3188:3192   */\n      0x20\n        /* \"#utility.yul\":3183:3186   */\n      dup6\n        /* \"#utility.yul\":3179:3193   */\n      add\n        /* \"#utility.yul\":3165:3177   */\n      dup3\n        /* \"#utility.yul\":3131:3194   */\n      tag_213\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":3037:3204   */\n      pop\n        /* \"#utility.yul\":2815:3211   */\n      pop\n        /* \"#utility.yul\":2703:3211   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3217:3508   */\n    tag_215:\n        /* \"#utility.yul\":3342:3352   */\n      0x00\n        /* \"#utility.yul\":3363:3465   */\n      tag_283\n        /* \"#utility.yul\":3461:3464   */\n      dup4\n        /* \"#utility.yul\":3453:3459   */\n      dup4\n        /* \"#utility.yul\":3363:3465   */\n      tag_214\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":3497:3501   */\n      0x40\n        /* \"#utility.yul\":3492:3495   */\n      dup4\n        /* \"#utility.yul\":3488:3502   */\n      add\n        /* \"#utility.yul\":3474:3502   */\n      swap1\n      pop\n        /* \"#utility.yul\":3217:3508   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3514:3655   */\n    tag_216:\n        /* \"#utility.yul\":3612:3616   */\n      0x00\n        /* \"#utility.yul\":3644:3648   */\n      0x20\n        /* \"#utility.yul\":3639:3642   */\n      dup3\n        /* \"#utility.yul\":3635:3649   */\n      add\n        /* \"#utility.yul\":3627:3649   */\n      swap1\n      pop\n        /* \"#utility.yul\":3514:3655   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3741:4697   */\n    tag_217:\n        /* \"#utility.yul\":3916:3919   */\n      0x00\n        /* \"#utility.yul\":3945:4027   */\n      tag_286\n        /* \"#utility.yul\":4021:4026   */\n      dup3\n        /* \"#utility.yul\":3945:4027   */\n      tag_209\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":4043:4157   */\n      tag_287\n        /* \"#utility.yul\":4150:4156   */\n      dup2\n        /* \"#utility.yul\":4145:4148   */\n      dup6\n        /* \"#utility.yul\":4043:4157   */\n      tag_210\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":4036:4157   */\n      swap4\n      pop\n        /* \"#utility.yul\":4181:4265   */\n      tag_288\n        /* \"#utility.yul\":4259:4264   */\n      dup4\n        /* \"#utility.yul\":4181:4265   */\n      tag_211\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":4288:4295   */\n      dup1\n        /* \"#utility.yul\":4319:4320   */\n      0x00\n        /* \"#utility.yul\":4304:4672   */\n    tag_289:\n        /* \"#utility.yul\":4329:4335   */\n      dup4\n        /* \"#utility.yul\":4326:4327   */\n      dup2\n        /* \"#utility.yul\":4323:4336   */\n      lt\n        /* \"#utility.yul\":4304:4672   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":4405:4411   */\n      dup2\n        /* \"#utility.yul\":4399:4412   */\n      mload\n        /* \"#utility.yul\":4432:4551   */\n      tag_292\n        /* \"#utility.yul\":4547:4550   */\n      dup9\n        /* \"#utility.yul\":4532:4545   */\n      dup3\n        /* \"#utility.yul\":4432:4551   */\n      tag_215\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":4425:4551   */\n      swap8\n      pop\n        /* \"#utility.yul\":4574:4662   */\n      tag_293\n        /* \"#utility.yul\":4655:4661   */\n      dup4\n        /* \"#utility.yul\":4574:4662   */\n      tag_216\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":4564:4662   */\n      swap3\n      pop\n        /* \"#utility.yul\":4364:4672   */\n      pop\n        /* \"#utility.yul\":4351:4352   */\n      0x01\n        /* \"#utility.yul\":4348:4349   */\n      dup2\n        /* \"#utility.yul\":4344:4353   */\n      add\n        /* \"#utility.yul\":4339:4353   */\n      swap1\n      pop\n        /* \"#utility.yul\":4304:4672   */\n      jump(tag_289)\n    tag_291:\n        /* \"#utility.yul\":4308:4322   */\n      pop\n        /* \"#utility.yul\":4688:4691   */\n      dup6\n        /* \"#utility.yul\":4681:4691   */\n      swap4\n      pop\n        /* \"#utility.yul\":3921:4697   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3741:4697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4703:5188   */\n    tag_24:\n        /* \"#utility.yul\":4902:4906   */\n      0x00\n        /* \"#utility.yul\":4940:4942   */\n      0x20\n        /* \"#utility.yul\":4929:4938   */\n      dup3\n        /* \"#utility.yul\":4925:4943   */\n      add\n        /* \"#utility.yul\":4917:4943   */\n      swap1\n      pop\n        /* \"#utility.yul\":4989:4998   */\n      dup2\n        /* \"#utility.yul\":4983:4987   */\n      dup2\n        /* \"#utility.yul\":4979:4999   */\n      sub\n        /* \"#utility.yul\":4975:4976   */\n      0x00\n        /* \"#utility.yul\":4964:4973   */\n      dup4\n        /* \"#utility.yul\":4960:4977   */\n      add\n        /* \"#utility.yul\":4953:5000   */\n      mstore\n        /* \"#utility.yul\":5017:5181   */\n      tag_295\n        /* \"#utility.yul\":5176:5180   */\n      dup2\n        /* \"#utility.yul\":5167:5173   */\n      dup5\n        /* \"#utility.yul\":5017:5181   */\n      tag_217\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":5009:5181   */\n      swap1\n      pop\n        /* \"#utility.yul\":4703:5188   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5194:5254   */\n    tag_218:\n        /* \"#utility.yul\":5222:5225   */\n      0x00\n        /* \"#utility.yul\":5243:5248   */\n      dup2\n        /* \"#utility.yul\":5236:5248   */\n      swap1\n      pop\n        /* \"#utility.yul\":5194:5254   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5260:5402   */\n    tag_219:\n        /* \"#utility.yul\":5310:5319   */\n      0x00\n        /* \"#utility.yul\":5343:5396   */\n      tag_298\n        /* \"#utility.yul\":5361:5395   */\n      tag_299\n        /* \"#utility.yul\":5370:5394   */\n      tag_300\n        /* \"#utility.yul\":5388:5393   */\n      dup5\n        /* \"#utility.yul\":5370:5394   */\n      tag_205\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":5361:5395   */\n      tag_218\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":5343:5396   */\n      tag_205\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":5330:5396   */\n      swap1\n      pop\n        /* \"#utility.yul\":5260:5402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5408:5534   */\n    tag_220:\n        /* \"#utility.yul\":5458:5467   */\n      0x00\n        /* \"#utility.yul\":5491:5528   */\n      tag_302\n        /* \"#utility.yul\":5522:5527   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      tag_219\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":5478:5528   */\n      swap1\n      pop\n        /* \"#utility.yul\":5408:5534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5681   */\n    tag_221:\n        /* \"#utility.yul\":5605:5614   */\n      0x00\n        /* \"#utility.yul\":5638:5675   */\n      tag_304\n        /* \"#utility.yul\":5669:5674   */\n      dup3\n        /* \"#utility.yul\":5638:5675   */\n      tag_220\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":5625:5675   */\n      swap1\n      pop\n        /* \"#utility.yul\":5540:5681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5687:5848   */\n    tag_222:\n        /* \"#utility.yul\":5789:5841   */\n      tag_306\n        /* \"#utility.yul\":5835:5840   */\n      dup2\n        /* \"#utility.yul\":5789:5841   */\n      tag_221\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":5784:5787   */\n      dup3\n        /* \"#utility.yul\":5777:5842   */\n      mstore\n        /* \"#utility.yul\":5687:5848   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5854:6106   */\n    tag_28:\n        /* \"#utility.yul\":5962:5966   */\n      0x00\n        /* \"#utility.yul\":6000:6002   */\n      0x20\n        /* \"#utility.yul\":5989:5998   */\n      dup3\n        /* \"#utility.yul\":5985:6003   */\n      add\n        /* \"#utility.yul\":5977:6003   */\n      swap1\n      pop\n        /* \"#utility.yul\":6013:6099   */\n      tag_308\n        /* \"#utility.yul\":6096:6097   */\n      0x00\n        /* \"#utility.yul\":6085:6094   */\n      dup4\n        /* \"#utility.yul\":6081:6098   */\n      add\n        /* \"#utility.yul\":6072:6078   */\n      dup5\n        /* \"#utility.yul\":6013:6099   */\n      tag_222\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5854:6106   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6112:6230   */\n    tag_223:\n        /* \"#utility.yul\":6199:6223   */\n      tag_310\n        /* \"#utility.yul\":6217:6222   */\n      dup2\n        /* \"#utility.yul\":6199:6223   */\n      tag_202\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":6194:6197   */\n      dup3\n        /* \"#utility.yul\":6187:6224   */\n      mstore\n        /* \"#utility.yul\":6112:6230   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6236:6678   */\n    tag_33:\n        /* \"#utility.yul\":6385:6389   */\n      0x00\n        /* \"#utility.yul\":6423:6425   */\n      0x60\n        /* \"#utility.yul\":6412:6421   */\n      dup3\n        /* \"#utility.yul\":6408:6426   */\n      add\n        /* \"#utility.yul\":6400:6426   */\n      swap1\n      pop\n        /* \"#utility.yul\":6436:6507   */\n      tag_312\n        /* \"#utility.yul\":6504:6505   */\n      0x00\n        /* \"#utility.yul\":6493:6502   */\n      dup4\n        /* \"#utility.yul\":6489:6506   */\n      add\n        /* \"#utility.yul\":6480:6486   */\n      dup7\n        /* \"#utility.yul\":6436:6507   */\n      tag_223\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":6517:6589   */\n      tag_313\n        /* \"#utility.yul\":6585:6587   */\n      0x20\n        /* \"#utility.yul\":6574:6583   */\n      dup4\n        /* \"#utility.yul\":6570:6588   */\n      add\n        /* \"#utility.yul\":6561:6567   */\n      dup6\n        /* \"#utility.yul\":6517:6589   */\n      tag_223\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":6599:6671   */\n      tag_314\n        /* \"#utility.yul\":6667:6669   */\n      0x40\n        /* \"#utility.yul\":6656:6665   */\n      dup4\n        /* \"#utility.yul\":6652:6670   */\n      add\n        /* \"#utility.yul\":6643:6649   */\n      dup5\n        /* \"#utility.yul\":6599:6671   */\n      tag_223\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":6236:6678   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6684:6802   */\n    tag_224:\n        /* \"#utility.yul\":6771:6795   */\n      tag_316\n        /* \"#utility.yul\":6789:6794   */\n      dup2\n        /* \"#utility.yul\":6771:6795   */\n      tag_206\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":6766:6769   */\n      dup3\n        /* \"#utility.yul\":6759:6796   */\n      mstore\n        /* \"#utility.yul\":6684:6802   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6808:7030   */\n    tag_38:\n        /* \"#utility.yul\":6901:6905   */\n      0x00\n        /* \"#utility.yul\":6939:6941   */\n      0x20\n        /* \"#utility.yul\":6928:6937   */\n      dup3\n        /* \"#utility.yul\":6924:6942   */\n      add\n        /* \"#utility.yul\":6916:6942   */\n      swap1\n      pop\n        /* \"#utility.yul\":6952:7023   */\n      tag_318\n        /* \"#utility.yul\":7020:7021   */\n      0x00\n        /* \"#utility.yul\":7009:7018   */\n      dup4\n        /* \"#utility.yul\":7005:7022   */\n      add\n        /* \"#utility.yul\":6996:7002   */\n      dup5\n        /* \"#utility.yul\":6952:7023   */\n      tag_224\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":6808:7030   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7036:7176   */\n    tag_225:\n        /* \"#utility.yul\":7100:7109   */\n      0x00\n        /* \"#utility.yul\":7133:7170   */\n      tag_320\n        /* \"#utility.yul\":7164:7169   */\n      dup3\n        /* \"#utility.yul\":7133:7170   */\n      tag_220\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":7120:7170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7036:7176   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7182:7341   */\n    tag_226:\n        /* \"#utility.yul\":7283:7334   */\n      tag_322\n        /* \"#utility.yul\":7328:7333   */\n      dup2\n        /* \"#utility.yul\":7283:7334   */\n      tag_225\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":7278:7281   */\n      dup3\n        /* \"#utility.yul\":7271:7335   */\n      mstore\n        /* \"#utility.yul\":7182:7341   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7347:7597   */\n    tag_45:\n        /* \"#utility.yul\":7454:7458   */\n      0x00\n        /* \"#utility.yul\":7492:7494   */\n      0x20\n        /* \"#utility.yul\":7481:7490   */\n      dup3\n        /* \"#utility.yul\":7477:7495   */\n      add\n        /* \"#utility.yul\":7469:7495   */\n      swap1\n      pop\n        /* \"#utility.yul\":7505:7590   */\n      tag_324\n        /* \"#utility.yul\":7587:7588   */\n      0x00\n        /* \"#utility.yul\":7576:7585   */\n      dup4\n        /* \"#utility.yul\":7572:7589   */\n      add\n        /* \"#utility.yul\":7563:7569   */\n      dup5\n        /* \"#utility.yul\":7505:7590   */\n      tag_226\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":7347:7597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7603:7825   */\n    tag_50:\n        /* \"#utility.yul\":7696:7700   */\n      0x00\n        /* \"#utility.yul\":7734:7736   */\n      0x20\n        /* \"#utility.yul\":7723:7732   */\n      dup3\n        /* \"#utility.yul\":7719:7737   */\n      add\n        /* \"#utility.yul\":7711:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7747:7818   */\n      tag_326\n        /* \"#utility.yul\":7815:7816   */\n      0x00\n        /* \"#utility.yul\":7804:7813   */\n      dup4\n        /* \"#utility.yul\":7800:7817   */\n      add\n        /* \"#utility.yul\":7791:7797   */\n      dup5\n        /* \"#utility.yul\":7747:7818   */\n      tag_223\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":7603:7825   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7831:8000   */\n    tag_227:\n        /* \"#utility.yul\":7915:7926   */\n      0x00\n        /* \"#utility.yul\":7949:7955   */\n      dup3\n        /* \"#utility.yul\":7944:7947   */\n      dup3\n        /* \"#utility.yul\":7937:7956   */\n      mstore\n        /* \"#utility.yul\":7989:7993   */\n      0x20\n        /* \"#utility.yul\":7984:7987   */\n      dup3\n        /* \"#utility.yul\":7980:7994   */\n      add\n        /* \"#utility.yul\":7965:7994   */\n      swap1\n      pop\n        /* \"#utility.yul\":7831:8000   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8006:8181   */\n    tag_228:\n        /* \"#utility.yul\":8146:8173   */\n      0x596f752068617665206e6f20746f6b656e73207374616b656400000000000000\n        /* \"#utility.yul\":8142:8143   */\n      0x00\n        /* \"#utility.yul\":8134:8140   */\n      dup3\n        /* \"#utility.yul\":8130:8144   */\n      add\n        /* \"#utility.yul\":8123:8174   */\n      mstore\n        /* \"#utility.yul\":8006:8181   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8187:8553   */\n    tag_229:\n        /* \"#utility.yul\":8329:8332   */\n      0x00\n        /* \"#utility.yul\":8350:8417   */\n      tag_330\n        /* \"#utility.yul\":8414:8416   */\n      0x19\n        /* \"#utility.yul\":8409:8412   */\n      dup4\n        /* \"#utility.yul\":8350:8417   */\n      tag_227\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":8343:8417   */\n      swap2\n      pop\n        /* \"#utility.yul\":8426:8519   */\n      tag_331\n        /* \"#utility.yul\":8515:8518   */\n      dup3\n        /* \"#utility.yul\":8426:8519   */\n      tag_228\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":8544:8546   */\n      0x20\n        /* \"#utility.yul\":8539:8542   */\n      dup3\n        /* \"#utility.yul\":8535:8547   */\n      add\n        /* \"#utility.yul\":8528:8547   */\n      swap1\n      pop\n        /* \"#utility.yul\":8187:8553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8559:8978   */\n    tag_57:\n        /* \"#utility.yul\":8725:8729   */\n      0x00\n        /* \"#utility.yul\":8763:8765   */\n      0x20\n        /* \"#utility.yul\":8752:8761   */\n      dup3\n        /* \"#utility.yul\":8748:8766   */\n      add\n        /* \"#utility.yul\":8740:8766   */\n      swap1\n      pop\n        /* \"#utility.yul\":8812:8821   */\n      dup2\n        /* \"#utility.yul\":8806:8810   */\n      dup2\n        /* \"#utility.yul\":8802:8822   */\n      sub\n        /* \"#utility.yul\":8798:8799   */\n      0x00\n        /* \"#utility.yul\":8787:8796   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8776:8823   */\n      mstore\n        /* \"#utility.yul\":8840:8971   */\n      tag_333\n        /* \"#utility.yul\":8966:8970   */\n      dup2\n        /* \"#utility.yul\":8840:8971   */\n      tag_229\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":8832:8971   */\n      swap1\n      pop\n        /* \"#utility.yul\":8559:8978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8984:9159   */\n    tag_230:\n        /* \"#utility.yul\":9124:9151   */\n      0x596f7520646f6e2774206f776e207468697320746f6b656e2100000000000000\n        /* \"#utility.yul\":9120:9121   */\n      0x00\n        /* \"#utility.yul\":9112:9118   */\n      dup3\n        /* \"#utility.yul\":9108:9122   */\n      add\n        /* \"#utility.yul\":9101:9152   */\n      mstore\n        /* \"#utility.yul\":8984:9159   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9165:9531   */\n    tag_231:\n        /* \"#utility.yul\":9307:9310   */\n      0x00\n        /* \"#utility.yul\":9328:9395   */\n      tag_336\n        /* \"#utility.yul\":9392:9394   */\n      0x19\n        /* \"#utility.yul\":9387:9390   */\n      dup4\n        /* \"#utility.yul\":9328:9395   */\n      tag_227\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":9321:9395   */\n      swap2\n      pop\n        /* \"#utility.yul\":9404:9497   */\n      tag_337\n        /* \"#utility.yul\":9493:9496   */\n      dup3\n        /* \"#utility.yul\":9404:9497   */\n      tag_230\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":9522:9524   */\n      0x20\n        /* \"#utility.yul\":9517:9520   */\n      dup3\n        /* \"#utility.yul\":9513:9525   */\n      add\n        /* \"#utility.yul\":9506:9525   */\n      swap1\n      pop\n        /* \"#utility.yul\":9165:9531   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9537:9956   */\n    tag_60:\n        /* \"#utility.yul\":9703:9707   */\n      0x00\n        /* \"#utility.yul\":9741:9743   */\n      0x20\n        /* \"#utility.yul\":9730:9739   */\n      dup3\n        /* \"#utility.yul\":9726:9744   */\n      add\n        /* \"#utility.yul\":9718:9744   */\n      swap1\n      pop\n        /* \"#utility.yul\":9790:9799   */\n      dup2\n        /* \"#utility.yul\":9784:9788   */\n      dup2\n        /* \"#utility.yul\":9780:9800   */\n      sub\n        /* \"#utility.yul\":9776:9777   */\n      0x00\n        /* \"#utility.yul\":9765:9774   */\n      dup4\n        /* \"#utility.yul\":9761:9778   */\n      add\n        /* \"#utility.yul\":9754:9801   */\n      mstore\n        /* \"#utility.yul\":9818:9949   */\n      tag_339\n        /* \"#utility.yul\":9944:9948   */\n      dup2\n        /* \"#utility.yul\":9818:9949   */\n      tag_231\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":9810:9949   */\n      swap1\n      pop\n        /* \"#utility.yul\":9537:9956   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9962:10142   */\n    tag_232:\n        /* \"#utility.yul\":10010:10087   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10007:10008   */\n      0x00\n        /* \"#utility.yul\":10000:10088   */\n      mstore\n        /* \"#utility.yul\":10107:10111   */\n      0x11\n        /* \"#utility.yul\":10104:10105   */\n      0x04\n        /* \"#utility.yul\":10097:10112   */\n      mstore\n        /* \"#utility.yul\":10131:10135   */\n      0x24\n        /* \"#utility.yul\":10128:10129   */\n      0x00\n        /* \"#utility.yul\":10121:10136   */\n      revert\n        /* \"#utility.yul\":10148:10339   */\n    tag_64:\n        /* \"#utility.yul\":10188:10191   */\n      0x00\n        /* \"#utility.yul\":10207:10227   */\n      tag_342\n        /* \"#utility.yul\":10225:10226   */\n      dup3\n        /* \"#utility.yul\":10207:10227   */\n      tag_202\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":10202:10227   */\n      swap2\n      pop\n        /* \"#utility.yul\":10241:10261   */\n      tag_343\n        /* \"#utility.yul\":10259:10260   */\n      dup4\n        /* \"#utility.yul\":10241:10261   */\n      tag_202\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":10236:10261   */\n      swap3\n      pop\n        /* \"#utility.yul\":10284:10285   */\n      dup3\n        /* \"#utility.yul\":10281:10282   */\n      dup3\n        /* \"#utility.yul\":10277:10286   */\n      add\n        /* \"#utility.yul\":10270:10286   */\n      swap1\n      pop\n        /* \"#utility.yul\":10305:10308   */\n      dup1\n        /* \"#utility.yul\":10302:10303   */\n      dup3\n        /* \"#utility.yul\":10299:10309   */\n      gt\n        /* \"#utility.yul\":10296:10332   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":10312:10330   */\n      tag_345\n      tag_232\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":10296:10332   */\n    tag_344:\n        /* \"#utility.yul\":10148:10339   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10345:10525   */\n    tag_70:\n        /* \"#utility.yul\":10393:10470   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10390:10391   */\n      0x00\n        /* \"#utility.yul\":10383:10471   */\n      mstore\n        /* \"#utility.yul\":10490:10494   */\n      0x32\n        /* \"#utility.yul\":10487:10488   */\n      0x04\n        /* \"#utility.yul\":10480:10495   */\n      mstore\n        /* \"#utility.yul\":10514:10518   */\n      0x24\n        /* \"#utility.yul\":10511:10512   */\n      0x00\n        /* \"#utility.yul\":10504:10519   */\n      revert\n        /* \"#utility.yul\":10531:10702   */\n    tag_81:\n        /* \"#utility.yul\":10570:10573   */\n      0x00\n        /* \"#utility.yul\":10593:10617   */\n      tag_348\n        /* \"#utility.yul\":10611:10616   */\n      dup3\n        /* \"#utility.yul\":10593:10617   */\n      tag_202\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":10584:10617   */\n      swap2\n      pop\n        /* \"#utility.yul\":10639:10643   */\n      0x00\n        /* \"#utility.yul\":10632:10637   */\n      dup3\n        /* \"#utility.yul\":10629:10644   */\n      sub\n        /* \"#utility.yul\":10626:10667   */\n      tag_349\n      jumpi\n        /* \"#utility.yul\":10647:10665   */\n      tag_350\n      tag_232\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":10626:10667   */\n    tag_349:\n        /* \"#utility.yul\":10694:10695   */\n      0x01\n        /* \"#utility.yul\":10687:10692   */\n      dup3\n        /* \"#utility.yul\":10683:10696   */\n      sub\n        /* \"#utility.yul\":10676:10696   */\n      swap1\n      pop\n        /* \"#utility.yul\":10531:10702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10708:11150   */\n    tag_83:\n        /* \"#utility.yul\":10857:10861   */\n      0x00\n        /* \"#utility.yul\":10895:10897   */\n      0x60\n        /* \"#utility.yul\":10884:10893   */\n      dup3\n        /* \"#utility.yul\":10880:10898   */\n      add\n        /* \"#utility.yul\":10872:10898   */\n      swap1\n      pop\n        /* \"#utility.yul\":10908:10979   */\n      tag_352\n        /* \"#utility.yul\":10976:10977   */\n      0x00\n        /* \"#utility.yul\":10965:10974   */\n      dup4\n        /* \"#utility.yul\":10961:10978   */\n      add\n        /* \"#utility.yul\":10952:10958   */\n      dup7\n        /* \"#utility.yul\":10908:10979   */\n      tag_224\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":10989:11061   */\n      tag_353\n        /* \"#utility.yul\":11057:11059   */\n      0x20\n        /* \"#utility.yul\":11046:11055   */\n      dup4\n        /* \"#utility.yul\":11042:11060   */\n      add\n        /* \"#utility.yul\":11033:11039   */\n      dup6\n        /* \"#utility.yul\":10989:11061   */\n      tag_224\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":11071:11143   */\n      tag_354\n        /* \"#utility.yul\":11139:11141   */\n      0x40\n        /* \"#utility.yul\":11128:11137   */\n      dup4\n        /* \"#utility.yul\":11124:11142   */\n      add\n        /* \"#utility.yul\":11115:11121   */\n      dup5\n        /* \"#utility.yul\":11071:11143   */\n      tag_223\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":10708:11150   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11156:11334   */\n    tag_233:\n        /* \"#utility.yul\":11296:11326   */\n      0x596f752068617665206e6f207265776172647320746f20636c61696d00000000\n        /* \"#utility.yul\":11292:11293   */\n      0x00\n        /* \"#utility.yul\":11284:11290   */\n      dup3\n        /* \"#utility.yul\":11280:11294   */\n      add\n        /* \"#utility.yul\":11273:11327   */\n      mstore\n        /* \"#utility.yul\":11156:11334   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11340:11706   */\n    tag_234:\n        /* \"#utility.yul\":11482:11485   */\n      0x00\n        /* \"#utility.yul\":11503:11570   */\n      tag_357\n        /* \"#utility.yul\":11567:11569   */\n      0x1c\n        /* \"#utility.yul\":11562:11565   */\n      dup4\n        /* \"#utility.yul\":11503:11570   */\n      tag_227\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":11496:11570   */\n      swap2\n      pop\n        /* \"#utility.yul\":11579:11672   */\n      tag_358\n        /* \"#utility.yul\":11668:11671   */\n      dup3\n        /* \"#utility.yul\":11579:11672   */\n      tag_233\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":11697:11699   */\n      0x20\n        /* \"#utility.yul\":11692:11695   */\n      dup3\n        /* \"#utility.yul\":11688:11700   */\n      add\n        /* \"#utility.yul\":11681:11700   */\n      swap1\n      pop\n        /* \"#utility.yul\":11340:11706   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11712:12131   */\n    tag_94:\n        /* \"#utility.yul\":11878:11882   */\n      0x00\n        /* \"#utility.yul\":11916:11918   */\n      0x20\n        /* \"#utility.yul\":11905:11914   */\n      dup3\n        /* \"#utility.yul\":11901:11919   */\n      add\n        /* \"#utility.yul\":11893:11919   */\n      swap1\n      pop\n        /* \"#utility.yul\":11965:11974   */\n      dup2\n        /* \"#utility.yul\":11959:11963   */\n      dup2\n        /* \"#utility.yul\":11955:11975   */\n      sub\n        /* \"#utility.yul\":11951:11952   */\n      0x00\n        /* \"#utility.yul\":11940:11949   */\n      dup4\n        /* \"#utility.yul\":11936:11953   */\n      add\n        /* \"#utility.yul\":11929:11976   */\n      mstore\n        /* \"#utility.yul\":11993:12124   */\n      tag_360\n        /* \"#utility.yul\":12119:12123   */\n      dup2\n        /* \"#utility.yul\":11993:12124   */\n      tag_234\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":11985:12124   */\n      swap1\n      pop\n        /* \"#utility.yul\":11712:12131   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12137:12317   */\n    tag_101:\n        /* \"#utility.yul\":12185:12262   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12182:12183   */\n      0x00\n        /* \"#utility.yul\":12175:12263   */\n      mstore\n        /* \"#utility.yul\":12282:12286   */\n      0x41\n        /* \"#utility.yul\":12279:12280   */\n      0x04\n        /* \"#utility.yul\":12272:12287   */\n      mstore\n        /* \"#utility.yul\":12306:12310   */\n      0x24\n        /* \"#utility.yul\":12303:12304   */\n      0x00\n        /* \"#utility.yul\":12296:12311   */\n      revert\n        /* \"#utility.yul\":12323:12556   */\n    tag_119:\n        /* \"#utility.yul\":12362:12365   */\n      0x00\n        /* \"#utility.yul\":12385:12409   */\n      tag_363\n        /* \"#utility.yul\":12403:12408   */\n      dup3\n        /* \"#utility.yul\":12385:12409   */\n      tag_202\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":12376:12409   */\n      swap2\n      pop\n        /* \"#utility.yul\":12431:12497   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12424:12429   */\n      dup3\n        /* \"#utility.yul\":12421:12498   */\n      sub\n        /* \"#utility.yul\":12418:12521   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":12501:12519   */\n      tag_365\n      tag_232\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":12418:12521   */\n    tag_364:\n        /* \"#utility.yul\":12548:12549   */\n      0x01\n        /* \"#utility.yul\":12541:12546   */\n      dup3\n        /* \"#utility.yul\":12537:12550   */\n      add\n        /* \"#utility.yul\":12530:12550   */\n      swap1\n      pop\n        /* \"#utility.yul\":12323:12556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12562:12705   */\n    tag_235:\n        /* \"#utility.yul\":12619:12624   */\n      0x00\n        /* \"#utility.yul\":12650:12656   */\n      dup2\n        /* \"#utility.yul\":12644:12657   */\n      mload\n        /* \"#utility.yul\":12635:12657   */\n      swap1\n      pop\n        /* \"#utility.yul\":12666:12699   */\n      tag_367\n        /* \"#utility.yul\":12693:12698   */\n      dup2\n        /* \"#utility.yul\":12666:12699   */\n      tag_207\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":12562:12705   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12711:13062   */\n    tag_136:\n        /* \"#utility.yul\":12781:12787   */\n      0x00\n        /* \"#utility.yul\":12830:12832   */\n      0x20\n        /* \"#utility.yul\":12818:12827   */\n      dup3\n        /* \"#utility.yul\":12809:12816   */\n      dup5\n        /* \"#utility.yul\":12805:12828   */\n      sub\n        /* \"#utility.yul\":12801:12833   */\n      slt\n        /* \"#utility.yul\":12798:12917   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":12836:12915   */\n      tag_370\n      tag_200\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":12798:12917   */\n    tag_369:\n        /* \"#utility.yul\":12956:12957   */\n      0x00\n        /* \"#utility.yul\":12981:13045   */\n      tag_371\n        /* \"#utility.yul\":13037:13044   */\n      dup5\n        /* \"#utility.yul\":13028:13034   */\n      dup3\n        /* \"#utility.yul\":13017:13026   */\n      dup6\n        /* \"#utility.yul\":13013:13035   */\n      add\n        /* \"#utility.yul\":12981:13045   */\n      tag_235\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":12971:13045   */\n      swap2\n      pop\n        /* \"#utility.yul\":12927:13055   */\n      pop\n        /* \"#utility.yul\":12711:13062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13068:13249   */\n    tag_236:\n        /* \"#utility.yul\":13208:13241   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":13204:13205   */\n      0x00\n        /* \"#utility.yul\":13196:13202   */\n      dup3\n        /* \"#utility.yul\":13192:13206   */\n      add\n        /* \"#utility.yul\":13185:13242   */\n      mstore\n        /* \"#utility.yul\":13068:13249   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13255:13621   */\n    tag_237:\n        /* \"#utility.yul\":13397:13400   */\n      0x00\n        /* \"#utility.yul\":13418:13485   */\n      tag_374\n        /* \"#utility.yul\":13482:13484   */\n      0x1f\n        /* \"#utility.yul\":13477:13480   */\n      dup4\n        /* \"#utility.yul\":13418:13485   */\n      tag_227\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":13411:13485   */\n      swap2\n      pop\n        /* \"#utility.yul\":13494:13587   */\n      tag_375\n        /* \"#utility.yul\":13583:13586   */\n      dup3\n        /* \"#utility.yul\":13494:13587   */\n      tag_236\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":13612:13614   */\n      0x20\n        /* \"#utility.yul\":13607:13610   */\n      dup3\n        /* \"#utility.yul\":13603:13615   */\n      add\n        /* \"#utility.yul\":13596:13615   */\n      swap1\n      pop\n        /* \"#utility.yul\":13255:13621   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13627:14046   */\n    tag_152:\n        /* \"#utility.yul\":13793:13797   */\n      0x00\n        /* \"#utility.yul\":13831:13833   */\n      0x20\n        /* \"#utility.yul\":13820:13829   */\n      dup3\n        /* \"#utility.yul\":13816:13834   */\n      add\n        /* \"#utility.yul\":13808:13834   */\n      swap1\n      pop\n        /* \"#utility.yul\":13880:13889   */\n      dup2\n        /* \"#utility.yul\":13874:13878   */\n      dup2\n        /* \"#utility.yul\":13870:13890   */\n      sub\n        /* \"#utility.yul\":13866:13867   */\n      0x00\n        /* \"#utility.yul\":13855:13864   */\n      dup4\n        /* \"#utility.yul\":13851:13868   */\n      add\n        /* \"#utility.yul\":13844:13891   */\n      mstore\n        /* \"#utility.yul\":13908:14039   */\n      tag_377\n        /* \"#utility.yul\":14034:14038   */\n      dup2\n        /* \"#utility.yul\":13908:14039   */\n      tag_237\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":13900:14039   */\n      swap1\n      pop\n        /* \"#utility.yul\":13627:14046   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14052:14246   */\n    tag_155:\n        /* \"#utility.yul\":14092:14096   */\n      0x00\n        /* \"#utility.yul\":14112:14132   */\n      tag_379\n        /* \"#utility.yul\":14130:14131   */\n      dup3\n        /* \"#utility.yul\":14112:14132   */\n      tag_202\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":14107:14132   */\n      swap2\n      pop\n        /* \"#utility.yul\":14146:14166   */\n      tag_380\n        /* \"#utility.yul\":14164:14165   */\n      dup4\n        /* \"#utility.yul\":14146:14166   */\n      tag_202\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":14141:14166   */\n      swap3\n      pop\n        /* \"#utility.yul\":14190:14191   */\n      dup3\n        /* \"#utility.yul\":14187:14188   */\n      dup3\n        /* \"#utility.yul\":14183:14192   */\n      sub\n        /* \"#utility.yul\":14175:14192   */\n      swap1\n      pop\n        /* \"#utility.yul\":14214:14215   */\n      dup2\n        /* \"#utility.yul\":14208:14212   */\n      dup2\n        /* \"#utility.yul\":14205:14216   */\n      gt\n        /* \"#utility.yul\":14202:14239   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":14219:14237   */\n      tag_382\n      tag_232\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":14202:14239   */\n    tag_381:\n        /* \"#utility.yul\":14052:14246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14252:14662   */\n    tag_157:\n        /* \"#utility.yul\":14292:14299   */\n      0x00\n        /* \"#utility.yul\":14315:14335   */\n      tag_384\n        /* \"#utility.yul\":14333:14334   */\n      dup3\n        /* \"#utility.yul\":14315:14335   */\n      tag_202\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":14310:14335   */\n      swap2\n      pop\n        /* \"#utility.yul\":14349:14369   */\n      tag_385\n        /* \"#utility.yul\":14367:14368   */\n      dup4\n        /* \"#utility.yul\":14349:14369   */\n      tag_202\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":14344:14369   */\n      swap3\n      pop\n        /* \"#utility.yul\":14404:14405   */\n      dup3\n        /* \"#utility.yul\":14401:14402   */\n      dup3\n        /* \"#utility.yul\":14397:14406   */\n      mul\n        /* \"#utility.yul\":14426:14456   */\n      tag_386\n        /* \"#utility.yul\":14444:14455   */\n      dup2\n        /* \"#utility.yul\":14426:14456   */\n      tag_202\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":14415:14456   */\n      swap2\n      pop\n        /* \"#utility.yul\":14605:14606   */\n      dup3\n        /* \"#utility.yul\":14596:14603   */\n      dup3\n        /* \"#utility.yul\":14592:14607   */\n      div\n        /* \"#utility.yul\":14589:14590   */\n      dup5\n        /* \"#utility.yul\":14586:14608   */\n      eq\n        /* \"#utility.yul\":14566:14567   */\n      dup4\n        /* \"#utility.yul\":14559:14568   */\n      iszero\n        /* \"#utility.yul\":14539:14622   */\n      or\n        /* \"#utility.yul\":14516:14655   */\n      tag_387\n      jumpi\n        /* \"#utility.yul\":14635:14653   */\n      tag_388\n      tag_232\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":14516:14655   */\n    tag_387:\n        /* \"#utility.yul\":14300:14662   */\n      pop\n        /* \"#utility.yul\":14252:14662   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14668:14848   */\n    tag_238:\n        /* \"#utility.yul\":14716:14793   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14713:14714   */\n      0x00\n        /* \"#utility.yul\":14706:14794   */\n      mstore\n        /* \"#utility.yul\":14813:14817   */\n      0x12\n        /* \"#utility.yul\":14810:14811   */\n      0x04\n        /* \"#utility.yul\":14803:14818   */\n      mstore\n        /* \"#utility.yul\":14837:14841   */\n      0x24\n        /* \"#utility.yul\":14834:14835   */\n      0x00\n        /* \"#utility.yul\":14827:14842   */\n      revert\n        /* \"#utility.yul\":14854:15039   */\n    tag_160:\n        /* \"#utility.yul\":14894:14895   */\n      0x00\n        /* \"#utility.yul\":14911:14931   */\n      tag_391\n        /* \"#utility.yul\":14929:14930   */\n      dup3\n        /* \"#utility.yul\":14911:14931   */\n      tag_202\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":14906:14931   */\n      swap2\n      pop\n        /* \"#utility.yul\":14945:14965   */\n      tag_392\n        /* \"#utility.yul\":14963:14964   */\n      dup4\n        /* \"#utility.yul\":14945:14965   */\n      tag_202\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":14940:14965   */\n      swap3\n      pop\n        /* \"#utility.yul\":14984:14985   */\n      dup3\n        /* \"#utility.yul\":14974:15009   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":14989:15007   */\n      tag_394\n      tag_238\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":14974:15009   */\n    tag_393:\n        /* \"#utility.yul\":15031:15032   */\n      dup3\n        /* \"#utility.yul\":15028:15029   */\n      dup3\n        /* \"#utility.yul\":15024:15033   */\n      div\n        /* \"#utility.yul\":15019:15033   */\n      swap1\n      pop\n        /* \"#utility.yul\":14854:15039   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15045:15377   */\n    tag_165:\n        /* \"#utility.yul\":15166:15170   */\n      0x00\n        /* \"#utility.yul\":15204:15206   */\n      0x40\n        /* \"#utility.yul\":15193:15202   */\n      dup3\n        /* \"#utility.yul\":15189:15207   */\n      add\n        /* \"#utility.yul\":15181:15207   */\n      swap1\n      pop\n        /* \"#utility.yul\":15217:15288   */\n      tag_396\n        /* \"#utility.yul\":15285:15286   */\n      0x00\n        /* \"#utility.yul\":15274:15283   */\n      dup4\n        /* \"#utility.yul\":15270:15287   */\n      add\n        /* \"#utility.yul\":15261:15267   */\n      dup6\n        /* \"#utility.yul\":15217:15288   */\n      tag_224\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":15298:15370   */\n      tag_397\n        /* \"#utility.yul\":15366:15368   */\n      0x20\n        /* \"#utility.yul\":15355:15364   */\n      dup4\n        /* \"#utility.yul\":15351:15369   */\n      add\n        /* \"#utility.yul\":15342:15348   */\n      dup5\n        /* \"#utility.yul\":15298:15370   */\n      tag_223\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":15045:15377   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15383:15473   */\n    tag_239:\n        /* \"#utility.yul\":15417:15424   */\n      0x00\n        /* \"#utility.yul\":15460:15465   */\n      dup2\n        /* \"#utility.yul\":15453:15466   */\n      iszero\n        /* \"#utility.yul\":15446:15467   */\n      iszero\n        /* \"#utility.yul\":15435:15467   */\n      swap1\n      pop\n        /* \"#utility.yul\":15383:15473   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15479:15595   */\n    tag_240:\n        /* \"#utility.yul\":15549:15570   */\n      tag_400\n        /* \"#utility.yul\":15564:15569   */\n      dup2\n        /* \"#utility.yul\":15549:15570   */\n      tag_239\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":15542:15547   */\n      dup2\n        /* \"#utility.yul\":15539:15571   */\n      eq\n        /* \"#utility.yul\":15529:15589   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":15585:15586   */\n      0x00\n        /* \"#utility.yul\":15582:15583   */\n      dup1\n        /* \"#utility.yul\":15575:15587   */\n      revert\n        /* \"#utility.yul\":15529:15589   */\n    tag_401:\n        /* \"#utility.yul\":15479:15595   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15601:15738   */\n    tag_241:\n        /* \"#utility.yul\":15655:15660   */\n      0x00\n        /* \"#utility.yul\":15686:15692   */\n      dup2\n        /* \"#utility.yul\":15680:15693   */\n      mload\n        /* \"#utility.yul\":15671:15693   */\n      swap1\n      pop\n        /* \"#utility.yul\":15702:15732   */\n      tag_403\n        /* \"#utility.yul\":15726:15731   */\n      dup2\n        /* \"#utility.yul\":15702:15732   */\n      tag_240\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":15601:15738   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15744:16089   */\n    tag_172:\n        /* \"#utility.yul\":15811:15817   */\n      0x00\n        /* \"#utility.yul\":15860:15862   */\n      0x20\n        /* \"#utility.yul\":15848:15857   */\n      dup3\n        /* \"#utility.yul\":15839:15846   */\n      dup5\n        /* \"#utility.yul\":15835:15858   */\n      sub\n        /* \"#utility.yul\":15831:15863   */\n      slt\n        /* \"#utility.yul\":15828:15947   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":15866:15945   */\n      tag_406\n      tag_200\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":15828:15947   */\n    tag_405:\n        /* \"#utility.yul\":15986:15987   */\n      0x00\n        /* \"#utility.yul\":16011:16072   */\n      tag_407\n        /* \"#utility.yul\":16064:16071   */\n      dup5\n        /* \"#utility.yul\":16055:16061   */\n      dup3\n        /* \"#utility.yul\":16044:16053   */\n      dup6\n        /* \"#utility.yul\":16040:16062   */\n      add\n        /* \"#utility.yul\":16011:16072   */\n      tag_241\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":16001:16072   */\n      swap2\n      pop\n        /* \"#utility.yul\":15957:16082   */\n      pop\n        /* \"#utility.yul\":15744:16089   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16095:16193   */\n    tag_242:\n        /* \"#utility.yul\":16146:16152   */\n      0x00\n        /* \"#utility.yul\":16180:16185   */\n      dup2\n        /* \"#utility.yul\":16174:16186   */\n      mload\n        /* \"#utility.yul\":16164:16186   */\n      swap1\n      pop\n        /* \"#utility.yul\":16095:16193   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16199:16346   */\n    tag_243:\n        /* \"#utility.yul\":16300:16311   */\n      0x00\n        /* \"#utility.yul\":16337:16340   */\n      dup2\n        /* \"#utility.yul\":16322:16340   */\n      swap1\n      pop\n        /* \"#utility.yul\":16199:16346   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16352:16598   */\n    tag_244:\n        /* \"#utility.yul\":16433:16434   */\n      0x00\n        /* \"#utility.yul\":16443:16556   */\n    tag_411:\n        /* \"#utility.yul\":16457:16463   */\n      dup4\n        /* \"#utility.yul\":16454:16455   */\n      dup2\n        /* \"#utility.yul\":16451:16464   */\n      lt\n        /* \"#utility.yul\":16443:16556   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":16542:16543   */\n      dup1\n        /* \"#utility.yul\":16537:16540   */\n      dup3\n        /* \"#utility.yul\":16533:16544   */\n      add\n        /* \"#utility.yul\":16527:16545   */\n      mload\n        /* \"#utility.yul\":16523:16524   */\n      dup2\n        /* \"#utility.yul\":16518:16521   */\n      dup5\n        /* \"#utility.yul\":16514:16525   */\n      add\n        /* \"#utility.yul\":16507:16546   */\n      mstore\n        /* \"#utility.yul\":16479:16481   */\n      0x20\n        /* \"#utility.yul\":16476:16477   */\n      dup2\n        /* \"#utility.yul\":16472:16482   */\n      add\n        /* \"#utility.yul\":16467:16482   */\n      swap1\n      pop\n        /* \"#utility.yul\":16443:16556   */\n      jump(tag_411)\n    tag_413:\n        /* \"#utility.yul\":16590:16591   */\n      0x00\n        /* \"#utility.yul\":16581:16587   */\n      dup5\n        /* \"#utility.yul\":16576:16579   */\n      dup5\n        /* \"#utility.yul\":16572:16588   */\n      add\n        /* \"#utility.yul\":16565:16592   */\n      mstore\n        /* \"#utility.yul\":16414:16598   */\n      pop\n        /* \"#utility.yul\":16352:16598   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16604:16990   */\n    tag_245:\n        /* \"#utility.yul\":16708:16711   */\n      0x00\n        /* \"#utility.yul\":16736:16774   */\n      tag_415\n        /* \"#utility.yul\":16768:16773   */\n      dup3\n        /* \"#utility.yul\":16736:16774   */\n      tag_242\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":16790:16878   */\n      tag_416\n        /* \"#utility.yul\":16871:16877   */\n      dup2\n        /* \"#utility.yul\":16866:16869   */\n      dup6\n        /* \"#utility.yul\":16790:16878   */\n      tag_243\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":16783:16878   */\n      swap4\n      pop\n        /* \"#utility.yul\":16887:16952   */\n      tag_417\n        /* \"#utility.yul\":16945:16951   */\n      dup2\n        /* \"#utility.yul\":16940:16943   */\n      dup6\n        /* \"#utility.yul\":16933:16937   */\n      0x20\n        /* \"#utility.yul\":16926:16931   */\n      dup7\n        /* \"#utility.yul\":16922:16938   */\n      add\n        /* \"#utility.yul\":16887:16952   */\n      tag_244\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":16977:16983   */\n      dup1\n        /* \"#utility.yul\":16972:16975   */\n      dup5\n        /* \"#utility.yul\":16968:16984   */\n      add\n        /* \"#utility.yul\":16961:16984   */\n      swap2\n      pop\n        /* \"#utility.yul\":16712:16990   */\n      pop\n        /* \"#utility.yul\":16604:16990   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16996:17267   */\n    tag_182:\n        /* \"#utility.yul\":17126:17129   */\n      0x00\n        /* \"#utility.yul\":17148:17241   */\n      tag_419\n        /* \"#utility.yul\":17237:17240   */\n      dup3\n        /* \"#utility.yul\":17228:17234   */\n      dup5\n        /* \"#utility.yul\":17148:17241   */\n      tag_245\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":17141:17241   */\n      swap2\n      pop\n        /* \"#utility.yul\":17258:17261   */\n      dup2\n        /* \"#utility.yul\":17251:17261   */\n      swap1\n      pop\n        /* \"#utility.yul\":16996:17267   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220be0b697aac71e3188c0985d7f5c31f802e52675e8521935fec264a41d6090a0b64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_886": {
									"entryPoint": null,
									"id": 886,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$142_fromMemory": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC721_$585_fromMemory": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC721_$585t_contract$_IERC20_$142_fromMemory": {
									"entryPoint": 365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$142": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC721_$585": {
									"entryPoint": 233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 179,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$142": {
									"entryPoint": 318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC721_$585": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2039:8",
										"nodeType": "YulBlock",
										"src": "0:2039:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "628:51:8",
													"nodeType": "YulBlock",
													"src": "628:51:8",
													"statements": [
														{
															"nativeSrc": "638:35:8",
															"nodeType": "YulAssignment",
															"src": "638:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "667:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "667:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "649:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "649:17:8"
																},
																"nativeSrc": "649:24:8",
																"nodeType": "YulFunctionCall",
																"src": "649:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "638:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "638:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC721_$585",
												"nativeSrc": "568:111:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "610:5:8",
														"nodeType": "YulTypedName",
														"src": "610:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "620:7:8",
														"nodeType": "YulTypedName",
														"src": "620:7:8",
														"type": ""
													}
												],
												"src": "568:111:8"
											},
											{
												"body": {
													"nativeSrc": "743:94:8",
													"nodeType": "YulBlock",
													"src": "743:94:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "815:16:8",
																"nodeType": "YulBlock",
																"src": "815:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:8",
																					"nodeType": "YulLiteral",
																					"src": "824:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "827:1:8",
																					"nodeType": "YulLiteral",
																					"src": "827:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "817:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "817:6:8"
																			},
																			"nativeSrc": "817:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "817:12:8"
																		},
																		"nativeSrc": "817:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "817:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "766:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "766:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "806:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "806:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC721_$585",
																					"nativeSrc": "773:32:8",
																					"nodeType": "YulIdentifier",
																					"src": "773:32:8"
																				},
																				"nativeSrc": "773:39:8",
																				"nodeType": "YulFunctionCall",
																				"src": "773:39:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "763:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "763:2:8"
																		},
																		"nativeSrc": "763:50:8",
																		"nodeType": "YulFunctionCall",
																		"src": "763:50:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "756:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "756:6:8"
																},
																"nativeSrc": "756:58:8",
																"nodeType": "YulFunctionCall",
																"src": "756:58:8"
															},
															"nativeSrc": "753:78:8",
															"nodeType": "YulIf",
															"src": "753:78:8"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC721_$585",
												"nativeSrc": "685:152:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "736:5:8",
														"nodeType": "YulTypedName",
														"src": "736:5:8",
														"type": ""
													}
												],
												"src": "685:152:8"
											},
											{
												"body": {
													"nativeSrc": "921:95:8",
													"nodeType": "YulBlock",
													"src": "921:95:8",
													"statements": [
														{
															"nativeSrc": "931:22:8",
															"nodeType": "YulAssignment",
															"src": "931:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "946:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "946:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "940:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "940:5:8"
																},
																"nativeSrc": "940:13:8",
																"nodeType": "YulFunctionCall",
																"src": "940:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "931:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "931:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1004:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1004:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC721_$585",
																	"nativeSrc": "962:41:8",
																	"nodeType": "YulIdentifier",
																	"src": "962:41:8"
																},
																"nativeSrc": "962:48:8",
																"nodeType": "YulFunctionCall",
																"src": "962:48:8"
															},
															"nativeSrc": "962:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "962:48:8"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC721_$585_fromMemory",
												"nativeSrc": "843:173:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "899:6:8",
														"nodeType": "YulTypedName",
														"src": "899:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "907:3:8",
														"nodeType": "YulTypedName",
														"src": "907:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "915:5:8",
														"nodeType": "YulTypedName",
														"src": "915:5:8",
														"type": ""
													}
												],
												"src": "843:173:8"
											},
											{
												"body": {
													"nativeSrc": "1081:51:8",
													"nodeType": "YulBlock",
													"src": "1081:51:8",
													"statements": [
														{
															"nativeSrc": "1091:35:8",
															"nodeType": "YulAssignment",
															"src": "1091:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1120:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1120:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "1102:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1102:17:8"
																},
																"nativeSrc": "1102:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1102:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1091:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1091:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$142",
												"nativeSrc": "1022:110:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1063:5:8",
														"nodeType": "YulTypedName",
														"src": "1063:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1073:7:8",
														"nodeType": "YulTypedName",
														"src": "1073:7:8",
														"type": ""
													}
												],
												"src": "1022:110:8"
											},
											{
												"body": {
													"nativeSrc": "1195:93:8",
													"nodeType": "YulBlock",
													"src": "1195:93:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1266:16:8",
																"nodeType": "YulBlock",
																"src": "1266:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1275:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1275:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1278:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1278:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1268:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1268:6:8"
																			},
																			"nativeSrc": "1268:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1268:12:8"
																		},
																		"nativeSrc": "1268:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1268:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1218:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1218:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1257:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1257:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$142",
																					"nativeSrc": "1225:31:8",
																					"nodeType": "YulIdentifier",
																					"src": "1225:31:8"
																				},
																				"nativeSrc": "1225:38:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1225:38:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1215:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1215:2:8"
																		},
																		"nativeSrc": "1215:49:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1215:49:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1208:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:8"
																},
																"nativeSrc": "1208:57:8",
																"nodeType": "YulFunctionCall",
																"src": "1208:57:8"
															},
															"nativeSrc": "1205:77:8",
															"nodeType": "YulIf",
															"src": "1205:77:8"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$142",
												"nativeSrc": "1138:150:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1188:5:8",
														"nodeType": "YulTypedName",
														"src": "1188:5:8",
														"type": ""
													}
												],
												"src": "1138:150:8"
											},
											{
												"body": {
													"nativeSrc": "1371:94:8",
													"nodeType": "YulBlock",
													"src": "1371:94:8",
													"statements": [
														{
															"nativeSrc": "1381:22:8",
															"nodeType": "YulAssignment",
															"src": "1381:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1396:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1396:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1390:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1390:5:8"
																},
																"nativeSrc": "1390:13:8",
																"nodeType": "YulFunctionCall",
																"src": "1390:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1381:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1381:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1453:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1453:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$142",
																	"nativeSrc": "1412:40:8",
																	"nodeType": "YulIdentifier",
																	"src": "1412:40:8"
																},
																"nativeSrc": "1412:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1412:47:8"
															},
															"nativeSrc": "1412:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1412:47:8"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$142_fromMemory",
												"nativeSrc": "1294:171:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1349:6:8",
														"nodeType": "YulTypedName",
														"src": "1349:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1357:3:8",
														"nodeType": "YulTypedName",
														"src": "1357:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1365:5:8",
														"nodeType": "YulTypedName",
														"src": "1365:5:8",
														"type": ""
													}
												],
												"src": "1294:171:8"
											},
											{
												"body": {
													"nativeSrc": "1594:442:8",
													"nodeType": "YulBlock",
													"src": "1594:442:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1640:83:8",
																"nodeType": "YulBlock",
																"src": "1640:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1642:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1642:77:8"
																			},
																			"nativeSrc": "1642:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1642:79:8"
																		},
																		"nativeSrc": "1642:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1642:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1615:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1615:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1624:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1624:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1611:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1611:3:8"
																		},
																		"nativeSrc": "1611:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1611:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1636:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1636:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1607:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1607:3:8"
																},
																"nativeSrc": "1607:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1607:32:8"
															},
															"nativeSrc": "1604:119:8",
															"nodeType": "YulIf",
															"src": "1604:119:8"
														},
														{
															"nativeSrc": "1733:143:8",
															"nodeType": "YulBlock",
															"src": "1733:143:8",
															"statements": [
																{
																	"nativeSrc": "1748:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1748:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1762:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1762:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1752:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1752:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1777:89:8",
																	"nodeType": "YulAssignment",
																	"src": "1777:89:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1838:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1838:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1849:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1849:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1834:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1834:3:8"
																				},
																				"nativeSrc": "1834:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1834:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1858:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1858:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC721_$585_fromMemory",
																			"nativeSrc": "1787:46:8",
																			"nodeType": "YulIdentifier",
																			"src": "1787:46:8"
																		},
																		"nativeSrc": "1787:79:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1787:79:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1777:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1886:143:8",
															"nodeType": "YulBlock",
															"src": "1886:143:8",
															"statements": [
																{
																	"nativeSrc": "1901:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1901:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1915:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1915:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1905:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1905:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1931:88:8",
																	"nodeType": "YulAssignment",
																	"src": "1931:88:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1991:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1991:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2002:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2002:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1987:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1987:3:8"
																				},
																				"nativeSrc": "1987:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1987:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2011:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2011:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$142_fromMemory",
																			"nativeSrc": "1941:45:8",
																			"nodeType": "YulIdentifier",
																			"src": "1941:45:8"
																		},
																		"nativeSrc": "1941:78:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1941:78:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1931:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1931:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC721_$585t_contract$_IERC20_$142_fromMemory",
												"nativeSrc": "1471:565:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1556:9:8",
														"nodeType": "YulTypedName",
														"src": "1556:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1567:7:8",
														"nodeType": "YulTypedName",
														"src": "1567:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1579:6:8",
														"nodeType": "YulTypedName",
														"src": "1579:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1587:6:8",
														"nodeType": "YulTypedName",
														"src": "1587:6:8",
														"type": ""
													}
												],
												"src": "1471:565:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC721_$585(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC721_$585(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC721_$585(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC721_$585_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC721_$585(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$142(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$142(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$142(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$142_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$142(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC721_$585t_contract$_IERC20_$142_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC721_$585_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$142_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405261271060015534801562000016575f80fd5b5060405162001f4838038062001f4883398181016040528101906200003c91906200016d565b60015f819055508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050620001b2565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620000e282620000b7565b9050919050565b5f620000f582620000d6565b9050919050565b6200010781620000e9565b811462000112575f80fd5b50565b5f815190506200012581620000fc565b92915050565b5f6200013782620000d6565b9050919050565b62000149816200012b565b811462000154575f80fd5b50565b5f8151905062000167816200013e565b92915050565b5f8060408385031215620001865762000185620000b3565b5b5f620001958582860162000115565b9250506020620001a88582860162000157565b9150509250929050565b60805160a051611d58620001f05f395f818161062501528181610bb901528181610cfd0152610deb01525f8181610829015261104e0152611d585ff3fe608060405234801561000f575f80fd5b5060043610610091575f3560e01c80639168ae72116100645780639168ae7214610109578063940670451461013b578063a694fc3a1461016b578063d1af0c7d14610187578063f854a27f146101a557610091565b80632e1a7d4d14610095578063372500ab146100b157806363c28db1146100bb5780636588103b146100eb575b5f80fd5b6100af60048036038101906100aa9190611507565b6101d5565b005b6100b96106ff565b005b6100d560048036038101906100d0919061158c565b610870565b6040516100e291906116aa565b60405180910390f35b6100f3610bb7565b6040516101009190611725565b60405180910390f35b610123600480360381019061011e919061158c565b610bdb565b6040516101329392919061174d565b60405180910390f35b61015560048036038101906101509190611507565b610c01565b6040516101629190611791565b60405180910390f35b61018560048036038101906101809190611507565b610c31565b005b61018f61104c565b60405161019c91906117ca565b60405180910390f35b6101bf60048036038101906101ba919061158c565b611070565b6040516101cc91906117e3565b60405180910390f35b6101dd6110d1565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01541161025e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025590611856565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1660035f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f3906118be565b60405180910390fd5b5f6103063361111e565b90508060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015f8282546103579190611909565b925050819055505f805b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101805490508110156104e1578360025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010182815481106103ff576103fe61193c565b5b905f5260205f209060020201600101541480156104c757505f73ffffffffffffffffffffffffffffffffffffffff1660025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010182815481106104805761047f61193c565b5b905f5260205f2090600202015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156104d4578091506104e1565b8080600101915050610361565b505f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010182815481106105355761053461193c565b5b905f5260205f2090600202015f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8154809291906105cf90611969565b91905055505f60035f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3033866040518463ffffffff1660e01b815260040161068093929190611990565b5f604051808303815f87803b158015610697575f80fd5b505af11580156106a9573d5f803e3d5ffd5b505050504260025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206002018190555050506106fc6111d6565b50565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015461074a3361111e565b6107549190611909565b90505f8111610798576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078f90611a0f565b60405180910390fd5b4260025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600201819055505f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003018190555061086d33827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166111df9092919063ffffffff16565b50565b60605f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01541115610b5b575f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015467ffffffffffffffff81111561091357610912611a2d565b5b60405190808252806020026020018201604052801561094c57816020015b6109396114a2565b8152602001906001900390816109315790505b5090505f805b60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010180549050811015610b50575f73ffffffffffffffffffffffffffffffffffffffff1660025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001018281548110610a0657610a0561193c565b5b905f5260205f2090600202015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b435760025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001018181548110610aa157610aa061193c565b5b905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050838381518110610b2957610b2861193c565b5b60200260200101819052508180610b3f90611a5a565b9250505b8080600101915050610952565b508192505050610bb2565b5f67ffffffffffffffff811115610b7557610b74611a2d565b5b604051908082528060200260200182016040528015610bae57816020015b610b9b6114a2565b815260200190600190039081610b935790505b5090505b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6002602052805f5260405f205f91509050805f0154908060020154908060030154905083565b6003602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c396110d1565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01541115610ce4575f610c8a3361111e565b90508060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015f828254610cdb9190611909565b92505081905550505b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401610d5491906117e3565b602060405180830381865afa158015610d6f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d939190611ab5565b73ffffffffffffffffffffffffffffffffffffffff1614610de9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de0906118be565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610e4693929190611990565b5f604051808303815f87803b158015610e5d575f80fd5b505af1158015610e6f573d5f803e3d5ffd5b505050505f60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815250905060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010181908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f815480929190610fa790611a5a565b91905055503360035f8481526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504260025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060020181905550506110496111d6565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600301546110bc8461111e565b6110c69190611909565b905080915050919050565b60025f5403611115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110c90611b2a565b60405180910390fd5b60025f81905550565b5f610e1060015460025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015460025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060020154426111b19190611b48565b6111bb9190611b7b565b6111c59190611b7b565b6111cf9190611be9565b9050919050565b60015f81905550565b611259838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611212929190611c19565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061125e565b505050565b5f611288828473ffffffffffffffffffffffffffffffffffffffff166112f390919063ffffffff16565b90505f8151141580156112ac5750808060200190518101906112aa9190611c75565b155b156112ee57826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016112e59190611791565b60405180910390fd5b505050565b606061130083835f611308565b905092915050565b60608147101561134f57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016113469190611791565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516113779190611d0c565b5f6040518083038185875af1925050503d805f81146113b1576040519150601f19603f3d011682016040523d82523d5f602084013e6113b6565b606091505b50915091506113c68683836113d1565b925050509392505050565b6060826113e6576113e18261145e565b611456565b5f825114801561140c57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561144e57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016114459190611791565b60405180910390fd5b819050611457565b5b9392505050565b5f815111156114705780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81525090565b5f80fd5b5f819050919050565b6114e6816114d4565b81146114f0575f80fd5b50565b5f81359050611501816114dd565b92915050565b5f6020828403121561151c5761151b6114d0565b5b5f611529848285016114f3565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61155b82611532565b9050919050565b61156b81611551565b8114611575575f80fd5b50565b5f8135905061158681611562565b92915050565b5f602082840312156115a1576115a06114d0565b5b5f6115ae84828501611578565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6115e981611551565b82525050565b6115f8816114d4565b82525050565b604082015f8201516116125f8501826115e0565b50602082015161162560208501826115ef565b50505050565b5f61163683836115fe565b60408301905092915050565b5f602082019050919050565b5f611658826115b7565b61166281856115c1565b935061166d836115d1565b805f5b8381101561169d578151611684888261162b565b975061168f83611642565b925050600181019050611670565b5085935050505092915050565b5f6020820190508181035f8301526116c2818461164e565b905092915050565b5f819050919050565b5f6116ed6116e86116e384611532565b6116ca565b611532565b9050919050565b5f6116fe826116d3565b9050919050565b5f61170f826116f4565b9050919050565b61171f81611705565b82525050565b5f6020820190506117385f830184611716565b92915050565b611747816114d4565b82525050565b5f6060820190506117605f83018661173e565b61176d602083018561173e565b61177a604083018461173e565b949350505050565b61178b81611551565b82525050565b5f6020820190506117a45f830184611782565b92915050565b5f6117b4826116f4565b9050919050565b6117c4816117aa565b82525050565b5f6020820190506117dd5f8301846117bb565b92915050565b5f6020820190506117f65f83018461173e565b92915050565b5f82825260208201905092915050565b7f596f752068617665206e6f20746f6b656e73207374616b6564000000000000005f82015250565b5f6118406019836117fc565b915061184b8261180c565b602082019050919050565b5f6020820190508181035f83015261186d81611834565b9050919050565b7f596f7520646f6e2774206f776e207468697320746f6b656e21000000000000005f82015250565b5f6118a86019836117fc565b91506118b382611874565b602082019050919050565b5f6020820190508181035f8301526118d58161189c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611913826114d4565b915061191e836114d4565b9250828201905080821115611936576119356118dc565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f611973826114d4565b91505f8203611985576119846118dc565b5b600182039050919050565b5f6060820190506119a35f830186611782565b6119b06020830185611782565b6119bd604083018461173e565b949350505050565b7f596f752068617665206e6f207265776172647320746f20636c61696d000000005f82015250565b5f6119f9601c836117fc565b9150611a04826119c5565b602082019050919050565b5f6020820190508181035f830152611a26816119ed565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f611a64826114d4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a9657611a956118dc565b5b600182019050919050565b5f81519050611aaf81611562565b92915050565b5f60208284031215611aca57611ac96114d0565b5b5f611ad784828501611aa1565b91505092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611b14601f836117fc565b9150611b1f82611ae0565b602082019050919050565b5f6020820190508181035f830152611b4181611b08565b9050919050565b5f611b52826114d4565b9150611b5d836114d4565b9250828203905081811115611b7557611b746118dc565b5b92915050565b5f611b85826114d4565b9150611b90836114d4565b9250828202611b9e816114d4565b91508282048414831517611bb557611bb46118dc565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611bf3826114d4565b9150611bfe836114d4565b925082611c0e57611c0d611bbc565b5b828204905092915050565b5f604082019050611c2c5f830185611782565b611c39602083018461173e565b9392505050565b5f8115159050919050565b611c5481611c40565b8114611c5e575f80fd5b50565b5f81519050611c6f81611c4b565b92915050565b5f60208284031215611c8a57611c896114d0565b5b5f611c9784828501611c61565b91505092915050565b5f81519050919050565b5f81905092915050565b5f5b83811015611cd1578082015181840152602081019050611cb6565b5f8484015250505050565b5f611ce682611ca0565b611cf08185611caa565b9350611d00818560208601611cb4565b80840191505092915050565b5f611d178284611cdc565b91508190509291505056fea2646970667358221220be0b697aac71e3188c0985d7f5c31f802e52675e8521935fec264a41d6090a0b64736f6c63430008160033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH2 0x2710 PUSH1 0x1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1F48 CODESIZE SUB DUP1 PUSH3 0x1F48 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3C SWAP2 SWAP1 PUSH3 0x16D JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH3 0x1B2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xE2 DUP3 PUSH3 0xB7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xF5 DUP3 PUSH3 0xD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x107 DUP2 PUSH3 0xE9 JUMP JUMPDEST DUP2 EQ PUSH3 0x112 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x125 DUP2 PUSH3 0xFC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x137 DUP3 PUSH3 0xD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x149 DUP2 PUSH3 0x12B JUMP JUMPDEST DUP2 EQ PUSH3 0x154 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x167 DUP2 PUSH3 0x13E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x186 JUMPI PUSH3 0x185 PUSH3 0xB3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x195 DUP6 DUP3 DUP7 ADD PUSH3 0x115 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x1A8 DUP6 DUP3 DUP7 ADD PUSH3 0x157 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1D58 PUSH3 0x1F0 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x625 ADD MSTORE DUP2 DUP2 PUSH2 0xBB9 ADD MSTORE DUP2 DUP2 PUSH2 0xCFD ADD MSTORE PUSH2 0xDEB ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x829 ADD MSTORE PUSH2 0x104E ADD MSTORE PUSH2 0x1D58 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9168AE72 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x94067045 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xF854A27F EQ PUSH2 0x1A5 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x63C28DB1 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x6588103B EQ PUSH2 0xEB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x1507 JUMP JUMPDEST PUSH2 0x1D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB9 PUSH2 0x6FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x870 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x16AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF3 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x1725 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x174D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x1507 JUMP JUMPDEST PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x1507 JUMP JUMPDEST PUSH2 0xC31 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18F PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH2 0x10D1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT PUSH2 0x25E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x255 SWAP1 PUSH2 0x1856 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x306 CALLER PUSH2 0x111E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP1 JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x4E1 JUMPI DUP4 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3FF JUMPI PUSH2 0x3FE PUSH2 0x193C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x4C7 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x480 JUMPI PUSH2 0x47F PUSH2 0x193C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x4D4 JUMPI DUP1 SWAP2 POP PUSH2 0x4E1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x361 JUMP JUMPDEST POP PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x535 JUMPI PUSH2 0x534 PUSH2 0x193C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x5CF SWAP1 PUSH2 0x1969 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x680 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1990 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x697 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6A9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP TIMESTAMP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x6FC PUSH2 0x11D6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x74A CALLER PUSH2 0x111E JUMP JUMPDEST PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78F SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x86D CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11DF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT ISZERO PUSH2 0xB5B JUMPI PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x913 JUMPI PUSH2 0x912 PUSH2 0x1A2D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x94C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x939 PUSH2 0x14A2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x931 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xB50 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA06 JUMPI PUSH2 0xA05 PUSH2 0x193C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB43 JUMPI PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAA1 JUMPI PUSH2 0xAA0 PUSH2 0x193C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB29 JUMPI PUSH2 0xB28 PUSH2 0x193C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xB3F SWAP1 PUSH2 0x1A5A JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x952 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP PUSH2 0xBB2 JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB75 JUMPI PUSH2 0xB74 PUSH2 0x1A2D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBAE JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xB9B PUSH2 0x14A2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xB93 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xC39 PUSH2 0x10D1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT ISZERO PUSH2 0xCE4 JUMPI PUSH0 PUSH2 0xC8A CALLER PUSH2 0x111E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCDB SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD54 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD6F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD93 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE0 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE46 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1990 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE5D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE6F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFA7 SWAP1 PUSH2 0x1A5A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0x1049 PUSH2 0x11D6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x10BC DUP5 PUSH2 0x111E JUMP JUMPDEST PUSH2 0x10C6 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x1115 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110C SWAP1 PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE10 PUSH1 0x1 SLOAD PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x11BB SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH2 0x11C5 SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH2 0x11CF SWAP2 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1259 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1212 SWAP3 SWAP2 SWAP1 PUSH2 0x1C19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x125E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1288 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12F3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x12AC JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x12AA SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x12EE JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E5 SWAP2 SWAP1 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1300 DUP4 DUP4 PUSH0 PUSH2 0x1308 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x134F JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1346 SWAP2 SWAP1 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1377 SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x13B1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x13C6 DUP7 DUP4 DUP4 PUSH2 0x13D1 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x13E6 JUMPI PUSH2 0x13E1 DUP3 PUSH2 0x145E JUMP JUMPDEST PUSH2 0x1456 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x140C JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x144E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1445 SWAP2 SWAP1 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1457 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1470 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E6 DUP2 PUSH2 0x14D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x14F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1501 DUP2 PUSH2 0x14DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151C JUMPI PUSH2 0x151B PUSH2 0x14D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1529 DUP5 DUP3 DUP6 ADD PUSH2 0x14F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x155B DUP3 PUSH2 0x1532 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x156B DUP2 PUSH2 0x1551 JUMP JUMPDEST DUP2 EQ PUSH2 0x1575 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1586 DUP2 PUSH2 0x1562 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15A1 JUMPI PUSH2 0x15A0 PUSH2 0x14D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15AE DUP5 DUP3 DUP6 ADD PUSH2 0x1578 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E9 DUP2 PUSH2 0x1551 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x15F8 DUP2 PUSH2 0x14D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1612 PUSH0 DUP6 ADD DUP3 PUSH2 0x15E0 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1625 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x15EF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1636 DUP4 DUP4 PUSH2 0x15FE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1658 DUP3 PUSH2 0x15B7 JUMP JUMPDEST PUSH2 0x1662 DUP2 DUP6 PUSH2 0x15C1 JUMP JUMPDEST SWAP4 POP PUSH2 0x166D DUP4 PUSH2 0x15D1 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x169D JUMPI DUP2 MLOAD PUSH2 0x1684 DUP9 DUP3 PUSH2 0x162B JUMP JUMPDEST SWAP8 POP PUSH2 0x168F DUP4 PUSH2 0x1642 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1670 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16C2 DUP2 DUP5 PUSH2 0x164E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16ED PUSH2 0x16E8 PUSH2 0x16E3 DUP5 PUSH2 0x1532 JUMP JUMPDEST PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x1532 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16FE DUP3 PUSH2 0x16D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x170F DUP3 PUSH2 0x16F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x171F DUP2 PUSH2 0x1705 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1738 PUSH0 DUP4 ADD DUP5 PUSH2 0x1716 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1747 DUP2 PUSH2 0x14D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1760 PUSH0 DUP4 ADD DUP7 PUSH2 0x173E JUMP JUMPDEST PUSH2 0x176D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x173E JUMP JUMPDEST PUSH2 0x177A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x173E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x178B DUP2 PUSH2 0x1551 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17A4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1782 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17B4 DUP3 PUSH2 0x16F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C4 DUP2 PUSH2 0x17AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17DD PUSH0 DUP4 ADD DUP5 PUSH2 0x17BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17F6 PUSH0 DUP4 ADD DUP5 PUSH2 0x173E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F20746F6B656E73207374616B656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1840 PUSH1 0x19 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x184B DUP3 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x186D DUP2 PUSH2 0x1834 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18A8 PUSH1 0x19 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x18B3 DUP3 PUSH2 0x1874 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18D5 DUP2 PUSH2 0x189C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1913 DUP3 PUSH2 0x14D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x191E DUP4 PUSH2 0x14D4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1936 JUMPI PUSH2 0x1935 PUSH2 0x18DC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1973 DUP3 PUSH2 0x14D4 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x1985 JUMPI PUSH2 0x1984 PUSH2 0x18DC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19A3 PUSH0 DUP4 ADD DUP7 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0x19B0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0x19BD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x173E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F207265776172647320746F20636C61696D00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19F9 PUSH1 0x1C DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1A04 DUP3 PUSH2 0x19C5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A26 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A64 DUP3 PUSH2 0x14D4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1A96 JUMPI PUSH2 0x1A95 PUSH2 0x18DC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AAF DUP2 PUSH2 0x1562 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ACA JUMPI PUSH2 0x1AC9 PUSH2 0x14D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AD7 DUP5 DUP3 DUP6 ADD PUSH2 0x1AA1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B14 PUSH1 0x1F DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1F DUP3 PUSH2 0x1AE0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B41 DUP2 PUSH2 0x1B08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B52 DUP3 PUSH2 0x14D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B5D DUP4 PUSH2 0x14D4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B75 JUMPI PUSH2 0x1B74 PUSH2 0x18DC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B85 DUP3 PUSH2 0x14D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B90 DUP4 PUSH2 0x14D4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1B9E DUP2 PUSH2 0x14D4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1BB5 JUMPI PUSH2 0x1BB4 PUSH2 0x18DC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BF3 DUP3 PUSH2 0x14D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BFE DUP4 PUSH2 0x14D4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C0E JUMPI PUSH2 0x1C0D PUSH2 0x1BBC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C2C PUSH0 DUP4 ADD DUP6 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0x1C39 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x173E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C54 DUP2 PUSH2 0x1C40 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C5E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C6F DUP2 PUSH2 0x1C4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C8A JUMPI PUSH2 0x1C89 PUSH2 0x14D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C97 DUP5 DUP3 DUP6 ADD PUSH2 0x1C61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CD1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CB6 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CE6 DUP3 PUSH2 0x1CA0 JUMP JUMPDEST PUSH2 0x1CF0 DUP2 DUP6 PUSH2 0x1CAA JUMP JUMPDEST SWAP4 POP PUSH2 0x1D00 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CB4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D17 DUP3 DUP5 PUSH2 0x1CDC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE SIGNEXTEND PUSH10 0x7AAC71E3188C0985D7F5 0xC3 0x1F DUP1 0x2E MSTORE PUSH8 0x5E8521935FEC264A COINBASE 0xD6 MULMOD EXP SIGNEXTEND PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "309:7229:7:-:0;;;1426:5;1393:38;;611:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:0;1821:7;:22;;;;696:14:7;680:30;;;;;;;;;;736:13;721:28;;;;;;;;;;611:146;;309:7229;;88:117:8;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:111::-;620:7;649:24;667:5;649:24;:::i;:::-;638:35;;568:111;;;:::o;685:152::-;773:39;806:5;773:39;:::i;:::-;766:5;763:50;753:78;;827:1;824;817:12;753:78;685:152;:::o;843:173::-;915:5;946:6;940:13;931:22;;962:48;1004:5;962:48;:::i;:::-;843:173;;;;:::o;1022:110::-;1073:7;1102:24;1120:5;1102:24;:::i;:::-;1091:35;;1022:110;;;:::o;1138:150::-;1225:38;1257:5;1225:38;:::i;:::-;1218:5;1215:49;1205:77;;1278:1;1275;1268:12;1205:77;1138:150;:::o;1294:171::-;1365:5;1396:6;1390:13;1381:22;;1412:47;1453:5;1412:47;:::i;:::-;1294:171;;;;:::o;1471:565::-;1579:6;1587;1636:2;1624:9;1615:7;1611:23;1607:32;1604:119;;;1642:79;;:::i;:::-;1604:119;1762:1;1787:79;1858:7;1849:6;1838:9;1834:22;1787:79;:::i;:::-;1777:89;;1733:143;1915:2;1941:78;2011:7;2002:6;1991:9;1987:22;1941:78;:::i;:::-;1931:88;;1886:143;1471:565;;;;;:::o;309:7229:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_418": {
									"entryPoint": 4702,
									"id": 418,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_52": {
									"entryPoint": 4566,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_44": {
									"entryPoint": 4305,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_837": {
									"entryPoint": 5214,
									"id": 837,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@availableRewards_1227": {
									"entryPoint": 4208,
									"id": 1227,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateRewards_1349": {
									"entryPoint": 4382,
									"id": 1349,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claimRewards_1206": {
									"entryPoint": 1791,
									"id": 1206,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_705": {
									"entryPoint": 4872,
									"id": 705,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_659": {
									"entryPoint": 4851,
									"id": 659,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getStakedTokens_1319": {
									"entryPoint": 2160,
									"id": 1319,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nftCollection_868": {
									"entryPoint": 2999,
									"id": 868,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsToken_865": {
									"entryPoint": 4172,
									"id": 865,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_228": {
									"entryPoint": 4575,
									"id": 228,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stake_1010": {
									"entryPoint": 3121,
									"id": 1010,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakerAddress_914": {
									"entryPoint": 3073,
									"id": 914,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakers_910": {
									"entryPoint": 3035,
									"id": 910,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_797": {
									"entryPoint": 5073,
									"id": 797,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1157": {
									"entryPoint": 469,
									"id": 1157,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 6817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 6837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_StakedToken_$891_memory_ptr_to_t_struct$_StakedToken_$891_memory_ptr": {
									"entryPoint": 5675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 5600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack": {
									"entryPoint": 6075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$585_to_t_address_fromStack": {
									"entryPoint": 5910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_StakedToken_$891_memory_ptr_to_t_struct$_StakedToken_$891_memory_ptr": {
									"entryPoint": 5630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 5615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6544,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7193,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed": {
									"entryPoint": 6090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$585__to_t_address__fromStack_reversed": {
									"entryPoint": 5925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5965,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 5698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 5569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$142_to_t_address": {
									"entryPoint": 6058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$585_to_t_address": {
									"entryPoint": 5893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7348,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 6505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6364,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7100,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6460,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6701,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5328,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9": {
									"entryPoint": 6260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139": {
									"entryPoint": 6156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e": {
									"entryPoint": 6597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 6880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17270:8",
										"nodeType": "YulBlock",
										"src": "0:17270:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:32:8",
													"nodeType": "YulBlock",
													"src": "379:32:8",
													"statements": [
														{
															"nativeSrc": "389:16:8",
															"nodeType": "YulAssignment",
															"src": "389:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:8",
																"nodeType": "YulIdentifier",
																"src": "400:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:77:8"
											},
											{
												"body": {
													"nativeSrc": "460:79:8",
													"nodeType": "YulBlock",
													"src": "460:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:8",
																"nodeType": "YulBlock",
																"src": "517:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:8",
																					"nodeType": "YulLiteral",
																					"src": "526:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:8",
																					"nodeType": "YulLiteral",
																					"src": "529:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:8"
																			},
																			"nativeSrc": "519:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:8"
																		},
																		"nativeSrc": "519:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:8"
																				},
																				"nativeSrc": "490:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:8"
																		},
																		"nativeSrc": "480:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:8"
																},
																"nativeSrc": "473:43:8",
																"nodeType": "YulFunctionCall",
																"src": "473:43:8"
															},
															"nativeSrc": "470:63:8",
															"nodeType": "YulIf",
															"src": "470:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:8",
														"nodeType": "YulTypedName",
														"src": "453:5:8",
														"type": ""
													}
												],
												"src": "417:122:8"
											},
											{
												"body": {
													"nativeSrc": "597:87:8",
													"nodeType": "YulBlock",
													"src": "597:87:8",
													"statements": [
														{
															"nativeSrc": "607:29:8",
															"nodeType": "YulAssignment",
															"src": "607:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:8"
																},
																"nativeSrc": "616:20:8",
																"nodeType": "YulFunctionCall",
																"src": "616:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:8"
																},
																"nativeSrc": "645:33:8",
																"nodeType": "YulFunctionCall",
																"src": "645:33:8"
															},
															"nativeSrc": "645:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:8",
														"nodeType": "YulTypedName",
														"src": "575:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:8",
														"nodeType": "YulTypedName",
														"src": "583:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:8",
														"nodeType": "YulTypedName",
														"src": "591:5:8",
														"type": ""
													}
												],
												"src": "545:139:8"
											},
											{
												"body": {
													"nativeSrc": "756:263:8",
													"nodeType": "YulBlock",
													"src": "756:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:8",
																"nodeType": "YulBlock",
																"src": "802:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:8"
																			},
																			"nativeSrc": "804:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:8"
																		},
																		"nativeSrc": "804:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:8"
																		},
																		"nativeSrc": "773:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:8",
																		"nodeType": "YulLiteral",
																		"src": "798:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:8"
																},
																"nativeSrc": "769:32:8",
																"nodeType": "YulFunctionCall",
																"src": "769:32:8"
															},
															"nativeSrc": "766:119:8",
															"nodeType": "YulIf",
															"src": "766:119:8"
														},
														{
															"nativeSrc": "895:117:8",
															"nodeType": "YulBlock",
															"src": "895:117:8",
															"statements": [
																{
																	"nativeSrc": "910:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:8",
																		"nodeType": "YulLiteral",
																		"src": "924:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:8",
																			"nodeType": "YulTypedName",
																			"src": "914:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:8",
																	"nodeType": "YulAssignment",
																	"src": "939:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:8"
																				},
																				"nativeSrc": "970:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:8"
																		},
																		"nativeSrc": "949:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:8",
														"nodeType": "YulTypedName",
														"src": "726:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:8",
														"nodeType": "YulTypedName",
														"src": "737:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:8",
														"nodeType": "YulTypedName",
														"src": "749:6:8",
														"type": ""
													}
												],
												"src": "690:329:8"
											},
											{
												"body": {
													"nativeSrc": "1070:81:8",
													"nodeType": "YulBlock",
													"src": "1070:81:8",
													"statements": [
														{
															"nativeSrc": "1080:65:8",
															"nodeType": "YulAssignment",
															"src": "1080:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1095:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:8"
																},
																"nativeSrc": "1091:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1091:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1025:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:8",
														"nodeType": "YulTypedName",
														"src": "1052:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:8",
														"nodeType": "YulTypedName",
														"src": "1062:7:8",
														"type": ""
													}
												],
												"src": "1025:126:8"
											},
											{
												"body": {
													"nativeSrc": "1202:51:8",
													"nodeType": "YulBlock",
													"src": "1202:51:8",
													"statements": [
														{
															"nativeSrc": "1212:35:8",
															"nodeType": "YulAssignment",
															"src": "1212:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1241:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1223:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:8"
																},
																"nativeSrc": "1223:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1223:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1212:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1157:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1184:5:8",
														"nodeType": "YulTypedName",
														"src": "1184:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1194:7:8",
														"nodeType": "YulTypedName",
														"src": "1194:7:8",
														"type": ""
													}
												],
												"src": "1157:96:8"
											},
											{
												"body": {
													"nativeSrc": "1302:79:8",
													"nodeType": "YulBlock",
													"src": "1302:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1359:16:8",
																"nodeType": "YulBlock",
																"src": "1359:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1368:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1371:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1361:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:8"
																			},
																			"nativeSrc": "1361:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1361:12:8"
																		},
																		"nativeSrc": "1361:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1361:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1325:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1325:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1350:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1350:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1332:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1332:17:8"
																				},
																				"nativeSrc": "1332:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1332:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1322:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1322:2:8"
																		},
																		"nativeSrc": "1322:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1322:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1315:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:8"
																},
																"nativeSrc": "1315:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1315:43:8"
															},
															"nativeSrc": "1312:63:8",
															"nodeType": "YulIf",
															"src": "1312:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1259:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1295:5:8",
														"nodeType": "YulTypedName",
														"src": "1295:5:8",
														"type": ""
													}
												],
												"src": "1259:122:8"
											},
											{
												"body": {
													"nativeSrc": "1439:87:8",
													"nodeType": "YulBlock",
													"src": "1439:87:8",
													"statements": [
														{
															"nativeSrc": "1449:29:8",
															"nodeType": "YulAssignment",
															"src": "1449:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1471:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1471:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1458:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1458:12:8"
																},
																"nativeSrc": "1458:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1458:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1449:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1449:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1514:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1514:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1487:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1487:26:8"
																},
																"nativeSrc": "1487:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1487:33:8"
															},
															"nativeSrc": "1487:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1487:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1387:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1417:6:8",
														"nodeType": "YulTypedName",
														"src": "1417:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1425:3:8",
														"nodeType": "YulTypedName",
														"src": "1425:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1433:5:8",
														"nodeType": "YulTypedName",
														"src": "1433:5:8",
														"type": ""
													}
												],
												"src": "1387:139:8"
											},
											{
												"body": {
													"nativeSrc": "1598:263:8",
													"nodeType": "YulBlock",
													"src": "1598:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1644:83:8",
																"nodeType": "YulBlock",
																"src": "1644:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1646:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1646:77:8"
																			},
																			"nativeSrc": "1646:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1646:79:8"
																		},
																		"nativeSrc": "1646:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1646:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1619:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1619:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1628:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1628:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1615:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1615:3:8"
																		},
																		"nativeSrc": "1615:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1615:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1640:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1611:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1611:3:8"
																},
																"nativeSrc": "1611:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1611:32:8"
															},
															"nativeSrc": "1608:119:8",
															"nodeType": "YulIf",
															"src": "1608:119:8"
														},
														{
															"nativeSrc": "1737:117:8",
															"nodeType": "YulBlock",
															"src": "1737:117:8",
															"statements": [
																{
																	"nativeSrc": "1752:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1752:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1766:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1766:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1756:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1756:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1781:63:8",
																	"nodeType": "YulAssignment",
																	"src": "1781:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1816:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1816:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1827:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1827:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1812:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1812:3:8"
																				},
																				"nativeSrc": "1812:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1812:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1836:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1836:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1791:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "1791:20:8"
																		},
																		"nativeSrc": "1791:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1791:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1781:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1781:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1532:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1568:9:8",
														"nodeType": "YulTypedName",
														"src": "1568:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1579:7:8",
														"nodeType": "YulTypedName",
														"src": "1579:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1591:6:8",
														"nodeType": "YulTypedName",
														"src": "1591:6:8",
														"type": ""
													}
												],
												"src": "1532:329:8"
											},
											{
												"body": {
													"nativeSrc": "1969:40:8",
													"nodeType": "YulBlock",
													"src": "1969:40:8",
													"statements": [
														{
															"nativeSrc": "1980:22:8",
															"nodeType": "YulAssignment",
															"src": "1980:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1996:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1996:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1990:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1990:5:8"
																},
																"nativeSrc": "1990:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1990:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1980:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "1867:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1952:5:8",
														"nodeType": "YulTypedName",
														"src": "1952:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1962:6:8",
														"nodeType": "YulTypedName",
														"src": "1962:6:8",
														"type": ""
													}
												],
												"src": "1867:142:8"
											},
											{
												"body": {
													"nativeSrc": "2154:73:8",
													"nodeType": "YulBlock",
													"src": "2154:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2171:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2164:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:8"
																},
																"nativeSrc": "2164:19:8",
																"nodeType": "YulFunctionCall",
																"src": "2164:19:8"
															},
															"nativeSrc": "2164:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "2164:19:8"
														},
														{
															"nativeSrc": "2192:29:8",
															"nodeType": "YulAssignment",
															"src": "2192:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2211:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2211:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2216:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2216:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2207:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2207:3:8"
																},
																"nativeSrc": "2207:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2207:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2192:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "2192:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "2015:212:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2126:3:8",
														"nodeType": "YulTypedName",
														"src": "2126:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2131:6:8",
														"nodeType": "YulTypedName",
														"src": "2131:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2142:11:8",
														"nodeType": "YulTypedName",
														"src": "2142:11:8",
														"type": ""
													}
												],
												"src": "2015:212:8"
											},
											{
												"body": {
													"nativeSrc": "2333:60:8",
													"nodeType": "YulBlock",
													"src": "2333:60:8",
													"statements": [
														{
															"nativeSrc": "2343:11:8",
															"nodeType": "YulAssignment",
															"src": "2343:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "2351:3:8",
																"nodeType": "YulIdentifier",
																"src": "2351:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2343:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2343:4:8"
																}
															]
														},
														{
															"nativeSrc": "2364:22:8",
															"nodeType": "YulAssignment",
															"src": "2364:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "2376:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2376:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2381:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2381:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2372:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2372:3:8"
																},
																"nativeSrc": "2372:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2372:14:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2364:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2364:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "2233:160:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2320:3:8",
														"nodeType": "YulTypedName",
														"src": "2320:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2328:4:8",
														"nodeType": "YulTypedName",
														"src": "2328:4:8",
														"type": ""
													}
												],
												"src": "2233:160:8"
											},
											{
												"body": {
													"nativeSrc": "2454:53:8",
													"nodeType": "YulBlock",
													"src": "2454:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2471:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2471:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2494:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2494:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2476:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "2476:17:8"
																		},
																		"nativeSrc": "2476:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2476:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2464:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2464:6:8"
																},
																"nativeSrc": "2464:37:8",
																"nodeType": "YulFunctionCall",
																"src": "2464:37:8"
															},
															"nativeSrc": "2464:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "2464:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "2399:108:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2442:5:8",
														"nodeType": "YulTypedName",
														"src": "2442:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2449:3:8",
														"nodeType": "YulTypedName",
														"src": "2449:3:8",
														"type": ""
													}
												],
												"src": "2399:108:8"
											},
											{
												"body": {
													"nativeSrc": "2568:53:8",
													"nodeType": "YulBlock",
													"src": "2568:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2585:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2585:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2608:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2608:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2590:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "2590:17:8"
																		},
																		"nativeSrc": "2590:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2590:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2578:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2578:6:8"
																},
																"nativeSrc": "2578:37:8",
																"nodeType": "YulFunctionCall",
																"src": "2578:37:8"
															},
															"nativeSrc": "2578:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "2578:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "2513:108:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2556:5:8",
														"nodeType": "YulTypedName",
														"src": "2556:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2563:3:8",
														"nodeType": "YulTypedName",
														"src": "2563:3:8",
														"type": ""
													}
												],
												"src": "2513:108:8"
											},
											{
												"body": {
													"nativeSrc": "2815:396:8",
													"nodeType": "YulBlock",
													"src": "2815:396:8",
													"statements": [
														{
															"nativeSrc": "2825:26:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2825:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2841:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2841:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2846:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2846:4:8",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2837:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2837:3:8"
																},
																"nativeSrc": "2837:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2837:14:8"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "2829:4:8",
																	"nodeType": "YulTypedName",
																	"src": "2829:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2861:166:8",
															"nodeType": "YulBlock",
															"src": "2861:166:8",
															"statements": [
																{
																	"nativeSrc": "2898:43:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2898:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2928:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2928:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2935:4:8",
																						"nodeType": "YulLiteral",
																						"src": "2935:4:8",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2924:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2924:3:8"
																				},
																				"nativeSrc": "2924:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2924:16:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2918:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "2918:5:8"
																		},
																		"nativeSrc": "2918:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2918:23:8"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2902:12:8",
																			"nodeType": "YulTypedName",
																			"src": "2902:12:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2988:12:8",
																				"nodeType": "YulIdentifier",
																				"src": "2988:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3006:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3006:3:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3011:4:8",
																						"nodeType": "YulLiteral",
																						"src": "3011:4:8",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3002:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3002:3:8"
																				},
																				"nativeSrc": "3002:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3002:14:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "2954:33:8",
																			"nodeType": "YulIdentifier",
																			"src": "2954:33:8"
																		},
																		"nativeSrc": "2954:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2954:63:8"
																	},
																	"nativeSrc": "2954:63:8",
																	"nodeType": "YulExpressionStatement",
																	"src": "2954:63:8"
																}
															]
														},
														{
															"nativeSrc": "3037:167:8",
															"nodeType": "YulBlock",
															"src": "3037:167:8",
															"statements": [
																{
																	"nativeSrc": "3075:43:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3075:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3105:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3105:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3112:4:8",
																						"nodeType": "YulLiteral",
																						"src": "3112:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3101:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3101:3:8"
																				},
																				"nativeSrc": "3101:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3101:16:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3095:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "3095:5:8"
																		},
																		"nativeSrc": "3095:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3095:23:8"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3079:12:8",
																			"nodeType": "YulTypedName",
																			"src": "3079:12:8",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3165:12:8",
																				"nodeType": "YulIdentifier",
																				"src": "3165:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3183:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3183:3:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3188:4:8",
																						"nodeType": "YulLiteral",
																						"src": "3188:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3179:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:8"
																				},
																				"nativeSrc": "3179:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3179:14:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "3131:33:8",
																			"nodeType": "YulIdentifier",
																			"src": "3131:33:8"
																		},
																		"nativeSrc": "3131:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3131:63:8"
																	},
																	"nativeSrc": "3131:63:8",
																	"nodeType": "YulExpressionStatement",
																	"src": "3131:63:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_StakedToken_$891_memory_ptr_to_t_struct$_StakedToken_$891_memory_ptr",
												"nativeSrc": "2703:508:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2802:5:8",
														"nodeType": "YulTypedName",
														"src": "2802:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2809:3:8",
														"nodeType": "YulTypedName",
														"src": "2809:3:8",
														"type": ""
													}
												],
												"src": "2703:508:8"
											},
											{
												"body": {
													"nativeSrc": "3353:155:8",
													"nodeType": "YulBlock",
													"src": "3353:155:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3453:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3453:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3461:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3461:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_StakedToken_$891_memory_ptr_to_t_struct$_StakedToken_$891_memory_ptr",
																	"nativeSrc": "3363:89:8",
																	"nodeType": "YulIdentifier",
																	"src": "3363:89:8"
																},
																"nativeSrc": "3363:102:8",
																"nodeType": "YulFunctionCall",
																"src": "3363:102:8"
															},
															"nativeSrc": "3363:102:8",
															"nodeType": "YulExpressionStatement",
															"src": "3363:102:8"
														},
														{
															"nativeSrc": "3474:28:8",
															"nodeType": "YulAssignment",
															"src": "3474:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3492:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3492:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3497:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3497:4:8",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3488:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3488:3:8"
																},
																"nativeSrc": "3488:14:8",
																"nodeType": "YulFunctionCall",
																"src": "3488:14:8"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "3474:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "3474:10:8"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_StakedToken_$891_memory_ptr_to_t_struct$_StakedToken_$891_memory_ptr",
												"nativeSrc": "3217:291:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "3326:6:8",
														"nodeType": "YulTypedName",
														"src": "3326:6:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3334:3:8",
														"nodeType": "YulTypedName",
														"src": "3334:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "3342:10:8",
														"nodeType": "YulTypedName",
														"src": "3342:10:8",
														"type": ""
													}
												],
												"src": "3217:291:8"
											},
											{
												"body": {
													"nativeSrc": "3617:38:8",
													"nodeType": "YulBlock",
													"src": "3617:38:8",
													"statements": [
														{
															"nativeSrc": "3627:22:8",
															"nodeType": "YulAssignment",
															"src": "3627:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3639:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3639:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3644:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3644:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3635:3:8"
																},
																"nativeSrc": "3635:14:8",
																"nodeType": "YulFunctionCall",
																"src": "3635:14:8"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "3627:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3627:4:8"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "3514:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3604:3:8",
														"nodeType": "YulTypedName",
														"src": "3604:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "3612:4:8",
														"nodeType": "YulTypedName",
														"src": "3612:4:8",
														"type": ""
													}
												],
												"src": "3514:141:8"
											},
											{
												"body": {
													"nativeSrc": "3921:776:8",
													"nodeType": "YulBlock",
													"src": "3921:776:8",
													"statements": [
														{
															"nativeSrc": "3931:96:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3931:96:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4021:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4021:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "3945:75:8",
																	"nodeType": "YulIdentifier",
																	"src": "3945:75:8"
																},
																"nativeSrc": "3945:82:8",
																"nodeType": "YulFunctionCall",
																"src": "3945:82:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3935:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3935:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4036:121:8",
															"nodeType": "YulAssignment",
															"src": "4036:121:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4145:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4145:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4150:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4150:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "4043:101:8",
																	"nodeType": "YulIdentifier",
																	"src": "4043:101:8"
																},
																"nativeSrc": "4043:114:8",
																"nodeType": "YulFunctionCall",
																"src": "4043:114:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4036:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4036:3:8"
																}
															]
														},
														{
															"nativeSrc": "4166:99:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4166:99:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4259:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4259:5:8"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "4181:77:8",
																	"nodeType": "YulIdentifier",
																	"src": "4181:77:8"
																},
																"nativeSrc": "4181:84:8",
																"nodeType": "YulFunctionCall",
																"src": "4181:84:8"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "4170:7:8",
																	"nodeType": "YulTypedName",
																	"src": "4170:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4274:21:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4274:21:8",
															"value": {
																"name": "baseRef",
																"nativeSrc": "4288:7:8",
																"nodeType": "YulIdentifier",
																"src": "4288:7:8"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "4278:6:8",
																	"nodeType": "YulTypedName",
																	"src": "4278:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4364:308:8",
																"nodeType": "YulBlock",
																"src": "4364:308:8",
																"statements": [
																	{
																		"nativeSrc": "4378:34:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4378:34:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4405:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "4405:6:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "4399:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4399:5:8"
																			},
																			"nativeSrc": "4399:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4399:13:8"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "4382:13:8",
																				"nodeType": "YulTypedName",
																				"src": "4382:13:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4425:126:8",
																		"nodeType": "YulAssignment",
																		"src": "4425:126:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "4532:13:8",
																					"nodeType": "YulIdentifier",
																					"src": "4532:13:8"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "4547:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4547:3:8"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_StakedToken_$891_memory_ptr_to_t_struct$_StakedToken_$891_memory_ptr",
																				"nativeSrc": "4432:99:8",
																				"nodeType": "YulIdentifier",
																				"src": "4432:99:8"
																			},
																			"nativeSrc": "4432:119:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4432:119:8"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "4425:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4425:3:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4564:98:8",
																		"nodeType": "YulAssignment",
																		"src": "4564:98:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4655:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "4655:6:8"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "4574:80:8",
																				"nodeType": "YulIdentifier",
																				"src": "4574:80:8"
																			},
																			"nativeSrc": "4574:88:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4574:88:8"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "4564:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4564:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4326:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "4326:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4329:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4329:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4323:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4323:2:8"
																},
																"nativeSrc": "4323:13:8",
																"nodeType": "YulFunctionCall",
																"src": "4323:13:8"
															},
															"nativeSrc": "4304:368:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4337:18:8",
																"nodeType": "YulBlock",
																"src": "4337:18:8",
																"statements": [
																	{
																		"nativeSrc": "4339:14:8",
																		"nodeType": "YulAssignment",
																		"src": "4339:14:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4348:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "4348:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4351:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4351:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4344:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4344:3:8"
																			},
																			"nativeSrc": "4344:9:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4344:9:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4339:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "4339:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4308:14:8",
																"nodeType": "YulBlock",
																"src": "4308:14:8",
																"statements": [
																	{
																		"nativeSrc": "4310:10:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4310:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4319:1:8",
																			"nodeType": "YulLiteral",
																			"src": "4319:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "4314:1:8",
																				"nodeType": "YulTypedName",
																				"src": "4314:1:8",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4304:368:8"
														},
														{
															"nativeSrc": "4681:10:8",
															"nodeType": "YulAssignment",
															"src": "4681:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "4688:3:8",
																"nodeType": "YulIdentifier",
																"src": "4688:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4681:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4681:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "3741:956:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3900:5:8",
														"nodeType": "YulTypedName",
														"src": "3900:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3907:3:8",
														"nodeType": "YulTypedName",
														"src": "3907:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3916:3:8",
														"nodeType": "YulTypedName",
														"src": "3916:3:8",
														"type": ""
													}
												],
												"src": "3741:956:8"
											},
											{
												"body": {
													"nativeSrc": "4907:281:8",
													"nodeType": "YulBlock",
													"src": "4907:281:8",
													"statements": [
														{
															"nativeSrc": "4917:26:8",
															"nodeType": "YulAssignment",
															"src": "4917:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4929:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4929:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4940:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4940:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4925:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4925:3:8"
																},
																"nativeSrc": "4925:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4925:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4917:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4917:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4964:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4964:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4975:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4975:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4960:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4960:3:8"
																		},
																		"nativeSrc": "4960:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4960:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4983:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "4983:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4989:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4989:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4979:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4979:3:8"
																		},
																		"nativeSrc": "4979:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4979:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4953:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4953:6:8"
																},
																"nativeSrc": "4953:47:8",
																"nodeType": "YulFunctionCall",
																"src": "4953:47:8"
															},
															"nativeSrc": "4953:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "4953:47:8"
														},
														{
															"nativeSrc": "5009:172:8",
															"nodeType": "YulAssignment",
															"src": "5009:172:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5167:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5167:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "5176:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5176:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "5017:149:8",
																	"nodeType": "YulIdentifier",
																	"src": "5017:149:8"
																},
																"nativeSrc": "5017:164:8",
																"nodeType": "YulFunctionCall",
																"src": "5017:164:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5009:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5009:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "4703:485:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4879:9:8",
														"nodeType": "YulTypedName",
														"src": "4879:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4891:6:8",
														"nodeType": "YulTypedName",
														"src": "4891:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4902:4:8",
														"nodeType": "YulTypedName",
														"src": "4902:4:8",
														"type": ""
													}
												],
												"src": "4703:485:8"
											},
											{
												"body": {
													"nativeSrc": "5226:28:8",
													"nodeType": "YulBlock",
													"src": "5226:28:8",
													"statements": [
														{
															"nativeSrc": "5236:12:8",
															"nodeType": "YulAssignment",
															"src": "5236:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "5243:5:8",
																"nodeType": "YulIdentifier",
																"src": "5243:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5236:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5236:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5194:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5212:5:8",
														"nodeType": "YulTypedName",
														"src": "5212:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5222:3:8",
														"nodeType": "YulTypedName",
														"src": "5222:3:8",
														"type": ""
													}
												],
												"src": "5194:60:8"
											},
											{
												"body": {
													"nativeSrc": "5320:82:8",
													"nodeType": "YulBlock",
													"src": "5320:82:8",
													"statements": [
														{
															"nativeSrc": "5330:66:8",
															"nodeType": "YulAssignment",
															"src": "5330:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5388:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5388:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5370:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "5370:17:8"
																				},
																				"nativeSrc": "5370:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5370:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5361:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "5361:8:8"
																		},
																		"nativeSrc": "5361:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5361:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5343:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "5343:17:8"
																},
																"nativeSrc": "5343:53:8",
																"nodeType": "YulFunctionCall",
																"src": "5343:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5330:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5330:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "5260:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5300:5:8",
														"nodeType": "YulTypedName",
														"src": "5300:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5310:9:8",
														"nodeType": "YulTypedName",
														"src": "5310:9:8",
														"type": ""
													}
												],
												"src": "5260:142:8"
											},
											{
												"body": {
													"nativeSrc": "5468:66:8",
													"nodeType": "YulBlock",
													"src": "5468:66:8",
													"statements": [
														{
															"nativeSrc": "5478:50:8",
															"nodeType": "YulAssignment",
															"src": "5478:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5522:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5522:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5491:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "5491:30:8"
																},
																"nativeSrc": "5491:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5478:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5478:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5408:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5448:5:8",
														"nodeType": "YulTypedName",
														"src": "5448:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5458:9:8",
														"nodeType": "YulTypedName",
														"src": "5458:9:8",
														"type": ""
													}
												],
												"src": "5408:126:8"
											},
											{
												"body": {
													"nativeSrc": "5615:66:8",
													"nodeType": "YulBlock",
													"src": "5615:66:8",
													"statements": [
														{
															"nativeSrc": "5625:50:8",
															"nodeType": "YulAssignment",
															"src": "5625:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5669:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5669:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5638:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "5638:30:8"
																},
																"nativeSrc": "5638:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5638:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5625:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5625:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$585_to_t_address",
												"nativeSrc": "5540:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5595:5:8",
														"nodeType": "YulTypedName",
														"src": "5595:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5605:9:8",
														"nodeType": "YulTypedName",
														"src": "5605:9:8",
														"type": ""
													}
												],
												"src": "5540:141:8"
											},
											{
												"body": {
													"nativeSrc": "5767:81:8",
													"nodeType": "YulBlock",
													"src": "5767:81:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5784:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5784:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5835:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5835:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$585_to_t_address",
																			"nativeSrc": "5789:45:8",
																			"nodeType": "YulIdentifier",
																			"src": "5789:45:8"
																		},
																		"nativeSrc": "5789:52:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:52:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5777:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5777:6:8"
																},
																"nativeSrc": "5777:65:8",
																"nodeType": "YulFunctionCall",
																"src": "5777:65:8"
															},
															"nativeSrc": "5777:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "5777:65:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$585_to_t_address_fromStack",
												"nativeSrc": "5687:161:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5755:5:8",
														"nodeType": "YulTypedName",
														"src": "5755:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5762:3:8",
														"nodeType": "YulTypedName",
														"src": "5762:3:8",
														"type": ""
													}
												],
												"src": "5687:161:8"
											},
											{
												"body": {
													"nativeSrc": "5967:139:8",
													"nodeType": "YulBlock",
													"src": "5967:139:8",
													"statements": [
														{
															"nativeSrc": "5977:26:8",
															"nodeType": "YulAssignment",
															"src": "5977:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5989:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5989:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6000:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6000:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5985:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5985:3:8"
																},
																"nativeSrc": "5985:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5985:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5977:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5977:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6072:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6072:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6085:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6085:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6096:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6096:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6081:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6081:3:8"
																		},
																		"nativeSrc": "6081:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6081:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$585_to_t_address_fromStack",
																	"nativeSrc": "6013:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "6013:58:8"
																},
																"nativeSrc": "6013:86:8",
																"nodeType": "YulFunctionCall",
																"src": "6013:86:8"
															},
															"nativeSrc": "6013:86:8",
															"nodeType": "YulExpressionStatement",
															"src": "6013:86:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$585__to_t_address__fromStack_reversed",
												"nativeSrc": "5854:252:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5939:9:8",
														"nodeType": "YulTypedName",
														"src": "5939:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5951:6:8",
														"nodeType": "YulTypedName",
														"src": "5951:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5962:4:8",
														"nodeType": "YulTypedName",
														"src": "5962:4:8",
														"type": ""
													}
												],
												"src": "5854:252:8"
											},
											{
												"body": {
													"nativeSrc": "6177:53:8",
													"nodeType": "YulBlock",
													"src": "6177:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6194:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6194:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6217:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6217:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6199:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6199:17:8"
																		},
																		"nativeSrc": "6199:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6199:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6187:6:8"
																},
																"nativeSrc": "6187:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6187:37:8"
															},
															"nativeSrc": "6187:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6187:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6112:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6165:5:8",
														"nodeType": "YulTypedName",
														"src": "6165:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6172:3:8",
														"nodeType": "YulTypedName",
														"src": "6172:3:8",
														"type": ""
													}
												],
												"src": "6112:118:8"
											},
											{
												"body": {
													"nativeSrc": "6390:288:8",
													"nodeType": "YulBlock",
													"src": "6390:288:8",
													"statements": [
														{
															"nativeSrc": "6400:26:8",
															"nodeType": "YulAssignment",
															"src": "6400:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6412:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6412:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6423:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6423:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6408:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6408:3:8"
																},
																"nativeSrc": "6408:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6408:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6400:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6400:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6480:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6480:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6493:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6493:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6504:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6504:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6489:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6489:3:8"
																		},
																		"nativeSrc": "6489:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6489:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6436:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6436:43:8"
																},
																"nativeSrc": "6436:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6436:71:8"
															},
															"nativeSrc": "6436:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6436:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6561:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6561:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6574:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6574:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6585:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6585:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6570:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6570:3:8"
																		},
																		"nativeSrc": "6570:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6570:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6517:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6517:43:8"
																},
																"nativeSrc": "6517:72:8",
																"nodeType": "YulFunctionCall",
																"src": "6517:72:8"
															},
															"nativeSrc": "6517:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "6517:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6643:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6643:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6656:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6656:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6667:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6667:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6652:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6652:3:8"
																		},
																		"nativeSrc": "6652:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6652:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6599:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6599:43:8"
																},
																"nativeSrc": "6599:72:8",
																"nodeType": "YulFunctionCall",
																"src": "6599:72:8"
															},
															"nativeSrc": "6599:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "6599:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6236:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6346:9:8",
														"nodeType": "YulTypedName",
														"src": "6346:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6358:6:8",
														"nodeType": "YulTypedName",
														"src": "6358:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6366:6:8",
														"nodeType": "YulTypedName",
														"src": "6366:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6374:6:8",
														"nodeType": "YulTypedName",
														"src": "6374:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6385:4:8",
														"nodeType": "YulTypedName",
														"src": "6385:4:8",
														"type": ""
													}
												],
												"src": "6236:442:8"
											},
											{
												"body": {
													"nativeSrc": "6749:53:8",
													"nodeType": "YulBlock",
													"src": "6749:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6766:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6766:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6789:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6789:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6771:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6771:17:8"
																		},
																		"nativeSrc": "6771:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6771:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6759:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6759:6:8"
																},
																"nativeSrc": "6759:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6759:37:8"
															},
															"nativeSrc": "6759:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6759:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6684:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6737:5:8",
														"nodeType": "YulTypedName",
														"src": "6737:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6744:3:8",
														"nodeType": "YulTypedName",
														"src": "6744:3:8",
														"type": ""
													}
												],
												"src": "6684:118:8"
											},
											{
												"body": {
													"nativeSrc": "6906:124:8",
													"nodeType": "YulBlock",
													"src": "6906:124:8",
													"statements": [
														{
															"nativeSrc": "6916:26:8",
															"nodeType": "YulAssignment",
															"src": "6916:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6928:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6928:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6939:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6939:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6924:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6924:3:8"
																},
																"nativeSrc": "6924:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6924:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6916:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6916:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6996:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6996:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7009:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7009:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7020:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7020:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7005:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7005:3:8"
																		},
																		"nativeSrc": "7005:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7005:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6952:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6952:43:8"
																},
																"nativeSrc": "6952:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6952:71:8"
															},
															"nativeSrc": "6952:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6952:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6808:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6878:9:8",
														"nodeType": "YulTypedName",
														"src": "6878:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6890:6:8",
														"nodeType": "YulTypedName",
														"src": "6890:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6901:4:8",
														"nodeType": "YulTypedName",
														"src": "6901:4:8",
														"type": ""
													}
												],
												"src": "6808:222:8"
											},
											{
												"body": {
													"nativeSrc": "7110:66:8",
													"nodeType": "YulBlock",
													"src": "7110:66:8",
													"statements": [
														{
															"nativeSrc": "7120:50:8",
															"nodeType": "YulAssignment",
															"src": "7120:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7164:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7164:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "7133:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "7133:30:8"
																},
																"nativeSrc": "7133:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7133:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7120:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "7120:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$142_to_t_address",
												"nativeSrc": "7036:140:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7090:5:8",
														"nodeType": "YulTypedName",
														"src": "7090:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7100:9:8",
														"nodeType": "YulTypedName",
														"src": "7100:9:8",
														"type": ""
													}
												],
												"src": "7036:140:8"
											},
											{
												"body": {
													"nativeSrc": "7261:80:8",
													"nodeType": "YulBlock",
													"src": "7261:80:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7278:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7278:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7328:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7328:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$142_to_t_address",
																			"nativeSrc": "7283:44:8",
																			"nodeType": "YulIdentifier",
																			"src": "7283:44:8"
																		},
																		"nativeSrc": "7283:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7283:51:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7271:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7271:6:8"
																},
																"nativeSrc": "7271:64:8",
																"nodeType": "YulFunctionCall",
																"src": "7271:64:8"
															},
															"nativeSrc": "7271:64:8",
															"nodeType": "YulExpressionStatement",
															"src": "7271:64:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack",
												"nativeSrc": "7182:159:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7249:5:8",
														"nodeType": "YulTypedName",
														"src": "7249:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7256:3:8",
														"nodeType": "YulTypedName",
														"src": "7256:3:8",
														"type": ""
													}
												],
												"src": "7182:159:8"
											},
											{
												"body": {
													"nativeSrc": "7459:138:8",
													"nodeType": "YulBlock",
													"src": "7459:138:8",
													"statements": [
														{
															"nativeSrc": "7469:26:8",
															"nodeType": "YulAssignment",
															"src": "7469:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7481:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7481:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7492:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7492:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7477:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7477:3:8"
																},
																"nativeSrc": "7477:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7477:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7469:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7469:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7563:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7563:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7576:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7576:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7587:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7587:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7572:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7572:3:8"
																		},
																		"nativeSrc": "7572:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7572:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack",
																	"nativeSrc": "7505:57:8",
																	"nodeType": "YulIdentifier",
																	"src": "7505:57:8"
																},
																"nativeSrc": "7505:85:8",
																"nodeType": "YulFunctionCall",
																"src": "7505:85:8"
															},
															"nativeSrc": "7505:85:8",
															"nodeType": "YulExpressionStatement",
															"src": "7505:85:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed",
												"nativeSrc": "7347:250:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7431:9:8",
														"nodeType": "YulTypedName",
														"src": "7431:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7443:6:8",
														"nodeType": "YulTypedName",
														"src": "7443:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7454:4:8",
														"nodeType": "YulTypedName",
														"src": "7454:4:8",
														"type": ""
													}
												],
												"src": "7347:250:8"
											},
											{
												"body": {
													"nativeSrc": "7701:124:8",
													"nodeType": "YulBlock",
													"src": "7701:124:8",
													"statements": [
														{
															"nativeSrc": "7711:26:8",
															"nodeType": "YulAssignment",
															"src": "7711:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7723:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7723:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7734:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7734:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7719:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7719:3:8"
																},
																"nativeSrc": "7719:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7719:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7711:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7711:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7791:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7791:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7804:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7804:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7815:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7815:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7800:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7800:3:8"
																		},
																		"nativeSrc": "7800:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7800:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7747:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7747:43:8"
																},
																"nativeSrc": "7747:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7747:71:8"
															},
															"nativeSrc": "7747:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7747:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7603:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7673:9:8",
														"nodeType": "YulTypedName",
														"src": "7673:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7685:6:8",
														"nodeType": "YulTypedName",
														"src": "7685:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7696:4:8",
														"nodeType": "YulTypedName",
														"src": "7696:4:8",
														"type": ""
													}
												],
												"src": "7603:222:8"
											},
											{
												"body": {
													"nativeSrc": "7927:73:8",
													"nodeType": "YulBlock",
													"src": "7927:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7944:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7944:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7949:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7949:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7937:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7937:6:8"
																},
																"nativeSrc": "7937:19:8",
																"nodeType": "YulFunctionCall",
																"src": "7937:19:8"
															},
															"nativeSrc": "7937:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "7937:19:8"
														},
														{
															"nativeSrc": "7965:29:8",
															"nodeType": "YulAssignment",
															"src": "7965:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7984:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7984:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7989:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7989:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7980:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7980:3:8"
																},
																"nativeSrc": "7980:14:8",
																"nodeType": "YulFunctionCall",
																"src": "7980:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7965:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "7965:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7831:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7899:3:8",
														"nodeType": "YulTypedName",
														"src": "7899:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7904:6:8",
														"nodeType": "YulTypedName",
														"src": "7904:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7915:11:8",
														"nodeType": "YulTypedName",
														"src": "7915:11:8",
														"type": ""
													}
												],
												"src": "7831:169:8"
											},
											{
												"body": {
													"nativeSrc": "8112:69:8",
													"nodeType": "YulBlock",
													"src": "8112:69:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8134:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8134:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8142:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8142:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8130:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8130:3:8"
																		},
																		"nativeSrc": "8130:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8130:14:8"
																	},
																	{
																		"hexValue": "596f752068617665206e6f20746f6b656e73207374616b6564",
																		"kind": "string",
																		"nativeSrc": "8146:27:8",
																		"nodeType": "YulLiteral",
																		"src": "8146:27:8",
																		"type": "",
																		"value": "You have no tokens staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8123:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8123:6:8"
																},
																"nativeSrc": "8123:51:8",
																"nodeType": "YulFunctionCall",
																"src": "8123:51:8"
															},
															"nativeSrc": "8123:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "8123:51:8"
														}
													]
												},
												"name": "store_literal_in_memory_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139",
												"nativeSrc": "8006:175:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8104:6:8",
														"nodeType": "YulTypedName",
														"src": "8104:6:8",
														"type": ""
													}
												],
												"src": "8006:175:8"
											},
											{
												"body": {
													"nativeSrc": "8333:220:8",
													"nodeType": "YulBlock",
													"src": "8333:220:8",
													"statements": [
														{
															"nativeSrc": "8343:74:8",
															"nodeType": "YulAssignment",
															"src": "8343:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8409:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8409:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8414:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8414:2:8",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8350:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "8350:58:8"
																},
																"nativeSrc": "8350:67:8",
																"nodeType": "YulFunctionCall",
																"src": "8350:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8343:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8343:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8515:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8515:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139",
																	"nativeSrc": "8426:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "8426:88:8"
																},
																"nativeSrc": "8426:93:8",
																"nodeType": "YulFunctionCall",
																"src": "8426:93:8"
															},
															"nativeSrc": "8426:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "8426:93:8"
														},
														{
															"nativeSrc": "8528:19:8",
															"nodeType": "YulAssignment",
															"src": "8528:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8539:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8539:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8544:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8544:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8535:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8535:3:8"
																},
																"nativeSrc": "8535:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8535:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8528:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8528:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8187:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8321:3:8",
														"nodeType": "YulTypedName",
														"src": "8321:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8329:3:8",
														"nodeType": "YulTypedName",
														"src": "8329:3:8",
														"type": ""
													}
												],
												"src": "8187:366:8"
											},
											{
												"body": {
													"nativeSrc": "8730:248:8",
													"nodeType": "YulBlock",
													"src": "8730:248:8",
													"statements": [
														{
															"nativeSrc": "8740:26:8",
															"nodeType": "YulAssignment",
															"src": "8740:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8752:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8752:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8763:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8763:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8748:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8748:3:8"
																},
																"nativeSrc": "8748:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8748:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8740:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8740:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8787:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8787:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8798:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8798:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8783:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8783:3:8"
																		},
																		"nativeSrc": "8783:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8783:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8806:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8806:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8812:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8812:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8802:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8802:3:8"
																		},
																		"nativeSrc": "8802:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8802:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8776:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8776:6:8"
																},
																"nativeSrc": "8776:47:8",
																"nodeType": "YulFunctionCall",
																"src": "8776:47:8"
															},
															"nativeSrc": "8776:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "8776:47:8"
														},
														{
															"nativeSrc": "8832:139:8",
															"nodeType": "YulAssignment",
															"src": "8832:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8966:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8966:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8840:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "8840:124:8"
																},
																"nativeSrc": "8840:131:8",
																"nodeType": "YulFunctionCall",
																"src": "8840:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8832:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8832:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8559:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8710:9:8",
														"nodeType": "YulTypedName",
														"src": "8710:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8725:4:8",
														"nodeType": "YulTypedName",
														"src": "8725:4:8",
														"type": ""
													}
												],
												"src": "8559:419:8"
											},
											{
												"body": {
													"nativeSrc": "9090:69:8",
													"nodeType": "YulBlock",
													"src": "9090:69:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9112:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9112:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9120:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9120:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9108:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9108:3:8"
																		},
																		"nativeSrc": "9108:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9108:14:8"
																	},
																	{
																		"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
																		"kind": "string",
																		"nativeSrc": "9124:27:8",
																		"nodeType": "YulLiteral",
																		"src": "9124:27:8",
																		"type": "",
																		"value": "You don't own this token!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9101:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9101:6:8"
																},
																"nativeSrc": "9101:51:8",
																"nodeType": "YulFunctionCall",
																"src": "9101:51:8"
															},
															"nativeSrc": "9101:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "9101:51:8"
														}
													]
												},
												"name": "store_literal_in_memory_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
												"nativeSrc": "8984:175:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9082:6:8",
														"nodeType": "YulTypedName",
														"src": "9082:6:8",
														"type": ""
													}
												],
												"src": "8984:175:8"
											},
											{
												"body": {
													"nativeSrc": "9311:220:8",
													"nodeType": "YulBlock",
													"src": "9311:220:8",
													"statements": [
														{
															"nativeSrc": "9321:74:8",
															"nodeType": "YulAssignment",
															"src": "9321:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9387:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9387:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9392:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9392:2:8",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9328:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "9328:58:8"
																},
																"nativeSrc": "9328:67:8",
																"nodeType": "YulFunctionCall",
																"src": "9328:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9321:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9321:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9493:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9493:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																	"nativeSrc": "9404:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "9404:88:8"
																},
																"nativeSrc": "9404:93:8",
																"nodeType": "YulFunctionCall",
																"src": "9404:93:8"
															},
															"nativeSrc": "9404:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "9404:93:8"
														},
														{
															"nativeSrc": "9506:19:8",
															"nodeType": "YulAssignment",
															"src": "9506:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9517:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9517:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9522:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9522:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9513:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9513:3:8"
																},
																"nativeSrc": "9513:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9513:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9506:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9506:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9165:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9299:3:8",
														"nodeType": "YulTypedName",
														"src": "9299:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9307:3:8",
														"nodeType": "YulTypedName",
														"src": "9307:3:8",
														"type": ""
													}
												],
												"src": "9165:366:8"
											},
											{
												"body": {
													"nativeSrc": "9708:248:8",
													"nodeType": "YulBlock",
													"src": "9708:248:8",
													"statements": [
														{
															"nativeSrc": "9718:26:8",
															"nodeType": "YulAssignment",
															"src": "9718:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9730:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9730:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9741:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9741:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9726:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9726:3:8"
																},
																"nativeSrc": "9726:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9726:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9718:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9718:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9765:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9765:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9776:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9776:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9761:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9761:3:8"
																		},
																		"nativeSrc": "9761:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9761:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9784:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9784:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9790:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9790:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9780:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9780:3:8"
																		},
																		"nativeSrc": "9780:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9780:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9754:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9754:6:8"
																},
																"nativeSrc": "9754:47:8",
																"nodeType": "YulFunctionCall",
																"src": "9754:47:8"
															},
															"nativeSrc": "9754:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "9754:47:8"
														},
														{
															"nativeSrc": "9810:139:8",
															"nodeType": "YulAssignment",
															"src": "9810:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9944:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9944:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9818:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "9818:124:8"
																},
																"nativeSrc": "9818:131:8",
																"nodeType": "YulFunctionCall",
																"src": "9818:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9810:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9810:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9537:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9688:9:8",
														"nodeType": "YulTypedName",
														"src": "9688:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9703:4:8",
														"nodeType": "YulTypedName",
														"src": "9703:4:8",
														"type": ""
													}
												],
												"src": "9537:419:8"
											},
											{
												"body": {
													"nativeSrc": "9990:152:8",
													"nodeType": "YulBlock",
													"src": "9990:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10007:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10007:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10010:77:8",
																		"nodeType": "YulLiteral",
																		"src": "10010:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10000:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10000:6:8"
																},
																"nativeSrc": "10000:88:8",
																"nodeType": "YulFunctionCall",
																"src": "10000:88:8"
															},
															"nativeSrc": "10000:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "10000:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10104:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10104:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10107:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10107:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10097:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10097:6:8"
																},
																"nativeSrc": "10097:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10097:15:8"
															},
															"nativeSrc": "10097:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10097:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10128:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10128:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10131:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10131:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10121:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10121:6:8"
																},
																"nativeSrc": "10121:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10121:15:8"
															},
															"nativeSrc": "10121:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10121:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9962:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "9962:180:8"
											},
											{
												"body": {
													"nativeSrc": "10192:147:8",
													"nodeType": "YulBlock",
													"src": "10192:147:8",
													"statements": [
														{
															"nativeSrc": "10202:25:8",
															"nodeType": "YulAssignment",
															"src": "10202:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10225:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10225:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10207:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10207:17:8"
																},
																"nativeSrc": "10207:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10207:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10202:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10202:1:8"
																}
															]
														},
														{
															"nativeSrc": "10236:25:8",
															"nodeType": "YulAssignment",
															"src": "10236:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10259:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10259:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10241:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10241:17:8"
																},
																"nativeSrc": "10241:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10241:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10236:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10236:1:8"
																}
															]
														},
														{
															"nativeSrc": "10270:16:8",
															"nodeType": "YulAssignment",
															"src": "10270:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10281:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10281:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10284:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10284:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10277:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10277:3:8"
																},
																"nativeSrc": "10277:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10277:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10270:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10270:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10310:22:8",
																"nodeType": "YulBlock",
																"src": "10310:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10312:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10312:16:8"
																			},
																			"nativeSrc": "10312:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10312:18:8"
																		},
																		"nativeSrc": "10312:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10312:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10302:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10302:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10305:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10305:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10299:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10299:2:8"
																},
																"nativeSrc": "10299:10:8",
																"nodeType": "YulFunctionCall",
																"src": "10299:10:8"
															},
															"nativeSrc": "10296:36:8",
															"nodeType": "YulIf",
															"src": "10296:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10148:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10179:1:8",
														"nodeType": "YulTypedName",
														"src": "10179:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10182:1:8",
														"nodeType": "YulTypedName",
														"src": "10182:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10188:3:8",
														"nodeType": "YulTypedName",
														"src": "10188:3:8",
														"type": ""
													}
												],
												"src": "10148:191:8"
											},
											{
												"body": {
													"nativeSrc": "10373:152:8",
													"nodeType": "YulBlock",
													"src": "10373:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10390:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10390:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10393:77:8",
																		"nodeType": "YulLiteral",
																		"src": "10393:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10383:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10383:6:8"
																},
																"nativeSrc": "10383:88:8",
																"nodeType": "YulFunctionCall",
																"src": "10383:88:8"
															},
															"nativeSrc": "10383:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "10383:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10487:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10487:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10490:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10490:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10480:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10480:6:8"
																},
																"nativeSrc": "10480:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10480:15:8"
															},
															"nativeSrc": "10480:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10480:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10511:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10511:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10514:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10514:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10504:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10504:6:8"
																},
																"nativeSrc": "10504:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10504:15:8"
															},
															"nativeSrc": "10504:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10504:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "10345:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "10345:180:8"
											},
											{
												"body": {
													"nativeSrc": "10574:128:8",
													"nodeType": "YulBlock",
													"src": "10574:128:8",
													"statements": [
														{
															"nativeSrc": "10584:33:8",
															"nodeType": "YulAssignment",
															"src": "10584:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10611:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "10611:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10593:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10593:17:8"
																},
																"nativeSrc": "10593:24:8",
																"nodeType": "YulFunctionCall",
																"src": "10593:24:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10584:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10584:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10645:22:8",
																"nodeType": "YulBlock",
																"src": "10645:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10647:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10647:16:8"
																			},
																			"nativeSrc": "10647:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10647:18:8"
																		},
																		"nativeSrc": "10647:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10647:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10632:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "10632:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10639:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10639:4:8",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10629:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10629:2:8"
																},
																"nativeSrc": "10629:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10629:15:8"
															},
															"nativeSrc": "10626:41:8",
															"nodeType": "YulIf",
															"src": "10626:41:8"
														},
														{
															"nativeSrc": "10676:20:8",
															"nodeType": "YulAssignment",
															"src": "10676:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10687:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "10687:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10694:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10694:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10683:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10683:3:8"
																},
																"nativeSrc": "10683:13:8",
																"nodeType": "YulFunctionCall",
																"src": "10683:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10676:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10676:3:8"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "10531:171:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10560:5:8",
														"nodeType": "YulTypedName",
														"src": "10560:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10570:3:8",
														"nodeType": "YulTypedName",
														"src": "10570:3:8",
														"type": ""
													}
												],
												"src": "10531:171:8"
											},
											{
												"body": {
													"nativeSrc": "10862:288:8",
													"nodeType": "YulBlock",
													"src": "10862:288:8",
													"statements": [
														{
															"nativeSrc": "10872:26:8",
															"nodeType": "YulAssignment",
															"src": "10872:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10884:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10884:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10895:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10895:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10880:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10880:3:8"
																},
																"nativeSrc": "10880:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10880:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10872:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10872:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10952:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10952:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10965:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10965:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10976:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10976:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10961:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10961:3:8"
																		},
																		"nativeSrc": "10961:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10961:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10908:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10908:43:8"
																},
																"nativeSrc": "10908:71:8",
																"nodeType": "YulFunctionCall",
																"src": "10908:71:8"
															},
															"nativeSrc": "10908:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "10908:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11033:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11033:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11046:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11046:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11057:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11057:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11042:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11042:3:8"
																		},
																		"nativeSrc": "11042:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11042:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10989:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10989:43:8"
																},
																"nativeSrc": "10989:72:8",
																"nodeType": "YulFunctionCall",
																"src": "10989:72:8"
															},
															"nativeSrc": "10989:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "10989:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11115:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11115:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11128:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11128:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11139:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11139:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11124:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11124:3:8"
																		},
																		"nativeSrc": "11124:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11124:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11071:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11071:43:8"
																},
																"nativeSrc": "11071:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11071:72:8"
															},
															"nativeSrc": "11071:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11071:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10708:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10818:9:8",
														"nodeType": "YulTypedName",
														"src": "10818:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10830:6:8",
														"nodeType": "YulTypedName",
														"src": "10830:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10838:6:8",
														"nodeType": "YulTypedName",
														"src": "10838:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10846:6:8",
														"nodeType": "YulTypedName",
														"src": "10846:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10857:4:8",
														"nodeType": "YulTypedName",
														"src": "10857:4:8",
														"type": ""
													}
												],
												"src": "10708:442:8"
											},
											{
												"body": {
													"nativeSrc": "11262:72:8",
													"nodeType": "YulBlock",
													"src": "11262:72:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11284:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11284:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11292:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11292:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11280:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11280:3:8"
																		},
																		"nativeSrc": "11280:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11280:14:8"
																	},
																	{
																		"hexValue": "596f752068617665206e6f207265776172647320746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "11296:30:8",
																		"nodeType": "YulLiteral",
																		"src": "11296:30:8",
																		"type": "",
																		"value": "You have no rewards to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11273:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11273:6:8"
																},
																"nativeSrc": "11273:54:8",
																"nodeType": "YulFunctionCall",
																"src": "11273:54:8"
															},
															"nativeSrc": "11273:54:8",
															"nodeType": "YulExpressionStatement",
															"src": "11273:54:8"
														}
													]
												},
												"name": "store_literal_in_memory_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e",
												"nativeSrc": "11156:178:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11254:6:8",
														"nodeType": "YulTypedName",
														"src": "11254:6:8",
														"type": ""
													}
												],
												"src": "11156:178:8"
											},
											{
												"body": {
													"nativeSrc": "11486:220:8",
													"nodeType": "YulBlock",
													"src": "11486:220:8",
													"statements": [
														{
															"nativeSrc": "11496:74:8",
															"nodeType": "YulAssignment",
															"src": "11496:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11562:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11562:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11567:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11567:2:8",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11503:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "11503:58:8"
																},
																"nativeSrc": "11503:67:8",
																"nodeType": "YulFunctionCall",
																"src": "11503:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11496:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11496:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11668:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11668:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e",
																	"nativeSrc": "11579:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "11579:88:8"
																},
																"nativeSrc": "11579:93:8",
																"nodeType": "YulFunctionCall",
																"src": "11579:93:8"
															},
															"nativeSrc": "11579:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "11579:93:8"
														},
														{
															"nativeSrc": "11681:19:8",
															"nodeType": "YulAssignment",
															"src": "11681:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11692:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11692:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11697:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11697:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11688:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11688:3:8"
																},
																"nativeSrc": "11688:12:8",
																"nodeType": "YulFunctionCall",
																"src": "11688:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11681:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11681:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11340:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11474:3:8",
														"nodeType": "YulTypedName",
														"src": "11474:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11482:3:8",
														"nodeType": "YulTypedName",
														"src": "11482:3:8",
														"type": ""
													}
												],
												"src": "11340:366:8"
											},
											{
												"body": {
													"nativeSrc": "11883:248:8",
													"nodeType": "YulBlock",
													"src": "11883:248:8",
													"statements": [
														{
															"nativeSrc": "11893:26:8",
															"nodeType": "YulAssignment",
															"src": "11893:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11905:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11905:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11916:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11916:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11901:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11901:3:8"
																},
																"nativeSrc": "11901:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11901:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11893:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11893:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11940:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11940:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11951:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11951:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11936:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11936:3:8"
																		},
																		"nativeSrc": "11936:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11936:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11959:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "11959:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11965:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11965:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11955:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11955:3:8"
																		},
																		"nativeSrc": "11955:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11955:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11929:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11929:6:8"
																},
																"nativeSrc": "11929:47:8",
																"nodeType": "YulFunctionCall",
																"src": "11929:47:8"
															},
															"nativeSrc": "11929:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "11929:47:8"
														},
														{
															"nativeSrc": "11985:139:8",
															"nodeType": "YulAssignment",
															"src": "11985:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12119:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12119:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11993:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "11993:124:8"
																},
																"nativeSrc": "11993:131:8",
																"nodeType": "YulFunctionCall",
																"src": "11993:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11985:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11985:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11712:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11863:9:8",
														"nodeType": "YulTypedName",
														"src": "11863:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11878:4:8",
														"nodeType": "YulTypedName",
														"src": "11878:4:8",
														"type": ""
													}
												],
												"src": "11712:419:8"
											},
											{
												"body": {
													"nativeSrc": "12165:152:8",
													"nodeType": "YulBlock",
													"src": "12165:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12182:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12182:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12185:77:8",
																		"nodeType": "YulLiteral",
																		"src": "12185:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12175:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12175:6:8"
																},
																"nativeSrc": "12175:88:8",
																"nodeType": "YulFunctionCall",
																"src": "12175:88:8"
															},
															"nativeSrc": "12175:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "12175:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12279:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12279:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12282:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12282:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12272:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12272:6:8"
																},
																"nativeSrc": "12272:15:8",
																"nodeType": "YulFunctionCall",
																"src": "12272:15:8"
															},
															"nativeSrc": "12272:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "12272:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12303:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12303:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12306:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12306:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12296:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12296:6:8"
																},
																"nativeSrc": "12296:15:8",
																"nodeType": "YulFunctionCall",
																"src": "12296:15:8"
															},
															"nativeSrc": "12296:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "12296:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "12137:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "12137:180:8"
											},
											{
												"body": {
													"nativeSrc": "12366:190:8",
													"nodeType": "YulBlock",
													"src": "12366:190:8",
													"statements": [
														{
															"nativeSrc": "12376:33:8",
															"nodeType": "YulAssignment",
															"src": "12376:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12403:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "12403:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12385:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "12385:17:8"
																},
																"nativeSrc": "12385:24:8",
																"nodeType": "YulFunctionCall",
																"src": "12385:24:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12376:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "12376:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12499:22:8",
																"nodeType": "YulBlock",
																"src": "12499:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12501:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "12501:16:8"
																			},
																			"nativeSrc": "12501:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12501:18:8"
																		},
																		"nativeSrc": "12501:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12501:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12424:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "12424:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12431:66:8",
																		"nodeType": "YulLiteral",
																		"src": "12431:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12421:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "12421:2:8"
																},
																"nativeSrc": "12421:77:8",
																"nodeType": "YulFunctionCall",
																"src": "12421:77:8"
															},
															"nativeSrc": "12418:103:8",
															"nodeType": "YulIf",
															"src": "12418:103:8"
														},
														{
															"nativeSrc": "12530:20:8",
															"nodeType": "YulAssignment",
															"src": "12530:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12541:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "12541:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12548:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12548:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12537:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12537:3:8"
																},
																"nativeSrc": "12537:13:8",
																"nodeType": "YulFunctionCall",
																"src": "12537:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12530:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12530:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "12323:233:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12352:5:8",
														"nodeType": "YulTypedName",
														"src": "12352:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12362:3:8",
														"nodeType": "YulTypedName",
														"src": "12362:3:8",
														"type": ""
													}
												],
												"src": "12323:233:8"
											},
											{
												"body": {
													"nativeSrc": "12625:80:8",
													"nodeType": "YulBlock",
													"src": "12625:80:8",
													"statements": [
														{
															"nativeSrc": "12635:22:8",
															"nodeType": "YulAssignment",
															"src": "12635:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12650:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12650:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12644:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "12644:5:8"
																},
																"nativeSrc": "12644:13:8",
																"nodeType": "YulFunctionCall",
																"src": "12644:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12635:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "12635:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12693:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "12693:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "12666:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "12666:26:8"
																},
																"nativeSrc": "12666:33:8",
																"nodeType": "YulFunctionCall",
																"src": "12666:33:8"
															},
															"nativeSrc": "12666:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "12666:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "12562:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12603:6:8",
														"nodeType": "YulTypedName",
														"src": "12603:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12611:3:8",
														"nodeType": "YulTypedName",
														"src": "12611:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12619:5:8",
														"nodeType": "YulTypedName",
														"src": "12619:5:8",
														"type": ""
													}
												],
												"src": "12562:143:8"
											},
											{
												"body": {
													"nativeSrc": "12788:274:8",
													"nodeType": "YulBlock",
													"src": "12788:274:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "12834:83:8",
																"nodeType": "YulBlock",
																"src": "12834:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12836:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "12836:77:8"
																			},
																			"nativeSrc": "12836:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12836:79:8"
																		},
																		"nativeSrc": "12836:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12836:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12809:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "12809:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12818:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12818:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12805:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12805:3:8"
																		},
																		"nativeSrc": "12805:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12805:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12830:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12830:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12801:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12801:3:8"
																},
																"nativeSrc": "12801:32:8",
																"nodeType": "YulFunctionCall",
																"src": "12801:32:8"
															},
															"nativeSrc": "12798:119:8",
															"nodeType": "YulIf",
															"src": "12798:119:8"
														},
														{
															"nativeSrc": "12927:128:8",
															"nodeType": "YulBlock",
															"src": "12927:128:8",
															"statements": [
																{
																	"nativeSrc": "12942:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12942:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12956:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12956:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12946:6:8",
																			"nodeType": "YulTypedName",
																			"src": "12946:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12971:74:8",
																	"nodeType": "YulAssignment",
																	"src": "12971:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13017:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "13017:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13028:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "13028:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13013:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "13013:3:8"
																				},
																				"nativeSrc": "13013:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "13013:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13037:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "13037:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "12981:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "12981:31:8"
																		},
																		"nativeSrc": "12981:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12981:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12971:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "12971:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "12711:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12758:9:8",
														"nodeType": "YulTypedName",
														"src": "12758:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12769:7:8",
														"nodeType": "YulTypedName",
														"src": "12769:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12781:6:8",
														"nodeType": "YulTypedName",
														"src": "12781:6:8",
														"type": ""
													}
												],
												"src": "12711:351:8"
											},
											{
												"body": {
													"nativeSrc": "13174:75:8",
													"nodeType": "YulBlock",
													"src": "13174:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13196:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13196:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13204:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13204:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13192:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13192:3:8"
																		},
																		"nativeSrc": "13192:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13192:14:8"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "13208:33:8",
																		"nodeType": "YulLiteral",
																		"src": "13208:33:8",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13185:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13185:6:8"
																},
																"nativeSrc": "13185:57:8",
																"nodeType": "YulFunctionCall",
																"src": "13185:57:8"
															},
															"nativeSrc": "13185:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "13185:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "13068:181:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13166:6:8",
														"nodeType": "YulTypedName",
														"src": "13166:6:8",
														"type": ""
													}
												],
												"src": "13068:181:8"
											},
											{
												"body": {
													"nativeSrc": "13401:220:8",
													"nodeType": "YulBlock",
													"src": "13401:220:8",
													"statements": [
														{
															"nativeSrc": "13411:74:8",
															"nodeType": "YulAssignment",
															"src": "13411:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13477:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13477:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13482:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13482:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13418:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "13418:58:8"
																},
																"nativeSrc": "13418:67:8",
																"nodeType": "YulFunctionCall",
																"src": "13418:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13411:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13411:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13583:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13583:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "13494:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "13494:88:8"
																},
																"nativeSrc": "13494:93:8",
																"nodeType": "YulFunctionCall",
																"src": "13494:93:8"
															},
															"nativeSrc": "13494:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "13494:93:8"
														},
														{
															"nativeSrc": "13596:19:8",
															"nodeType": "YulAssignment",
															"src": "13596:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13607:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13607:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13612:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13612:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13603:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13603:3:8"
																},
																"nativeSrc": "13603:12:8",
																"nodeType": "YulFunctionCall",
																"src": "13603:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13596:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13596:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13255:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13389:3:8",
														"nodeType": "YulTypedName",
														"src": "13389:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13397:3:8",
														"nodeType": "YulTypedName",
														"src": "13397:3:8",
														"type": ""
													}
												],
												"src": "13255:366:8"
											},
											{
												"body": {
													"nativeSrc": "13798:248:8",
													"nodeType": "YulBlock",
													"src": "13798:248:8",
													"statements": [
														{
															"nativeSrc": "13808:26:8",
															"nodeType": "YulAssignment",
															"src": "13808:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13820:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13820:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13831:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13831:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13816:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13816:3:8"
																},
																"nativeSrc": "13816:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13816:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13808:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13808:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13855:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13855:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13866:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13866:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13851:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13851:3:8"
																		},
																		"nativeSrc": "13851:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13851:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13874:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "13874:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13880:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13880:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13870:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13870:3:8"
																		},
																		"nativeSrc": "13870:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13870:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13844:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13844:6:8"
																},
																"nativeSrc": "13844:47:8",
																"nodeType": "YulFunctionCall",
																"src": "13844:47:8"
															},
															"nativeSrc": "13844:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "13844:47:8"
														},
														{
															"nativeSrc": "13900:139:8",
															"nodeType": "YulAssignment",
															"src": "13900:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14034:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "14034:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13908:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "13908:124:8"
																},
																"nativeSrc": "13908:131:8",
																"nodeType": "YulFunctionCall",
																"src": "13908:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13900:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13900:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13627:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13778:9:8",
														"nodeType": "YulTypedName",
														"src": "13778:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13793:4:8",
														"nodeType": "YulTypedName",
														"src": "13793:4:8",
														"type": ""
													}
												],
												"src": "13627:419:8"
											},
											{
												"body": {
													"nativeSrc": "14097:149:8",
													"nodeType": "YulBlock",
													"src": "14097:149:8",
													"statements": [
														{
															"nativeSrc": "14107:25:8",
															"nodeType": "YulAssignment",
															"src": "14107:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14130:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14130:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14112:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "14112:17:8"
																},
																"nativeSrc": "14112:20:8",
																"nodeType": "YulFunctionCall",
																"src": "14112:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14107:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "14107:1:8"
																}
															]
														},
														{
															"nativeSrc": "14141:25:8",
															"nodeType": "YulAssignment",
															"src": "14141:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14164:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14164:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14146:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "14146:17:8"
																},
																"nativeSrc": "14146:20:8",
																"nodeType": "YulFunctionCall",
																"src": "14146:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14141:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "14141:1:8"
																}
															]
														},
														{
															"nativeSrc": "14175:17:8",
															"nodeType": "YulAssignment",
															"src": "14175:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14187:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14187:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14190:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14190:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14183:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14183:3:8"
																},
																"nativeSrc": "14183:9:8",
																"nodeType": "YulFunctionCall",
																"src": "14183:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14175:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14175:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14217:22:8",
																"nodeType": "YulBlock",
																"src": "14217:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14219:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "14219:16:8"
																			},
																			"nativeSrc": "14219:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14219:18:8"
																		},
																		"nativeSrc": "14219:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "14219:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14208:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "14208:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14214:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14214:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14205:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "14205:2:8"
																},
																"nativeSrc": "14205:11:8",
																"nodeType": "YulFunctionCall",
																"src": "14205:11:8"
															},
															"nativeSrc": "14202:37:8",
															"nodeType": "YulIf",
															"src": "14202:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14052:194:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14083:1:8",
														"nodeType": "YulTypedName",
														"src": "14083:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14086:1:8",
														"nodeType": "YulTypedName",
														"src": "14086:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14092:4:8",
														"nodeType": "YulTypedName",
														"src": "14092:4:8",
														"type": ""
													}
												],
												"src": "14052:194:8"
											},
											{
												"body": {
													"nativeSrc": "14300:362:8",
													"nodeType": "YulBlock",
													"src": "14300:362:8",
													"statements": [
														{
															"nativeSrc": "14310:25:8",
															"nodeType": "YulAssignment",
															"src": "14310:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14333:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14333:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14315:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "14315:17:8"
																},
																"nativeSrc": "14315:20:8",
																"nodeType": "YulFunctionCall",
																"src": "14315:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14310:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "14310:1:8"
																}
															]
														},
														{
															"nativeSrc": "14344:25:8",
															"nodeType": "YulAssignment",
															"src": "14344:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14367:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14367:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14349:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "14349:17:8"
																},
																"nativeSrc": "14349:20:8",
																"nodeType": "YulFunctionCall",
																"src": "14349:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14344:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "14344:1:8"
																}
															]
														},
														{
															"nativeSrc": "14378:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "14378:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14401:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14401:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14404:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14404:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14397:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14397:3:8"
																},
																"nativeSrc": "14397:9:8",
																"nodeType": "YulFunctionCall",
																"src": "14397:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "14382:11:8",
																	"nodeType": "YulTypedName",
																	"src": "14382:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14415:41:8",
															"nodeType": "YulAssignment",
															"src": "14415:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "14444:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "14444:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14426:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "14426:17:8"
																},
																"nativeSrc": "14426:30:8",
																"nodeType": "YulFunctionCall",
																"src": "14426:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14415:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "14415:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14633:22:8",
																"nodeType": "YulBlock",
																"src": "14633:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14635:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "14635:16:8"
																			},
																			"nativeSrc": "14635:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14635:18:8"
																		},
																		"nativeSrc": "14635:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "14635:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "14566:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "14566:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14559:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "14559:6:8"
																				},
																				"nativeSrc": "14559:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14559:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "14589:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "14589:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "14596:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "14596:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "14605:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "14605:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "14592:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "14592:3:8"
																						},
																						"nativeSrc": "14592:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "14592:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "14586:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "14586:2:8"
																				},
																				"nativeSrc": "14586:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14586:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "14539:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "14539:2:8"
																		},
																		"nativeSrc": "14539:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14539:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14519:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14519:6:8"
																},
																"nativeSrc": "14519:113:8",
																"nodeType": "YulFunctionCall",
																"src": "14519:113:8"
															},
															"nativeSrc": "14516:139:8",
															"nodeType": "YulIf",
															"src": "14516:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "14252:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14283:1:8",
														"nodeType": "YulTypedName",
														"src": "14283:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14286:1:8",
														"nodeType": "YulTypedName",
														"src": "14286:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "14292:7:8",
														"nodeType": "YulTypedName",
														"src": "14292:7:8",
														"type": ""
													}
												],
												"src": "14252:410:8"
											},
											{
												"body": {
													"nativeSrc": "14696:152:8",
													"nodeType": "YulBlock",
													"src": "14696:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14713:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14713:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14716:77:8",
																		"nodeType": "YulLiteral",
																		"src": "14716:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14706:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14706:6:8"
																},
																"nativeSrc": "14706:88:8",
																"nodeType": "YulFunctionCall",
																"src": "14706:88:8"
															},
															"nativeSrc": "14706:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "14706:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14810:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14810:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14813:4:8",
																		"nodeType": "YulLiteral",
																		"src": "14813:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14803:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14803:6:8"
																},
																"nativeSrc": "14803:15:8",
																"nodeType": "YulFunctionCall",
																"src": "14803:15:8"
															},
															"nativeSrc": "14803:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "14803:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14834:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14834:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14837:4:8",
																		"nodeType": "YulLiteral",
																		"src": "14837:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14827:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14827:6:8"
																},
																"nativeSrc": "14827:15:8",
																"nodeType": "YulFunctionCall",
																"src": "14827:15:8"
															},
															"nativeSrc": "14827:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "14827:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14668:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "14668:180:8"
											},
											{
												"body": {
													"nativeSrc": "14896:143:8",
													"nodeType": "YulBlock",
													"src": "14896:143:8",
													"statements": [
														{
															"nativeSrc": "14906:25:8",
															"nodeType": "YulAssignment",
															"src": "14906:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14929:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14929:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14911:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "14911:17:8"
																},
																"nativeSrc": "14911:20:8",
																"nodeType": "YulFunctionCall",
																"src": "14911:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14906:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "14906:1:8"
																}
															]
														},
														{
															"nativeSrc": "14940:25:8",
															"nodeType": "YulAssignment",
															"src": "14940:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14963:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14963:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14945:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "14945:17:8"
																},
																"nativeSrc": "14945:20:8",
																"nodeType": "YulFunctionCall",
																"src": "14945:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14940:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "14940:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14987:22:8",
																"nodeType": "YulBlock",
																"src": "14987:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "14989:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "14989:16:8"
																			},
																			"nativeSrc": "14989:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14989:18:8"
																		},
																		"nativeSrc": "14989:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "14989:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14984:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14984:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14977:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14977:6:8"
																},
																"nativeSrc": "14977:9:8",
																"nodeType": "YulFunctionCall",
																"src": "14977:9:8"
															},
															"nativeSrc": "14974:35:8",
															"nodeType": "YulIf",
															"src": "14974:35:8"
														},
														{
															"nativeSrc": "15019:14:8",
															"nodeType": "YulAssignment",
															"src": "15019:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15028:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "15028:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15031:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "15031:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15024:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15024:3:8"
																},
																"nativeSrc": "15024:9:8",
																"nodeType": "YulFunctionCall",
																"src": "15024:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "15019:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "15019:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14854:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14885:1:8",
														"nodeType": "YulTypedName",
														"src": "14885:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14888:1:8",
														"nodeType": "YulTypedName",
														"src": "14888:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14894:1:8",
														"nodeType": "YulTypedName",
														"src": "14894:1:8",
														"type": ""
													}
												],
												"src": "14854:185:8"
											},
											{
												"body": {
													"nativeSrc": "15171:206:8",
													"nodeType": "YulBlock",
													"src": "15171:206:8",
													"statements": [
														{
															"nativeSrc": "15181:26:8",
															"nodeType": "YulAssignment",
															"src": "15181:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15193:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "15193:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15204:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15204:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15189:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15189:3:8"
																},
																"nativeSrc": "15189:18:8",
																"nodeType": "YulFunctionCall",
																"src": "15189:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15181:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15181:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15261:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15261:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15274:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15274:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15285:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15285:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15270:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15270:3:8"
																		},
																		"nativeSrc": "15270:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15270:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15217:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "15217:43:8"
																},
																"nativeSrc": "15217:71:8",
																"nodeType": "YulFunctionCall",
																"src": "15217:71:8"
															},
															"nativeSrc": "15217:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "15217:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15342:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15342:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15355:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15355:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15366:2:8",
																				"nodeType": "YulLiteral",
																				"src": "15366:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15351:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15351:3:8"
																		},
																		"nativeSrc": "15351:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15351:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15298:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "15298:43:8"
																},
																"nativeSrc": "15298:72:8",
																"nodeType": "YulFunctionCall",
																"src": "15298:72:8"
															},
															"nativeSrc": "15298:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "15298:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "15045:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15135:9:8",
														"nodeType": "YulTypedName",
														"src": "15135:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15147:6:8",
														"nodeType": "YulTypedName",
														"src": "15147:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15155:6:8",
														"nodeType": "YulTypedName",
														"src": "15155:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15166:4:8",
														"nodeType": "YulTypedName",
														"src": "15166:4:8",
														"type": ""
													}
												],
												"src": "15045:332:8"
											},
											{
												"body": {
													"nativeSrc": "15425:48:8",
													"nodeType": "YulBlock",
													"src": "15425:48:8",
													"statements": [
														{
															"nativeSrc": "15435:32:8",
															"nodeType": "YulAssignment",
															"src": "15435:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15460:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "15460:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "15453:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "15453:6:8"
																		},
																		"nativeSrc": "15453:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15453:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15446:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15446:6:8"
																},
																"nativeSrc": "15446:21:8",
																"nodeType": "YulFunctionCall",
																"src": "15446:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15435:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "15435:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "15383:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15407:5:8",
														"nodeType": "YulTypedName",
														"src": "15407:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15417:7:8",
														"nodeType": "YulTypedName",
														"src": "15417:7:8",
														"type": ""
													}
												],
												"src": "15383:90:8"
											},
											{
												"body": {
													"nativeSrc": "15519:76:8",
													"nodeType": "YulBlock",
													"src": "15519:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "15573:16:8",
																"nodeType": "YulBlock",
																"src": "15573:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15582:1:8",
																					"nodeType": "YulLiteral",
																					"src": "15582:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15585:1:8",
																					"nodeType": "YulLiteral",
																					"src": "15585:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15575:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "15575:6:8"
																			},
																			"nativeSrc": "15575:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "15575:12:8"
																		},
																		"nativeSrc": "15575:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "15575:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15542:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "15542:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15564:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "15564:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "15549:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "15549:14:8"
																				},
																				"nativeSrc": "15549:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "15549:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "15539:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "15539:2:8"
																		},
																		"nativeSrc": "15539:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15539:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15532:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15532:6:8"
																},
																"nativeSrc": "15532:40:8",
																"nodeType": "YulFunctionCall",
																"src": "15532:40:8"
															},
															"nativeSrc": "15529:60:8",
															"nodeType": "YulIf",
															"src": "15529:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "15479:116:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15512:5:8",
														"nodeType": "YulTypedName",
														"src": "15512:5:8",
														"type": ""
													}
												],
												"src": "15479:116:8"
											},
											{
												"body": {
													"nativeSrc": "15661:77:8",
													"nodeType": "YulBlock",
													"src": "15661:77:8",
													"statements": [
														{
															"nativeSrc": "15671:22:8",
															"nodeType": "YulAssignment",
															"src": "15671:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15686:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15686:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15680:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "15680:5:8"
																},
																"nativeSrc": "15680:13:8",
																"nodeType": "YulFunctionCall",
																"src": "15680:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15671:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "15671:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15726:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "15726:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "15702:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "15702:23:8"
																},
																"nativeSrc": "15702:30:8",
																"nodeType": "YulFunctionCall",
																"src": "15702:30:8"
															},
															"nativeSrc": "15702:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "15702:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "15601:137:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15639:6:8",
														"nodeType": "YulTypedName",
														"src": "15639:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15647:3:8",
														"nodeType": "YulTypedName",
														"src": "15647:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15655:5:8",
														"nodeType": "YulTypedName",
														"src": "15655:5:8",
														"type": ""
													}
												],
												"src": "15601:137:8"
											},
											{
												"body": {
													"nativeSrc": "15818:271:8",
													"nodeType": "YulBlock",
													"src": "15818:271:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "15864:83:8",
																"nodeType": "YulBlock",
																"src": "15864:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15866:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "15866:77:8"
																			},
																			"nativeSrc": "15866:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "15866:79:8"
																		},
																		"nativeSrc": "15866:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "15866:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15839:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "15839:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15848:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15848:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15835:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15835:3:8"
																		},
																		"nativeSrc": "15835:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15835:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15860:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15860:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15831:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15831:3:8"
																},
																"nativeSrc": "15831:32:8",
																"nodeType": "YulFunctionCall",
																"src": "15831:32:8"
															},
															"nativeSrc": "15828:119:8",
															"nodeType": "YulIf",
															"src": "15828:119:8"
														},
														{
															"nativeSrc": "15957:125:8",
															"nodeType": "YulBlock",
															"src": "15957:125:8",
															"statements": [
																{
																	"nativeSrc": "15972:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15972:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15986:1:8",
																		"nodeType": "YulLiteral",
																		"src": "15986:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15976:6:8",
																			"nodeType": "YulTypedName",
																			"src": "15976:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16001:71:8",
																	"nodeType": "YulAssignment",
																	"src": "16001:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16044:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "16044:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16055:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "16055:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16040:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "16040:3:8"
																				},
																				"nativeSrc": "16040:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "16040:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16064:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "16064:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "16011:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "16011:28:8"
																		},
																		"nativeSrc": "16011:61:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16011:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16001:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "16001:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "15744:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15788:9:8",
														"nodeType": "YulTypedName",
														"src": "15788:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15799:7:8",
														"nodeType": "YulTypedName",
														"src": "15799:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15811:6:8",
														"nodeType": "YulTypedName",
														"src": "15811:6:8",
														"type": ""
													}
												],
												"src": "15744:345:8"
											},
											{
												"body": {
													"nativeSrc": "16153:40:8",
													"nodeType": "YulBlock",
													"src": "16153:40:8",
													"statements": [
														{
															"nativeSrc": "16164:22:8",
															"nodeType": "YulAssignment",
															"src": "16164:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16180:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "16180:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16174:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "16174:5:8"
																},
																"nativeSrc": "16174:12:8",
																"nodeType": "YulFunctionCall",
																"src": "16174:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "16164:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16164:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "16095:98:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16136:5:8",
														"nodeType": "YulTypedName",
														"src": "16136:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "16146:6:8",
														"nodeType": "YulTypedName",
														"src": "16146:6:8",
														"type": ""
													}
												],
												"src": "16095:98:8"
											},
											{
												"body": {
													"nativeSrc": "16312:34:8",
													"nodeType": "YulBlock",
													"src": "16312:34:8",
													"statements": [
														{
															"nativeSrc": "16322:18:8",
															"nodeType": "YulAssignment",
															"src": "16322:18:8",
															"value": {
																"name": "pos",
																"nativeSrc": "16337:3:8",
																"nodeType": "YulIdentifier",
																"src": "16337:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "16322:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "16322:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16199:147:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16284:3:8",
														"nodeType": "YulTypedName",
														"src": "16284:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16289:6:8",
														"nodeType": "YulTypedName",
														"src": "16289:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "16300:11:8",
														"nodeType": "YulTypedName",
														"src": "16300:11:8",
														"type": ""
													}
												],
												"src": "16199:147:8"
											},
											{
												"body": {
													"nativeSrc": "16414:184:8",
													"nodeType": "YulBlock",
													"src": "16414:184:8",
													"statements": [
														{
															"nativeSrc": "16424:10:8",
															"nodeType": "YulVariableDeclaration",
															"src": "16424:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "16433:1:8",
																"nodeType": "YulLiteral",
																"src": "16433:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "16428:1:8",
																	"nodeType": "YulTypedName",
																	"src": "16428:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16493:63:8",
																"nodeType": "YulBlock",
																"src": "16493:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "16518:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "16518:3:8"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "16523:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "16523:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "16514:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "16514:3:8"
																					},
																					"nativeSrc": "16514:11:8",
																					"nodeType": "YulFunctionCall",
																					"src": "16514:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "16537:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "16537:3:8"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "16542:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "16542:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "16533:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "16533:3:8"
																							},
																							"nativeSrc": "16533:11:8",
																							"nodeType": "YulFunctionCall",
																							"src": "16533:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "16527:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "16527:5:8"
																					},
																					"nativeSrc": "16527:18:8",
																					"nodeType": "YulFunctionCall",
																					"src": "16527:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "16507:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "16507:6:8"
																			},
																			"nativeSrc": "16507:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16507:39:8"
																		},
																		"nativeSrc": "16507:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "16507:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "16454:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "16454:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16457:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16457:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "16451:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "16451:2:8"
																},
																"nativeSrc": "16451:13:8",
																"nodeType": "YulFunctionCall",
																"src": "16451:13:8"
															},
															"nativeSrc": "16443:113:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "16465:19:8",
																"nodeType": "YulBlock",
																"src": "16465:19:8",
																"statements": [
																	{
																		"nativeSrc": "16467:15:8",
																		"nodeType": "YulAssignment",
																		"src": "16467:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "16476:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "16476:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16479:2:8",
																					"nodeType": "YulLiteral",
																					"src": "16479:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16472:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "16472:3:8"
																			},
																			"nativeSrc": "16472:10:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16472:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "16467:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "16467:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "16447:3:8",
																"nodeType": "YulBlock",
																"src": "16447:3:8",
																"statements": []
															},
															"src": "16443:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "16576:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "16576:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "16581:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "16581:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16572:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16572:3:8"
																		},
																		"nativeSrc": "16572:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16572:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16590:1:8",
																		"nodeType": "YulLiteral",
																		"src": "16590:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16565:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16565:6:8"
																},
																"nativeSrc": "16565:27:8",
																"nodeType": "YulFunctionCall",
																"src": "16565:27:8"
															},
															"nativeSrc": "16565:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "16565:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "16352:246:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "16396:3:8",
														"nodeType": "YulTypedName",
														"src": "16396:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "16401:3:8",
														"nodeType": "YulTypedName",
														"src": "16401:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16406:6:8",
														"nodeType": "YulTypedName",
														"src": "16406:6:8",
														"type": ""
													}
												],
												"src": "16352:246:8"
											},
											{
												"body": {
													"nativeSrc": "16712:278:8",
													"nodeType": "YulBlock",
													"src": "16712:278:8",
													"statements": [
														{
															"nativeSrc": "16722:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "16722:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16768:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "16768:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "16736:31:8",
																	"nodeType": "YulIdentifier",
																	"src": "16736:31:8"
																},
																"nativeSrc": "16736:38:8",
																"nodeType": "YulFunctionCall",
																"src": "16736:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16726:6:8",
																	"nodeType": "YulTypedName",
																	"src": "16726:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16783:95:8",
															"nodeType": "YulAssignment",
															"src": "16783:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16866:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16866:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16871:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16871:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16790:75:8",
																	"nodeType": "YulIdentifier",
																	"src": "16790:75:8"
																},
																"nativeSrc": "16790:88:8",
																"nodeType": "YulFunctionCall",
																"src": "16790:88:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16783:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16783:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16926:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "16926:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16933:4:8",
																				"nodeType": "YulLiteral",
																				"src": "16933:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16922:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16922:3:8"
																		},
																		"nativeSrc": "16922:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16922:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16940:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16940:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16945:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16945:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "16887:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "16887:34:8"
																},
																"nativeSrc": "16887:65:8",
																"nodeType": "YulFunctionCall",
																"src": "16887:65:8"
															},
															"nativeSrc": "16887:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "16887:65:8"
														},
														{
															"nativeSrc": "16961:23:8",
															"nodeType": "YulAssignment",
															"src": "16961:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16972:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16972:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16977:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16977:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16968:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16968:3:8"
																},
																"nativeSrc": "16968:16:8",
																"nodeType": "YulFunctionCall",
																"src": "16968:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16961:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16961:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16604:386:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16693:5:8",
														"nodeType": "YulTypedName",
														"src": "16693:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16700:3:8",
														"nodeType": "YulTypedName",
														"src": "16700:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16708:3:8",
														"nodeType": "YulTypedName",
														"src": "16708:3:8",
														"type": ""
													}
												],
												"src": "16604:386:8"
											},
											{
												"body": {
													"nativeSrc": "17130:137:8",
													"nodeType": "YulBlock",
													"src": "17130:137:8",
													"statements": [
														{
															"nativeSrc": "17141:100:8",
															"nodeType": "YulAssignment",
															"src": "17141:100:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17228:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17228:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "17237:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17237:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17148:79:8",
																	"nodeType": "YulIdentifier",
																	"src": "17148:79:8"
																},
																"nativeSrc": "17148:93:8",
																"nodeType": "YulFunctionCall",
																"src": "17148:93:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17141:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17141:3:8"
																}
															]
														},
														{
															"nativeSrc": "17251:10:8",
															"nodeType": "YulAssignment",
															"src": "17251:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "17258:3:8",
																"nodeType": "YulIdentifier",
																"src": "17258:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17251:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17251:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "16996:271:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17109:3:8",
														"nodeType": "YulTypedName",
														"src": "17109:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17115:6:8",
														"nodeType": "YulTypedName",
														"src": "17115:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17126:3:8",
														"nodeType": "YulTypedName",
														"src": "17126:3:8",
														"type": ""
													}
												],
												"src": "16996:271:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct ERC721Staking.StakedToken -> struct ERC721Staking.StakedToken\n    function abi_encode_t_struct$_StakedToken_$891_memory_ptr_to_t_struct$_StakedToken_$891_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // staker\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenId\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_StakedToken_$891_memory_ptr_to_t_struct$_StakedToken_$891_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_StakedToken_$891_memory_ptr_to_t_struct$_StakedToken_$891_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function array_nextElement_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct ERC721Staking.StakedToken[] -> struct ERC721Staking.StakedToken[]\n    function abi_encode_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_StakedToken_$891_memory_ptr_to_t_struct$_StakedToken_$891_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$585_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721_$585_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$585_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$585__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$585_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IERC20_$142_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$142_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$142__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$142_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have no tokens staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9(memPtr) {\n\n        mstore(add(memPtr, 0), \"You don't own this token!\")\n\n    }\n\n    function abi_encode_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have no rewards to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"865": [
									{
										"length": 32,
										"start": 2089
									},
									{
										"length": 32,
										"start": 4174
									}
								],
								"868": [
									{
										"length": 32,
										"start": 1573
									},
									{
										"length": 32,
										"start": 3001
									},
									{
										"length": 32,
										"start": 3325
									},
									{
										"length": 32,
										"start": 3563
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610091575f3560e01c80639168ae72116100645780639168ae7214610109578063940670451461013b578063a694fc3a1461016b578063d1af0c7d14610187578063f854a27f146101a557610091565b80632e1a7d4d14610095578063372500ab146100b157806363c28db1146100bb5780636588103b146100eb575b5f80fd5b6100af60048036038101906100aa9190611507565b6101d5565b005b6100b96106ff565b005b6100d560048036038101906100d0919061158c565b610870565b6040516100e291906116aa565b60405180910390f35b6100f3610bb7565b6040516101009190611725565b60405180910390f35b610123600480360381019061011e919061158c565b610bdb565b6040516101329392919061174d565b60405180910390f35b61015560048036038101906101509190611507565b610c01565b6040516101629190611791565b60405180910390f35b61018560048036038101906101809190611507565b610c31565b005b61018f61104c565b60405161019c91906117ca565b60405180910390f35b6101bf60048036038101906101ba919061158c565b611070565b6040516101cc91906117e3565b60405180910390f35b6101dd6110d1565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01541161025e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025590611856565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1660035f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f3906118be565b60405180910390fd5b5f6103063361111e565b90508060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015f8282546103579190611909565b925050819055505f805b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101805490508110156104e1578360025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010182815481106103ff576103fe61193c565b5b905f5260205f209060020201600101541480156104c757505f73ffffffffffffffffffffffffffffffffffffffff1660025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010182815481106104805761047f61193c565b5b905f5260205f2090600202015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156104d4578091506104e1565b8080600101915050610361565b505f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010182815481106105355761053461193c565b5b905f5260205f2090600202015f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f8154809291906105cf90611969565b91905055505f60035f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3033866040518463ffffffff1660e01b815260040161068093929190611990565b5f604051808303815f87803b158015610697575f80fd5b505af11580156106a9573d5f803e3d5ffd5b505050504260025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206002018190555050506106fc6111d6565b50565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015461074a3361111e565b6107549190611909565b90505f8111610798576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078f90611a0f565b60405180910390fd5b4260025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600201819055505f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003018190555061086d33827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166111df9092919063ffffffff16565b50565b60605f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01541115610b5b575f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015467ffffffffffffffff81111561091357610912611a2d565b5b60405190808252806020026020018201604052801561094c57816020015b6109396114a2565b8152602001906001900390816109315790505b5090505f805b60025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010180549050811015610b50575f73ffffffffffffffffffffffffffffffffffffffff1660025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001018281548110610a0657610a0561193c565b5b905f5260205f2090600202015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b435760025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206001018181548110610aa157610aa061193c565b5b905f5260205f2090600202016040518060400160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481525050838381518110610b2957610b2861193c565b5b60200260200101819052508180610b3f90611a5a565b9250505b8080600101915050610952565b508192505050610bb2565b5f67ffffffffffffffff811115610b7557610b74611a2d565b5b604051908082528060200260200182016040528015610bae57816020015b610b9b6114a2565b815260200190600190039081610b935790505b5090505b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6002602052805f5260405f205f91509050805f0154908060020154908060030154905083565b6003602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c396110d1565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f01541115610ce4575f610c8a3361111e565b90508060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015f828254610cdb9190611909565b92505081905550505b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401610d5491906117e3565b602060405180830381865afa158015610d6f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d939190611ab5565b73ffffffffffffffffffffffffffffffffffffffff1614610de9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de0906118be565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610e4693929190611990565b5f604051808303815f87803b158015610e5d575f80fd5b505af1158015610e6f573d5f803e3d5ffd5b505050505f60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200183815250905060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060010181908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f815480929190610fa790611a5a565b91905055503360035f8481526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504260025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060020181905550506110496111d6565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600301546110bc8461111e565b6110c69190611909565b905080915050919050565b60025f5403611115576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110c90611b2a565b60405180910390fd5b60025f81905550565b5f610e1060015460025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015460025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2060020154426111b19190611b48565b6111bb9190611b7b565b6111c59190611b7b565b6111cf9190611be9565b9050919050565b60015f81905550565b611259838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611212929190611c19565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061125e565b505050565b5f611288828473ffffffffffffffffffffffffffffffffffffffff166112f390919063ffffffff16565b90505f8151141580156112ac5750808060200190518101906112aa9190611c75565b155b156112ee57826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016112e59190611791565b60405180910390fd5b505050565b606061130083835f611308565b905092915050565b60608147101561134f57306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016113469190611791565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516113779190611d0c565b5f6040518083038185875af1925050503d805f81146113b1576040519150601f19603f3d011682016040523d82523d5f602084013e6113b6565b606091505b50915091506113c68683836113d1565b925050509392505050565b6060826113e6576113e18261145e565b611456565b5f825114801561140c57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561144e57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016114459190611791565b60405180910390fd5b819050611457565b5b9392505050565b5f815111156114705780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180604001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81525090565b5f80fd5b5f819050919050565b6114e6816114d4565b81146114f0575f80fd5b50565b5f81359050611501816114dd565b92915050565b5f6020828403121561151c5761151b6114d0565b5b5f611529848285016114f3565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61155b82611532565b9050919050565b61156b81611551565b8114611575575f80fd5b50565b5f8135905061158681611562565b92915050565b5f602082840312156115a1576115a06114d0565b5b5f6115ae84828501611578565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6115e981611551565b82525050565b6115f8816114d4565b82525050565b604082015f8201516116125f8501826115e0565b50602082015161162560208501826115ef565b50505050565b5f61163683836115fe565b60408301905092915050565b5f602082019050919050565b5f611658826115b7565b61166281856115c1565b935061166d836115d1565b805f5b8381101561169d578151611684888261162b565b975061168f83611642565b925050600181019050611670565b5085935050505092915050565b5f6020820190508181035f8301526116c2818461164e565b905092915050565b5f819050919050565b5f6116ed6116e86116e384611532565b6116ca565b611532565b9050919050565b5f6116fe826116d3565b9050919050565b5f61170f826116f4565b9050919050565b61171f81611705565b82525050565b5f6020820190506117385f830184611716565b92915050565b611747816114d4565b82525050565b5f6060820190506117605f83018661173e565b61176d602083018561173e565b61177a604083018461173e565b949350505050565b61178b81611551565b82525050565b5f6020820190506117a45f830184611782565b92915050565b5f6117b4826116f4565b9050919050565b6117c4816117aa565b82525050565b5f6020820190506117dd5f8301846117bb565b92915050565b5f6020820190506117f65f83018461173e565b92915050565b5f82825260208201905092915050565b7f596f752068617665206e6f20746f6b656e73207374616b6564000000000000005f82015250565b5f6118406019836117fc565b915061184b8261180c565b602082019050919050565b5f6020820190508181035f83015261186d81611834565b9050919050565b7f596f7520646f6e2774206f776e207468697320746f6b656e21000000000000005f82015250565b5f6118a86019836117fc565b91506118b382611874565b602082019050919050565b5f6020820190508181035f8301526118d58161189c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611913826114d4565b915061191e836114d4565b9250828201905080821115611936576119356118dc565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f611973826114d4565b91505f8203611985576119846118dc565b5b600182039050919050565b5f6060820190506119a35f830186611782565b6119b06020830185611782565b6119bd604083018461173e565b949350505050565b7f596f752068617665206e6f207265776172647320746f20636c61696d000000005f82015250565b5f6119f9601c836117fc565b9150611a04826119c5565b602082019050919050565b5f6020820190508181035f830152611a26816119ed565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f611a64826114d4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a9657611a956118dc565b5b600182019050919050565b5f81519050611aaf81611562565b92915050565b5f60208284031215611aca57611ac96114d0565b5b5f611ad784828501611aa1565b91505092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611b14601f836117fc565b9150611b1f82611ae0565b602082019050919050565b5f6020820190508181035f830152611b4181611b08565b9050919050565b5f611b52826114d4565b9150611b5d836114d4565b9250828203905081811115611b7557611b746118dc565b5b92915050565b5f611b85826114d4565b9150611b90836114d4565b9250828202611b9e816114d4565b91508282048414831517611bb557611bb46118dc565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611bf3826114d4565b9150611bfe836114d4565b925082611c0e57611c0d611bbc565b5b828204905092915050565b5f604082019050611c2c5f830185611782565b611c39602083018461173e565b9392505050565b5f8115159050919050565b611c5481611c40565b8114611c5e575f80fd5b50565b5f81519050611c6f81611c4b565b92915050565b5f60208284031215611c8a57611c896114d0565b5b5f611c9784828501611c61565b91505092915050565b5f81519050919050565b5f81905092915050565b5f5b83811015611cd1578082015181840152602081019050611cb6565b5f8484015250505050565b5f611ce682611ca0565b611cf08185611caa565b9350611d00818560208601611cb4565b80840191505092915050565b5f611d178284611cdc565b91508190509291505056fea2646970667358221220be0b697aac71e3188c0985d7f5c31f802e52675e8521935fec264a41d6090a0b64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9168AE72 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x94067045 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xF854A27F EQ PUSH2 0x1A5 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x63C28DB1 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x6588103B EQ PUSH2 0xEB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x1507 JUMP JUMPDEST PUSH2 0x1D5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB9 PUSH2 0x6FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x870 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x16AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF3 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x1725 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x123 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x174D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x1507 JUMP JUMPDEST PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x1507 JUMP JUMPDEST PUSH2 0xC31 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18F PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x158C JUMP JUMPDEST PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH2 0x10D1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT PUSH2 0x25E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x255 SWAP1 PUSH2 0x1856 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x306 CALLER PUSH2 0x111E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP1 JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x4E1 JUMPI DUP4 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x3FF JUMPI PUSH2 0x3FE PUSH2 0x193C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x4C7 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x480 JUMPI PUSH2 0x47F PUSH2 0x193C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x4D4 JUMPI DUP1 SWAP2 POP PUSH2 0x4E1 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x361 JUMP JUMPDEST POP PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x535 JUMPI PUSH2 0x534 PUSH2 0x193C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x5CF SWAP1 PUSH2 0x1969 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH1 0x3 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x680 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1990 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x697 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6A9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP TIMESTAMP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x6FC PUSH2 0x11D6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x74A CALLER PUSH2 0x111E JUMP JUMPDEST PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x798 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78F SWAP1 PUSH2 0x1A0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x86D CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11DF SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT ISZERO PUSH2 0xB5B JUMPI PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x913 JUMPI PUSH2 0x912 PUSH2 0x1A2D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x94C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x939 PUSH2 0x14A2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x931 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xB50 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA06 JUMPI PUSH2 0xA05 PUSH2 0x193C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB43 JUMPI PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAA1 JUMPI PUSH2 0xAA0 PUSH2 0x193C JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xB29 JUMPI PUSH2 0xB28 PUSH2 0x193C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0xB3F SWAP1 PUSH2 0x1A5A JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x952 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP PUSH2 0xBB2 JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB75 JUMPI PUSH2 0xB74 PUSH2 0x1A2D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBAE JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xB9B PUSH2 0x14A2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xB93 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xC39 PUSH2 0x10D1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD GT ISZERO PUSH2 0xCE4 JUMPI PUSH0 PUSH2 0xC8A CALLER PUSH2 0x111E JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCDB SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD54 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD6F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD93 SWAP2 SWAP1 PUSH2 0x1AB5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE0 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE46 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1990 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE5D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE6F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xFA7 SWAP1 PUSH2 0x1A5A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH1 0x3 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0x1049 PUSH2 0x11D6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x10BC DUP5 PUSH2 0x111E JUMP JUMPDEST PUSH2 0x10C6 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x1115 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110C SWAP1 PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE10 PUSH1 0x1 SLOAD PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x11BB SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH2 0x11C5 SWAP2 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH2 0x11CF SWAP2 SWAP1 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1259 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1212 SWAP3 SWAP2 SWAP1 PUSH2 0x1C19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x125E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1288 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12F3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x12AC JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x12AA SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x12EE JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12E5 SWAP2 SWAP1 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1300 DUP4 DUP4 PUSH0 PUSH2 0x1308 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x134F JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1346 SWAP2 SWAP1 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1377 SWAP2 SWAP1 PUSH2 0x1D0C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x13B1 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x13C6 DUP7 DUP4 DUP4 PUSH2 0x13D1 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x13E6 JUMPI PUSH2 0x13E1 DUP3 PUSH2 0x145E JUMP JUMPDEST PUSH2 0x1456 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x140C JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x144E JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1445 SWAP2 SWAP1 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1457 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1470 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14E6 DUP2 PUSH2 0x14D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x14F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1501 DUP2 PUSH2 0x14DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151C JUMPI PUSH2 0x151B PUSH2 0x14D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1529 DUP5 DUP3 DUP6 ADD PUSH2 0x14F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x155B DUP3 PUSH2 0x1532 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x156B DUP2 PUSH2 0x1551 JUMP JUMPDEST DUP2 EQ PUSH2 0x1575 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1586 DUP2 PUSH2 0x1562 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15A1 JUMPI PUSH2 0x15A0 PUSH2 0x14D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15AE DUP5 DUP3 DUP6 ADD PUSH2 0x1578 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E9 DUP2 PUSH2 0x1551 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x15F8 DUP2 PUSH2 0x14D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1612 PUSH0 DUP6 ADD DUP3 PUSH2 0x15E0 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1625 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x15EF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1636 DUP4 DUP4 PUSH2 0x15FE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1658 DUP3 PUSH2 0x15B7 JUMP JUMPDEST PUSH2 0x1662 DUP2 DUP6 PUSH2 0x15C1 JUMP JUMPDEST SWAP4 POP PUSH2 0x166D DUP4 PUSH2 0x15D1 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x169D JUMPI DUP2 MLOAD PUSH2 0x1684 DUP9 DUP3 PUSH2 0x162B JUMP JUMPDEST SWAP8 POP PUSH2 0x168F DUP4 PUSH2 0x1642 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1670 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16C2 DUP2 DUP5 PUSH2 0x164E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16ED PUSH2 0x16E8 PUSH2 0x16E3 DUP5 PUSH2 0x1532 JUMP JUMPDEST PUSH2 0x16CA JUMP JUMPDEST PUSH2 0x1532 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16FE DUP3 PUSH2 0x16D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x170F DUP3 PUSH2 0x16F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x171F DUP2 PUSH2 0x1705 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1738 PUSH0 DUP4 ADD DUP5 PUSH2 0x1716 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1747 DUP2 PUSH2 0x14D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1760 PUSH0 DUP4 ADD DUP7 PUSH2 0x173E JUMP JUMPDEST PUSH2 0x176D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x173E JUMP JUMPDEST PUSH2 0x177A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x173E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x178B DUP2 PUSH2 0x1551 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17A4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1782 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17B4 DUP3 PUSH2 0x16F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C4 DUP2 PUSH2 0x17AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17DD PUSH0 DUP4 ADD DUP5 PUSH2 0x17BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17F6 PUSH0 DUP4 ADD DUP5 PUSH2 0x173E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F20746F6B656E73207374616B656400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1840 PUSH1 0x19 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x184B DUP3 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x186D DUP2 PUSH2 0x1834 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18A8 PUSH1 0x19 DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x18B3 DUP3 PUSH2 0x1874 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18D5 DUP2 PUSH2 0x189C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1913 DUP3 PUSH2 0x14D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x191E DUP4 PUSH2 0x14D4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1936 JUMPI PUSH2 0x1935 PUSH2 0x18DC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1973 DUP3 PUSH2 0x14D4 JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x1985 JUMPI PUSH2 0x1984 PUSH2 0x18DC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19A3 PUSH0 DUP4 ADD DUP7 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0x19B0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0x19BD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x173E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x596F752068617665206E6F207265776172647320746F20636C61696D00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19F9 PUSH1 0x1C DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1A04 DUP3 PUSH2 0x19C5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A26 DUP2 PUSH2 0x19ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A64 DUP3 PUSH2 0x14D4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1A96 JUMPI PUSH2 0x1A95 PUSH2 0x18DC JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AAF DUP2 PUSH2 0x1562 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ACA JUMPI PUSH2 0x1AC9 PUSH2 0x14D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AD7 DUP5 DUP3 DUP6 ADD PUSH2 0x1AA1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B14 PUSH1 0x1F DUP4 PUSH2 0x17FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1F DUP3 PUSH2 0x1AE0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B41 DUP2 PUSH2 0x1B08 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B52 DUP3 PUSH2 0x14D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B5D DUP4 PUSH2 0x14D4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1B75 JUMPI PUSH2 0x1B74 PUSH2 0x18DC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B85 DUP3 PUSH2 0x14D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B90 DUP4 PUSH2 0x14D4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1B9E DUP2 PUSH2 0x14D4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1BB5 JUMPI PUSH2 0x1BB4 PUSH2 0x18DC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BF3 DUP3 PUSH2 0x14D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BFE DUP4 PUSH2 0x14D4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C0E JUMPI PUSH2 0x1C0D PUSH2 0x1BBC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C2C PUSH0 DUP4 ADD DUP6 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0x1C39 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x173E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C54 DUP2 PUSH2 0x1C40 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C5E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C6F DUP2 PUSH2 0x1C4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C8A JUMPI PUSH2 0x1C89 PUSH2 0x14D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C97 DUP5 DUP3 DUP6 ADD PUSH2 0x1C61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CD1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CB6 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CE6 DUP3 PUSH2 0x1CA0 JUMP JUMPDEST PUSH2 0x1CF0 DUP2 DUP6 PUSH2 0x1CAA JUMP JUMPDEST SWAP4 POP PUSH2 0x1D00 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CB4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D17 DUP3 DUP5 PUSH2 0x1CDC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE SIGNEXTEND PUSH10 0x7AAC71E3188C0985D7F5 0xC3 0x1F DUP1 0x2E MSTORE PUSH8 0x5E8521935FEC264A COINBASE 0xD6 MULMOD EXP SIGNEXTEND PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "309:7229:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3478:1790;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5451:386;;;:::i;:::-;;6114:873;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;477:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1487:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1649:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1971:1254;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;434:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5897:209;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3478:1790;2261:21:0;:19;:21::i;:::-;3684:1:7::1;3649:7;:19;3657:10;3649:19;;;;;;;;;;;;;;;:32;;;:36;3627:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;3860:10;3833:37;;:13;:23;3847:8;3833:23;;;;;;;;;;;;;;;;;;;;;:37;;;3825:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;4012:15;4030:28;4047:10;4030:16;:28::i;:::-;4012:46;;4109:7;4069;:19;4077:10;4069:19;;;;;;;;;;;;;;;:36;;;:47;;;;;;;:::i;:::-;;;;;;;;4199:13;4232:9:::0;4227:353:::1;4251:7;:19;4259:10;4251:19;;;;;;;;;;;;;;;:32;;:39;;;;4247:1;:43;4227:353;;;4381:8;4334:7;:19;4342:10;4334:19;;;;;;;;;;;;;;;:32;;4367:1;4334:35;;;;;;;;:::i;:::-;;;;;;;;;;;;:43;;;:55;:151;;;;;4483:1;4429:56;;:7;:19;4437:10;4429:19;;;;;;;;;;;;;;;:32;;4462:1;4429:35;;;;;;;;:::i;:::-;;;;;;;;;;;;:42;;;;;;;;;;;;:56;;;;4334:151;4312:257;;;4528:1;4520:9;;4548:5;;4312:257;4292:3;;;;;;;4227:353;;;;4733:1;4676:7;:19;4684:10;4676:19;;;;;;;;;;;;;;;:32;;4709:5;4676:39;;;;;;;;:::i;:::-;;;;;;;;;;;;:46;;;:59;;;;;;;;;;;;;;;;;;4804:7;:19;4812:10;4804:19;;;;;;;;;;;;;;;:32;;;:34;;;;;;;;;:::i;:::-;;;;;;4999:1;4965:13;:23;4979:8;4965:23;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;5068:13;:26;;;5103:4;5110:10;5122:8;5068:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5245:15;5206:7;:19;5214:10;5206:19;;;;;;;;;;;;;;;:36;;:54;;;;3536:1732;;2303:20:0::0;:18;:20::i;:::-;3478:1790:7;:::o;5451:386::-;5495:15;5557:7;:19;5565:10;5557:19;;;;;;;;;;;;;;;:36;;;5513:28;5530:10;5513:16;:28::i;:::-;:80;;;;:::i;:::-;5495:98;;5622:1;5612:7;:11;5604:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;5706:15;5667:7;:19;5675:10;5667:19;;;;;;;;;;;;;;;:36;;:54;;;;5771:1;5732:7;:19;5740:10;5732:19;;;;;;;;;;;;;;;:36;;:40;;;;5783:46;5809:10;5821:7;5783:12;:25;;;;:46;;;;;:::i;:::-;5484:353;5451:386::o;6114:873::-;6175:20;6281:1;6251:7;:14;6259:5;6251:14;;;;;;;;;;;;;;;:27;;;:31;6247:733;;;6392:34;6447:7;:14;6455:5;6447:14;;;;;;;;;;;;;;;:27;;;6429:46;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6392:83;;6490:14;6530:9;6525:286;6549:7;:14;6557:5;6549:14;;;;;;;;;;;;;;;:27;;:34;;;;6545:1;:38;6525:286;;;6663:1;6613:53;;:7;:14;6621:5;6613:14;;;;;;;;;;;;;;;:27;;6641:1;6613:30;;;;;;;;:::i;:::-;;;;;;;;;;;;:37;;;;;;;;;;;;:53;;;6609:187;;6715:7;:14;6723:5;6715:14;;;;;;;;;;;;;;;:27;;6743:1;6715:30;;;;;;;;:::i;:::-;;;;;;;;;;;;6691:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;6705:6;6691:21;;;;;;;;:::i;:::-;;;;;;;:54;;;;6768:8;;;;;:::i;:::-;;;;6609:187;6585:3;;;;;;;6525:286;;;;6834:13;6827:20;;;;;;6247:733;6966:1;6948:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;6941:27;;6114:873;;;;:::o;477:38::-;;;:::o;1487:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1649:48::-;;;;;;;;;;;;;;;;;;;;;;:::o;1971:1254::-;2261:21:0;:19;:21::i;:::-;2167:1:7::1;2132:7;:19;2140:10;2132:19;;;;;;;;;;;;;;;:32;;;:36;2128:177;;;2185:15;2203:28;2220:10;2203:16;:28::i;:::-;2185:46;;2286:7;2246;:19;2254:10;2246:19;;;;;;;;;;;;;;;:36;;;:47;;;;;;;:::i;:::-;;;;;;;;2170:135;2128:177;2437:10;2402:45;;:13;:21;;;2424:8;2402:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;;2380:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;2582:13;:26;;;2609:10;2629:4;2636:8;2582:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2689:30;2722:33;;;;;;;;2734:10;2722:33;;;;;;2746:8;2722:33;;::::0;2689:66:::1;;2820:7;:19;2828:10;2820:19;;;;;;;;;;;;;;;:32;;2858:11;2820:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2939:7;:19;2947:10;2939:19;;;;;;;;;;;;;;;:32;;;:34;;;;;;;;;:::i;:::-;;;;;;3082:10;3056:13;:23;3070:8;3056:23;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;3202:15;3163:7;:19;3171:10;3163:19;;;;;;;;;;;;;;;:36;;:54;;;;2026:1199;2303:20:0::0;:18;:20::i;:::-;1971:1254:7;:::o;434:36::-;;;:::o;5897:209::-;5961:7;5981:15;6040:7;:16;6048:7;6040:16;;;;;;;;;;;;;;;:33;;;5999:25;6016:7;5999:16;:25::i;:::-;:74;;;;:::i;:::-;5981:92;;6091:7;6084:14;;;5897:209;;;:::o;2336:287:0:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;7235:300:7:-;7328:16;7522:4;7504:14;;7460:7;:16;7468:7;7460:16;;;;;;;;;;;;;;;:29;;;7406:7;:16;7414:7;7406:16;;;;;;;;;;;;;;;:33;;;7388:15;:51;;;;:::i;:::-;7387:102;;;;:::i;:::-;7371:147;;;;:::i;:::-;7370:156;;;;:::i;:::-;7362:165;;7235:300;;;:::o;2629:209:0:-;1716:1;2809:7;:22;;;;2629:209::o;1303:160:3:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;4059:629::-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:5:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;:::o;88:117:8:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:329::-;1591:6;1640:2;1628:9;1619:7;1615:23;1611:32;1608:119;;;1646:79;;:::i;:::-;1608:119;1766:1;1791:53;1836:7;1827:6;1816:9;1812:22;1791:53;:::i;:::-;1781:63;;1737:117;1532:329;;;;:::o;1867:142::-;1962:6;1996:5;1990:12;1980:22;;1867:142;;;:::o;2015:212::-;2142:11;2176:6;2171:3;2164:19;2216:4;2211:3;2207:14;2192:29;;2015:212;;;;:::o;2233:160::-;2328:4;2351:3;2343:11;;2381:4;2376:3;2372:14;2364:22;;2233:160;;;:::o;2399:108::-;2476:24;2494:5;2476:24;:::i;:::-;2471:3;2464:37;2399:108;;:::o;2513:::-;2590:24;2608:5;2590:24;:::i;:::-;2585:3;2578:37;2513:108;;:::o;2703:508::-;2846:4;2841:3;2837:14;2935:4;2928:5;2924:16;2918:23;2954:63;3011:4;3006:3;3002:14;2988:12;2954:63;:::i;:::-;2861:166;3112:4;3105:5;3101:16;3095:23;3131:63;3188:4;3183:3;3179:14;3165:12;3131:63;:::i;:::-;3037:167;2815:396;2703:508;;:::o;3217:291::-;3342:10;3363:102;3461:3;3453:6;3363:102;:::i;:::-;3497:4;3492:3;3488:14;3474:28;;3217:291;;;;:::o;3514:141::-;3612:4;3644;3639:3;3635:14;3627:22;;3514:141;;;:::o;3741:956::-;3916:3;3945:82;4021:5;3945:82;:::i;:::-;4043:114;4150:6;4145:3;4043:114;:::i;:::-;4036:121;;4181:84;4259:5;4181:84;:::i;:::-;4288:7;4319:1;4304:368;4329:6;4326:1;4323:13;4304:368;;;4405:6;4399:13;4432:119;4547:3;4532:13;4432:119;:::i;:::-;4425:126;;4574:88;4655:6;4574:88;:::i;:::-;4564:98;;4364:308;4351:1;4348;4344:9;4339:14;;4304:368;;;4308:14;4688:3;4681:10;;3921:776;;;3741:956;;;;:::o;4703:485::-;4902:4;4940:2;4929:9;4925:18;4917:26;;4989:9;4983:4;4979:20;4975:1;4964:9;4960:17;4953:47;5017:164;5176:4;5167:6;5017:164;:::i;:::-;5009:172;;4703:485;;;;:::o;5194:60::-;5222:3;5243:5;5236:12;;5194:60;;;:::o;5260:142::-;5310:9;5343:53;5361:34;5370:24;5388:5;5370:24;:::i;:::-;5361:34;:::i;:::-;5343:53;:::i;:::-;5330:66;;5260:142;;;:::o;5408:126::-;5458:9;5491:37;5522:5;5491:37;:::i;:::-;5478:50;;5408:126;;;:::o;5540:141::-;5605:9;5638:37;5669:5;5638:37;:::i;:::-;5625:50;;5540:141;;;:::o;5687:161::-;5789:52;5835:5;5789:52;:::i;:::-;5784:3;5777:65;5687:161;;:::o;5854:252::-;5962:4;6000:2;5989:9;5985:18;5977:26;;6013:86;6096:1;6085:9;6081:17;6072:6;6013:86;:::i;:::-;5854:252;;;;:::o;6112:118::-;6199:24;6217:5;6199:24;:::i;:::-;6194:3;6187:37;6112:118;;:::o;6236:442::-;6385:4;6423:2;6412:9;6408:18;6400:26;;6436:71;6504:1;6493:9;6489:17;6480:6;6436:71;:::i;:::-;6517:72;6585:2;6574:9;6570:18;6561:6;6517:72;:::i;:::-;6599;6667:2;6656:9;6652:18;6643:6;6599:72;:::i;:::-;6236:442;;;;;;:::o;6684:118::-;6771:24;6789:5;6771:24;:::i;:::-;6766:3;6759:37;6684:118;;:::o;6808:222::-;6901:4;6939:2;6928:9;6924:18;6916:26;;6952:71;7020:1;7009:9;7005:17;6996:6;6952:71;:::i;:::-;6808:222;;;;:::o;7036:140::-;7100:9;7133:37;7164:5;7133:37;:::i;:::-;7120:50;;7036:140;;;:::o;7182:159::-;7283:51;7328:5;7283:51;:::i;:::-;7278:3;7271:64;7182:159;;:::o;7347:250::-;7454:4;7492:2;7481:9;7477:18;7469:26;;7505:85;7587:1;7576:9;7572:17;7563:6;7505:85;:::i;:::-;7347:250;;;;:::o;7603:222::-;7696:4;7734:2;7723:9;7719:18;7711:26;;7747:71;7815:1;7804:9;7800:17;7791:6;7747:71;:::i;:::-;7603:222;;;;:::o;7831:169::-;7915:11;7949:6;7944:3;7937:19;7989:4;7984:3;7980:14;7965:29;;7831:169;;;;:::o;8006:175::-;8146:27;8142:1;8134:6;8130:14;8123:51;8006:175;:::o;8187:366::-;8329:3;8350:67;8414:2;8409:3;8350:67;:::i;:::-;8343:74;;8426:93;8515:3;8426:93;:::i;:::-;8544:2;8539:3;8535:12;8528:19;;8187:366;;;:::o;8559:419::-;8725:4;8763:2;8752:9;8748:18;8740:26;;8812:9;8806:4;8802:20;8798:1;8787:9;8783:17;8776:47;8840:131;8966:4;8840:131;:::i;:::-;8832:139;;8559:419;;;:::o;8984:175::-;9124:27;9120:1;9112:6;9108:14;9101:51;8984:175;:::o;9165:366::-;9307:3;9328:67;9392:2;9387:3;9328:67;:::i;:::-;9321:74;;9404:93;9493:3;9404:93;:::i;:::-;9522:2;9517:3;9513:12;9506:19;;9165:366;;;:::o;9537:419::-;9703:4;9741:2;9730:9;9726:18;9718:26;;9790:9;9784:4;9780:20;9776:1;9765:9;9761:17;9754:47;9818:131;9944:4;9818:131;:::i;:::-;9810:139;;9537:419;;;:::o;9962:180::-;10010:77;10007:1;10000:88;10107:4;10104:1;10097:15;10131:4;10128:1;10121:15;10148:191;10188:3;10207:20;10225:1;10207:20;:::i;:::-;10202:25;;10241:20;10259:1;10241:20;:::i;:::-;10236:25;;10284:1;10281;10277:9;10270:16;;10305:3;10302:1;10299:10;10296:36;;;10312:18;;:::i;:::-;10296:36;10148:191;;;;:::o;10345:180::-;10393:77;10390:1;10383:88;10490:4;10487:1;10480:15;10514:4;10511:1;10504:15;10531:171;10570:3;10593:24;10611:5;10593:24;:::i;:::-;10584:33;;10639:4;10632:5;10629:15;10626:41;;10647:18;;:::i;:::-;10626:41;10694:1;10687:5;10683:13;10676:20;;10531:171;;;:::o;10708:442::-;10857:4;10895:2;10884:9;10880:18;10872:26;;10908:71;10976:1;10965:9;10961:17;10952:6;10908:71;:::i;:::-;10989:72;11057:2;11046:9;11042:18;11033:6;10989:72;:::i;:::-;11071;11139:2;11128:9;11124:18;11115:6;11071:72;:::i;:::-;10708:442;;;;;;:::o;11156:178::-;11296:30;11292:1;11284:6;11280:14;11273:54;11156:178;:::o;11340:366::-;11482:3;11503:67;11567:2;11562:3;11503:67;:::i;:::-;11496:74;;11579:93;11668:3;11579:93;:::i;:::-;11697:2;11692:3;11688:12;11681:19;;11340:366;;;:::o;11712:419::-;11878:4;11916:2;11905:9;11901:18;11893:26;;11965:9;11959:4;11955:20;11951:1;11940:9;11936:17;11929:47;11993:131;12119:4;11993:131;:::i;:::-;11985:139;;11712:419;;;:::o;12137:180::-;12185:77;12182:1;12175:88;12282:4;12279:1;12272:15;12306:4;12303:1;12296:15;12323:233;12362:3;12385:24;12403:5;12385:24;:::i;:::-;12376:33;;12431:66;12424:5;12421:77;12418:103;;12501:18;;:::i;:::-;12418:103;12548:1;12541:5;12537:13;12530:20;;12323:233;;;:::o;12562:143::-;12619:5;12650:6;12644:13;12635:22;;12666:33;12693:5;12666:33;:::i;:::-;12562:143;;;;:::o;12711:351::-;12781:6;12830:2;12818:9;12809:7;12805:23;12801:32;12798:119;;;12836:79;;:::i;:::-;12798:119;12956:1;12981:64;13037:7;13028:6;13017:9;13013:22;12981:64;:::i;:::-;12971:74;;12927:128;12711:351;;;;:::o;13068:181::-;13208:33;13204:1;13196:6;13192:14;13185:57;13068:181;:::o;13255:366::-;13397:3;13418:67;13482:2;13477:3;13418:67;:::i;:::-;13411:74;;13494:93;13583:3;13494:93;:::i;:::-;13612:2;13607:3;13603:12;13596:19;;13255:366;;;:::o;13627:419::-;13793:4;13831:2;13820:9;13816:18;13808:26;;13880:9;13874:4;13870:20;13866:1;13855:9;13851:17;13844:47;13908:131;14034:4;13908:131;:::i;:::-;13900:139;;13627:419;;;:::o;14052:194::-;14092:4;14112:20;14130:1;14112:20;:::i;:::-;14107:25;;14146:20;14164:1;14146:20;:::i;:::-;14141:25;;14190:1;14187;14183:9;14175:17;;14214:1;14208:4;14205:11;14202:37;;;14219:18;;:::i;:::-;14202:37;14052:194;;;;:::o;14252:410::-;14292:7;14315:20;14333:1;14315:20;:::i;:::-;14310:25;;14349:20;14367:1;14349:20;:::i;:::-;14344:25;;14404:1;14401;14397:9;14426:30;14444:11;14426:30;:::i;:::-;14415:41;;14605:1;14596:7;14592:15;14589:1;14586:22;14566:1;14559:9;14539:83;14516:139;;14635:18;;:::i;:::-;14516:139;14300:362;14252:410;;;;:::o;14668:180::-;14716:77;14713:1;14706:88;14813:4;14810:1;14803:15;14837:4;14834:1;14827:15;14854:185;14894:1;14911:20;14929:1;14911:20;:::i;:::-;14906:25;;14945:20;14963:1;14945:20;:::i;:::-;14940:25;;14984:1;14974:35;;14989:18;;:::i;:::-;14974:35;15031:1;15028;15024:9;15019:14;;14854:185;;;;:::o;15045:332::-;15166:4;15204:2;15193:9;15189:18;15181:26;;15217:71;15285:1;15274:9;15270:17;15261:6;15217:71;:::i;:::-;15298:72;15366:2;15355:9;15351:18;15342:6;15298:72;:::i;:::-;15045:332;;;;;:::o;15383:90::-;15417:7;15460:5;15453:13;15446:21;15435:32;;15383:90;;;:::o;15479:116::-;15549:21;15564:5;15549:21;:::i;:::-;15542:5;15539:32;15529:60;;15585:1;15582;15575:12;15529:60;15479:116;:::o;15601:137::-;15655:5;15686:6;15680:13;15671:22;;15702:30;15726:5;15702:30;:::i;:::-;15601:137;;;;:::o;15744:345::-;15811:6;15860:2;15848:9;15839:7;15835:23;15831:32;15828:119;;;15866:79;;:::i;:::-;15828:119;15986:1;16011:61;16064:7;16055:6;16044:9;16040:22;16011:61;:::i;:::-;16001:71;;15957:125;15744:345;;;;:::o;16095:98::-;16146:6;16180:5;16174:12;16164:22;;16095:98;;;:::o;16199:147::-;16300:11;16337:3;16322:18;;16199:147;;;;:::o;16352:246::-;16433:1;16443:113;16457:6;16454:1;16451:13;16443:113;;;16542:1;16537:3;16533:11;16527:18;16523:1;16518:3;16514:11;16507:39;16479:2;16476:1;16472:10;16467:15;;16443:113;;;16590:1;16581:6;16576:3;16572:16;16565:27;16414:184;16352:246;;;:::o;16604:386::-;16708:3;16736:38;16768:5;16736:38;:::i;:::-;16790:88;16871:6;16866:3;16790:88;:::i;:::-;16783:95;;16887:65;16945:6;16940:3;16933:4;16926:5;16922:16;16887:65;:::i;:::-;16977:6;16972:3;16968:16;16961:23;;16712:278;16604:386;;;;:::o;16996:271::-;17126:3;17148:93;17237:3;17228:6;17148:93;:::i;:::-;17141:100;;17258:3;17251:10;;16996:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1502400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"availableRewards(address)": "infinite",
								"claimRewards()": "infinite",
								"getStakedTokens(address)": "infinite",
								"nftCollection()": "infinite",
								"rewardsToken()": "infinite",
								"stake(uint256)": "infinite",
								"stakerAddress(uint256)": "2849",
								"stakers(address)": "infinite",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"calculateRewards(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 309,
									"end": 7538,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 309,
									"end": 7538,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 309,
									"end": 7538,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1426,
									"end": 1431,
									"name": "PUSH",
									"source": 7,
									"value": "2710"
								},
								{
									"begin": 1393,
									"end": 1431,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1393,
									"end": 1431,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 611,
									"end": 757,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 611,
									"end": 757,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 611,
									"end": 757,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 611,
									"end": 757,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 611,
									"end": 757,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 611,
									"end": 757,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 611,
									"end": 757,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 611,
									"end": 757,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 696,
									"end": 710,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 680,
									"end": 710,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 680,
									"end": 710,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 680,
									"end": 710,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 680,
									"end": 710,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 680,
									"end": 710,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 680,
									"end": 710,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 680,
									"end": 710,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 680,
									"end": 710,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 680,
									"end": 710,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 680,
									"end": 710,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 736,
									"end": 749,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 721,
									"end": 749,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 721,
									"end": 749,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 721,
									"end": 749,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 721,
									"end": 749,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 721,
									"end": 749,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 721,
									"end": 749,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 721,
									"end": 749,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 721,
									"end": 749,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 721,
									"end": 749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 721,
									"end": 749,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 611,
									"end": 757,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 309,
									"end": 7538,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 309,
									"end": 7538,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "12"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 679,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 568,
									"end": 679,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 620,
									"end": 627,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 649,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 667,
									"end": 672,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 649,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 649,
									"end": 673,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 649,
									"end": 673,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 649,
									"end": 673,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 638,
									"end": 673,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 638,
									"end": 673,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 679,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 568,
									"end": 679,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 568,
									"end": 679,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 679,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 685,
									"end": 837,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 685,
									"end": 837,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 773,
									"end": 812,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 806,
									"end": 811,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 773,
									"end": 812,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 773,
									"end": 812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 773,
									"end": 812,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 773,
									"end": 812,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 763,
									"end": 813,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 753,
									"end": 831,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 753,
									"end": 831,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 827,
									"end": 828,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 824,
									"end": 825,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 817,
									"end": 829,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 753,
									"end": 831,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 753,
									"end": 831,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 685,
									"end": 837,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 685,
									"end": 837,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 915,
									"end": 920,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 946,
									"end": 952,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 940,
									"end": 953,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 931,
									"end": 953,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 931,
									"end": 953,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 1004,
									"end": 1009,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 962,
									"end": 1010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 843,
									"end": 1016,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1022,
									"end": 1132,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 1022,
									"end": 1132,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1073,
									"end": 1080,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1102,
									"end": 1126,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 1120,
									"end": 1125,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1102,
									"end": 1126,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 1102,
									"end": 1126,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1102,
									"end": 1126,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 1102,
									"end": 1126,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1091,
									"end": 1126,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1091,
									"end": 1126,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1022,
									"end": 1132,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1022,
									"end": 1132,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1022,
									"end": 1132,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1022,
									"end": 1132,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1288,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 1138,
									"end": 1288,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1225,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 1257,
									"end": 1262,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1225,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 1225,
									"end": 1263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1225,
									"end": 1263,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 1225,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1218,
									"end": 1223,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1215,
									"end": 1264,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1282,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1205,
									"end": 1282,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1278,
									"end": 1279,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1275,
									"end": 1276,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1268,
									"end": 1280,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1282,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1205,
									"end": 1282,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1288,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1288,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1294,
									"end": 1465,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 1294,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1365,
									"end": 1370,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1396,
									"end": 1402,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1390,
									"end": 1403,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1381,
									"end": 1403,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1381,
									"end": 1403,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1412,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1453,
									"end": 1458,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1412,
									"end": 1459,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 1412,
									"end": 1459,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1412,
									"end": 1459,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1412,
									"end": 1459,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1294,
									"end": 1465,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1294,
									"end": 1465,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1294,
									"end": 1465,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1294,
									"end": 1465,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1294,
									"end": 1465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 2036,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1471,
									"end": 2036,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1579,
									"end": 1585,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1587,
									"end": 1593,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1636,
									"end": 1638,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1624,
									"end": 1633,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1615,
									"end": 1622,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1611,
									"end": 1634,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1607,
									"end": 1639,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1604,
									"end": 1723,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1604,
									"end": 1723,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1604,
									"end": 1723,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1642,
									"end": 1721,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1642,
									"end": 1721,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 1642,
									"end": 1721,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1642,
									"end": 1721,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1642,
									"end": 1721,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1604,
									"end": 1723,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 1604,
									"end": 1723,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1762,
									"end": 1763,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1787,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1858,
									"end": 1865,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1849,
									"end": 1855,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1838,
									"end": 1847,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1834,
									"end": 1856,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 1787,
									"end": 1866,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1787,
									"end": 1866,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1787,
									"end": 1866,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1777,
									"end": 1866,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1777,
									"end": 1866,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1733,
									"end": 1876,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1915,
									"end": 1917,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1941,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 2011,
									"end": 2018,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2002,
									"end": 2008,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1991,
									"end": 2000,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1987,
									"end": 2009,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1941,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 1941,
									"end": 2019,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1941,
									"end": 2019,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1941,
									"end": 2019,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1931,
									"end": 2019,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1931,
									"end": 2019,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1886,
									"end": 2029,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 2036,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 2036,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 2036,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 2036,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 2036,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 2036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 309,
									"end": 7538,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 309,
									"end": 7538,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 309,
									"end": 7538,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 309,
									"end": 7538,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 309,
									"end": 7538,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 309,
									"end": 7538,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 309,
									"end": 7538,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 309,
									"end": 7538,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 309,
									"end": 7538,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 7538,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 309,
									"end": 7538,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 7538,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "868"
								},
								{
									"begin": 309,
									"end": 7538,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 7538,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "865"
								},
								{
									"begin": 309,
									"end": 7538,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 309,
									"end": 7538,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 7538,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220be0b697aac71e3188c0985d7f5c31f802e52675e8521935fec264a41d6090a0b64736f6c63430008160033",
									".code": [
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH",
											"source": 7,
											"value": "9168AE72"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH",
											"source": 7,
											"value": "9168AE72"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH",
											"source": 7,
											"value": "94067045"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH",
											"source": 7,
											"value": "A694FC3A"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH",
											"source": 7,
											"value": "D1AF0C7D"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH",
											"source": 7,
											"value": "F854A27F"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH",
											"source": 7,
											"value": "2E1A7D4D"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH",
											"source": 7,
											"value": "372500AB"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH",
											"source": 7,
											"value": "63C28DB1"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH",
											"source": 7,
											"value": "6588103B"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 309,
											"end": 7538,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 3478,
											"end": 5268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 3478,
											"end": 5268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 5451,
											"end": 5837,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5451,
											"end": 5837,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5451,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 5451,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 5451,
											"end": 5837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5451,
											"end": 5837,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 5451,
											"end": 5837,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5451,
											"end": 5837,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 6114,
											"end": 6987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6114,
											"end": 6987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6114,
											"end": 6987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 477,
											"end": 515,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 477,
											"end": 515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 477,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 477,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 477,
											"end": 515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 477,
											"end": 515,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 477,
											"end": 515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 477,
											"end": 515,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 477,
											"end": 515,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 477,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 477,
											"end": 515,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 477,
											"end": 515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 477,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 477,
											"end": 515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 477,
											"end": 515,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 477,
											"end": 515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 477,
											"end": 515,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 477,
											"end": 515,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 477,
											"end": 515,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 477,
											"end": 515,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 477,
											"end": 515,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 477,
											"end": 515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 477,
											"end": 515,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1487,
											"end": 1528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1487,
											"end": 1528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1487,
											"end": 1528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1649,
											"end": 1697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1649,
											"end": 1697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1649,
											"end": 1697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1971,
											"end": 3225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1971,
											"end": 3225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 434,
											"end": 470,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 434,
											"end": 470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 434,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 434,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 434,
											"end": 470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 434,
											"end": 470,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 434,
											"end": 470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 434,
											"end": 470,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 470,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 434,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 434,
											"end": 470,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 434,
											"end": 470,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 434,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 434,
											"end": 470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 434,
											"end": 470,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 434,
											"end": 470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 434,
											"end": 470,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 470,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 434,
											"end": 470,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 434,
											"end": 470,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 434,
											"end": 470,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 434,
											"end": 470,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 434,
											"end": 470,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 5897,
											"end": 6106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 5897,
											"end": 6106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 5897,
											"end": 6106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3684,
											"end": 3685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3649,
											"end": 3668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3667,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3649,
											"end": 3668,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3649,
											"end": 3668,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3668,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3668,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3668,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3668,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3668,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3668,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3668,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3668,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3681,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3681,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3685,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 3627,
											"end": 3738,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 3627,
											"end": 3738,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3860,
											"end": 3870,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3833,
											"end": 3870,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3855,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3833,
											"end": 3856,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3833,
											"end": 3870,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3870,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3825,
											"end": 3900,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 3825,
											"end": 3900,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4058,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4047,
											"end": 4057,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4046,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 4030,
											"end": 4058,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4058,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 4030,
											"end": 4058,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4058,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4058,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4109,
											"end": 4116,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4069,
											"end": 4088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4077,
											"end": 4087,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4069,
											"end": 4088,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4069,
											"end": 4088,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4088,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4069,
											"end": 4088,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4088,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4088,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4069,
											"end": 4088,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4088,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4069,
											"end": 4105,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4116,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4116,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4116,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4116,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 4069,
											"end": 4116,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4116,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4116,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4069,
											"end": 4116,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4116,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 4069,
											"end": 4116,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4116,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4116,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4116,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4116,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4116,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4116,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4116,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4580,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 4227,
											"end": 4580,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4251,
											"end": 4270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4259,
											"end": 4269,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4270,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4270,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4270,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4270,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4251,
											"end": 4270,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4270,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4270,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4270,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4251,
											"end": 4270,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4251,
											"end": 4270,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4283,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4251,
											"end": 4283,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4290,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4290,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4290,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4251,
											"end": 4290,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4247,
											"end": 4248,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4247,
											"end": 4290,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4580,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4580,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 4227,
											"end": 4580,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4381,
											"end": 4389,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4334,
											"end": 4353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4352,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4334,
											"end": 4353,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4334,
											"end": 4353,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4353,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4353,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4334,
											"end": 4353,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4353,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4353,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4353,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4334,
											"end": 4353,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4334,
											"end": 4353,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4334,
											"end": 4366,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4368,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4334,
											"end": 4369,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4369,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4334,
											"end": 4377,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4377,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4389,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4485,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4485,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4485,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 4334,
											"end": 4485,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4485,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4429,
											"end": 4485,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4429,
											"end": 4485,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4429,
											"end": 4448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4447,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4429,
											"end": 4448,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4429,
											"end": 4448,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4448,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4448,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4429,
											"end": 4448,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4448,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4448,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4448,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4429,
											"end": 4448,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4429,
											"end": 4448,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4461,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4429,
											"end": 4461,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4462,
											"end": 4463,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4429,
											"end": 4464,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4464,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4429,
											"end": 4471,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4429,
											"end": 4471,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4471,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4471,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4429,
											"end": 4471,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4471,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4471,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4429,
											"end": 4471,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4485,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4429,
											"end": 4485,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4485,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4429,
											"end": 4485,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4485,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 4334,
											"end": 4485,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4312,
											"end": 4569,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4312,
											"end": 4569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 4312,
											"end": 4569,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4528,
											"end": 4529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4529,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4529,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4548,
											"end": 4553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 4548,
											"end": 4553,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4312,
											"end": 4569,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 4312,
											"end": 4569,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4295,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4295,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4292,
											"end": 4295,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4295,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4295,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4292,
											"end": 4295,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4580,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 4227,
											"end": 4580,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4580,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 4227,
											"end": 4580,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4580,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4733,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4676,
											"end": 4683,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4676,
											"end": 4695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4684,
											"end": 4694,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4676,
											"end": 4695,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4676,
											"end": 4695,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4695,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4695,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4676,
											"end": 4695,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4695,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4695,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4695,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4676,
											"end": 4695,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4676,
											"end": 4695,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4676,
											"end": 4708,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4709,
											"end": 4714,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 4676,
											"end": 4715,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4715,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4676,
											"end": 4722,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4676,
											"end": 4735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4676,
											"end": 4735,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4735,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4735,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4735,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4676,
											"end": 4735,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4735,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4735,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4735,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4676,
											"end": 4735,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4735,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4735,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4735,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4735,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4804,
											"end": 4823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4812,
											"end": 4822,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4804,
											"end": 4823,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4804,
											"end": 4823,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4823,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4823,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4804,
											"end": 4823,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4823,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4823,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4823,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4804,
											"end": 4823,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4804,
											"end": 4823,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4804,
											"end": 4836,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4804,
											"end": 4838,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4838,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4838,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4838,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4838,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4804,
											"end": 4838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 4804,
											"end": 4838,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4804,
											"end": 4838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4838,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4838,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4838,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4838,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4999,
											"end": 5000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4965,
											"end": 4978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4965,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4979,
											"end": 4987,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4988,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4965,
											"end": 4988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4988,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4988,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4965,
											"end": 4988,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4965,
											"end": 4988,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4965,
											"end": 5001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4965,
											"end": 5001,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5001,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5001,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5001,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4965,
											"end": 5001,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5001,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5001,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5001,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4965,
											"end": 5001,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5001,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5001,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5001,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 5001,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5081,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "868"
										},
										{
											"begin": 5068,
											"end": 5094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5068,
											"end": 5094,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 5103,
											"end": 5107,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5120,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5122,
											"end": 5130,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5068,
											"end": 5131,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5068,
											"end": 5131,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5068,
											"end": 5131,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5131,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5245,
											"end": 5260,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5206,
											"end": 5225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5214,
											"end": 5224,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5206,
											"end": 5225,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5206,
											"end": 5225,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5225,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5225,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5206,
											"end": 5225,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5225,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5225,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5225,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5206,
											"end": 5225,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5225,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5206,
											"end": 5242,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5260,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5260,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5260,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5206,
											"end": 5260,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3536,
											"end": 5268,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3536,
											"end": 5268,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3478,
											"end": 5268,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 5268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5451,
											"end": 5837,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 5451,
											"end": 5837,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5557,
											"end": 5564,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5557,
											"end": 5576,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5565,
											"end": 5575,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5557,
											"end": 5576,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5557,
											"end": 5576,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5557,
											"end": 5576,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5557,
											"end": 5576,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5557,
											"end": 5576,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5557,
											"end": 5576,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5557,
											"end": 5576,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5557,
											"end": 5576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5557,
											"end": 5576,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5557,
											"end": 5576,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5557,
											"end": 5576,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5557,
											"end": 5576,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5557,
											"end": 5576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5557,
											"end": 5576,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5557,
											"end": 5576,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5557,
											"end": 5593,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5557,
											"end": 5593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5557,
											"end": 5593,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 5530,
											"end": 5540,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 5513,
											"end": 5541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5541,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 5513,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 5513,
											"end": 5593,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5593,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5513,
											"end": 5593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5593,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 5513,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5593,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5622,
											"end": 5623,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5612,
											"end": 5619,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5612,
											"end": 5623,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 5604,
											"end": 5656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 5604,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5706,
											"end": 5721,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5674,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5675,
											"end": 5685,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5703,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5667,
											"end": 5703,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5721,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5721,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5721,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5667,
											"end": 5721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5771,
											"end": 5772,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5732,
											"end": 5739,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5732,
											"end": 5751,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5740,
											"end": 5750,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5751,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5732,
											"end": 5751,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5751,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5732,
											"end": 5751,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5751,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5751,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5751,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5732,
											"end": 5751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5751,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5751,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5751,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5751,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5732,
											"end": 5751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5751,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5732,
											"end": 5751,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5768,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5732,
											"end": 5768,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5772,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5772,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5772,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5783,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 5809,
											"end": 5819,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5821,
											"end": 5828,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5783,
											"end": 5795,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "865"
										},
										{
											"begin": 5783,
											"end": 5808,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5783,
											"end": 5808,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5783,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 5783,
											"end": 5808,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5783,
											"end": 5829,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5783,
											"end": 5829,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5783,
											"end": 5829,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5783,
											"end": 5829,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5783,
											"end": 5829,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5783,
											"end": 5829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5783,
											"end": 5829,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 5783,
											"end": 5829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5484,
											"end": 5837,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5451,
											"end": 5837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6175,
											"end": 6195,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6281,
											"end": 6282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6251,
											"end": 6258,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6251,
											"end": 6265,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6259,
											"end": 6264,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6251,
											"end": 6265,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6251,
											"end": 6265,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6251,
											"end": 6265,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6251,
											"end": 6265,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6251,
											"end": 6265,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6251,
											"end": 6265,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6251,
											"end": 6265,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6251,
											"end": 6265,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6251,
											"end": 6265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6251,
											"end": 6265,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6251,
											"end": 6265,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6251,
											"end": 6265,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6251,
											"end": 6265,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6251,
											"end": 6265,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6251,
											"end": 6265,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6251,
											"end": 6278,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6251,
											"end": 6278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6251,
											"end": 6278,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6251,
											"end": 6282,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6247,
											"end": 6980,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6247,
											"end": 6980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 6247,
											"end": 6980,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6392,
											"end": 6426,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6447,
											"end": 6454,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6447,
											"end": 6461,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6455,
											"end": 6460,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6461,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6447,
											"end": 6461,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6461,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6447,
											"end": 6461,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6461,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6461,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6461,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6447,
											"end": 6461,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6461,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6461,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6461,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6461,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6447,
											"end": 6461,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6461,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6447,
											"end": 6461,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6474,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6447,
											"end": 6474,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6474,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 6429,
											"end": 6475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 6429,
											"end": 6475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6429,
											"end": 6475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6392,
											"end": 6475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6392,
											"end": 6475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6490,
											"end": 6504,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6530,
											"end": 6539,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6525,
											"end": 6811,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 6525,
											"end": 6811,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6556,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6557,
											"end": 6562,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6576,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6549,
											"end": 6576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6583,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6583,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6545,
											"end": 6546,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6545,
											"end": 6583,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6525,
											"end": 6811,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6525,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 6525,
											"end": 6811,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6663,
											"end": 6664,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6613,
											"end": 6666,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6613,
											"end": 6666,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6620,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6621,
											"end": 6626,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6640,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6613,
											"end": 6640,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6641,
											"end": 6642,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 6613,
											"end": 6643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6650,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6613,
											"end": 6650,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6650,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6613,
											"end": 6650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6650,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6650,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6613,
											"end": 6650,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6650,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6650,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6613,
											"end": 6650,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6666,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6613,
											"end": 6666,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6613,
											"end": 6666,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6609,
											"end": 6796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 6609,
											"end": 6796,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6722,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6715,
											"end": 6729,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6723,
											"end": 6728,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6729,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6715,
											"end": 6729,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6729,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6715,
											"end": 6729,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6729,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6729,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6729,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6715,
											"end": 6729,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6729,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6729,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6729,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6715,
											"end": 6729,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6729,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6715,
											"end": 6729,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6742,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6715,
											"end": 6742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6743,
											"end": 6744,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 6715,
											"end": 6745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6704,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6705,
											"end": 6711,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6712,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6712,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6712,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6712,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 6691,
											"end": 6712,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 6691,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 6691,
											"end": 6712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6712,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 6691,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6712,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 6691,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6712,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6691,
											"end": 6712,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6712,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6691,
											"end": 6712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6712,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6768,
											"end": 6776,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6768,
											"end": 6776,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6768,
											"end": 6776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 6768,
											"end": 6776,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6768,
											"end": 6776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 6768,
											"end": 6776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6768,
											"end": 6776,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 6768,
											"end": 6776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6768,
											"end": 6776,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6768,
											"end": 6776,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6768,
											"end": 6776,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6609,
											"end": 6796,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 6609,
											"end": 6796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6585,
											"end": 6588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6585,
											"end": 6588,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6585,
											"end": 6588,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6585,
											"end": 6588,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6585,
											"end": 6588,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6585,
											"end": 6588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6585,
											"end": 6588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6525,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 6525,
											"end": 6811,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6525,
											"end": 6811,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 6525,
											"end": 6811,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6525,
											"end": 6811,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6834,
											"end": 6847,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6827,
											"end": 6847,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6827,
											"end": 6847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6827,
											"end": 6847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6827,
											"end": 6847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6827,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 6827,
											"end": 6847,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6247,
											"end": 6980,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 6247,
											"end": 6980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 6967,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 6948,
											"end": 6968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 6948,
											"end": 6968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6941,
											"end": 6968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6941,
											"end": 6968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6114,
											"end": 6987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 477,
											"end": 515,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 477,
											"end": 515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 477,
											"end": 515,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "868"
										},
										{
											"begin": 477,
											"end": 515,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 477,
											"end": 515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2167,
											"end": 2168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2132,
											"end": 2139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2132,
											"end": 2151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2140,
											"end": 2150,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2132,
											"end": 2151,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2132,
											"end": 2151,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2151,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2151,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2132,
											"end": 2151,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2151,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2151,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2151,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2132,
											"end": 2151,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2132,
											"end": 2151,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2132,
											"end": 2164,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2164,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2132,
											"end": 2168,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2128,
											"end": 2305,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2128,
											"end": 2305,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2128,
											"end": 2305,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2220,
											"end": 2230,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2219,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 2203,
											"end": 2231,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2231,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2203,
											"end": 2231,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2231,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2185,
											"end": 2231,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2293,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2246,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2264,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2246,
											"end": 2265,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2246,
											"end": 2265,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2265,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2265,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2265,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2265,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2265,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2265,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2265,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2265,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2246,
											"end": 2282,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2293,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2293,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2293,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2246,
											"end": 2293,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2293,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2246,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2246,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2293,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2293,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2293,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2293,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2170,
											"end": 2305,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2128,
											"end": 2305,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2128,
											"end": 2305,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2447,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2402,
											"end": 2447,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2415,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "868"
										},
										{
											"begin": 2402,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2402,
											"end": 2423,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6352211E"
										},
										{
											"begin": 2424,
											"end": 2432,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2402,
											"end": 2433,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2433,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2402,
											"end": 2433,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2402,
											"end": 2433,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2402,
											"end": 2447,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2447,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2380,
											"end": 2500,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2380,
											"end": 2500,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2595,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "868"
										},
										{
											"begin": 2582,
											"end": 2608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2582,
											"end": 2608,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 2609,
											"end": 2619,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2633,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2636,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 2582,
											"end": 2645,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2582,
											"end": 2645,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2722,
											"end": 2755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2722,
											"end": 2755,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2755,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2722,
											"end": 2755,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2722,
											"end": 2755,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2755,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2734,
											"end": 2744,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2722,
											"end": 2755,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2755,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2755,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2722,
											"end": 2755,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 2754,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2755,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2755,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2755,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2755,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2820,
											"end": 2839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2828,
											"end": 2838,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2820,
											"end": 2839,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2820,
											"end": 2839,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2839,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2839,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2839,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2839,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2839,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2839,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2839,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2839,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2820,
											"end": 2852,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2858,
											"end": 2869,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2820,
											"end": 2870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2939,
											"end": 2958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 2957,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2939,
											"end": 2958,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2939,
											"end": 2958,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2958,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2958,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2939,
											"end": 2958,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2958,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2958,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2958,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2939,
											"end": 2958,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2958,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2971,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2973,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2973,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2973,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2973,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2973,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2939,
											"end": 2973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2939,
											"end": 2973,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2939,
											"end": 2973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2973,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2973,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2973,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2973,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3082,
											"end": 3092,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3056,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3078,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3079,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3079,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3056,
											"end": 3079,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3079,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3079,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3079,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3056,
											"end": 3079,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3079,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3056,
											"end": 3092,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3092,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3056,
											"end": 3092,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3092,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3092,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3092,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3092,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3056,
											"end": 3092,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3092,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3092,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3092,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3092,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3092,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3217,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3163,
											"end": 3170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3163,
											"end": 3182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3181,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3163,
											"end": 3182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3163,
											"end": 3182,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3163,
											"end": 3182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3163,
											"end": 3182,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3163,
											"end": 3182,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3163,
											"end": 3182,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3163,
											"end": 3182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3163,
											"end": 3182,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3163,
											"end": 3182,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3163,
											"end": 3182,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3163,
											"end": 3182,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3163,
											"end": 3182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3163,
											"end": 3182,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3163,
											"end": 3182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3182,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3163,
											"end": 3199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3163,
											"end": 3199,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3163,
											"end": 3217,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3163,
											"end": 3217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3163,
											"end": 3217,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3163,
											"end": 3217,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2026,
											"end": 3225,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1971,
											"end": 3225,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1971,
											"end": 3225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 434,
											"end": 470,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 434,
											"end": 470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 434,
											"end": 470,
											"name": "PUSHIMMUTABLE",
											"source": 7,
											"value": "865"
										},
										{
											"begin": 434,
											"end": 470,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 434,
											"end": 470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5961,
											"end": 5968,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5981,
											"end": 5996,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6040,
											"end": 6047,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6040,
											"end": 6056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6048,
											"end": 6055,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6040,
											"end": 6056,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6040,
											"end": 6056,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6040,
											"end": 6056,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6040,
											"end": 6056,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6040,
											"end": 6056,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6040,
											"end": 6056,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6040,
											"end": 6056,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6040,
											"end": 6056,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6040,
											"end": 6056,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6040,
											"end": 6056,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6040,
											"end": 6056,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6040,
											"end": 6056,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6040,
											"end": 6056,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6040,
											"end": 6056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6040,
											"end": 6056,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6040,
											"end": 6073,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6040,
											"end": 6073,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6040,
											"end": 6073,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5999,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 6016,
											"end": 6023,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5999,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 5999,
											"end": 6024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5999,
											"end": 6024,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 5999,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5999,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 5999,
											"end": 6073,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5999,
											"end": 6073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5999,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5999,
											"end": 6073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5999,
											"end": 6073,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 5999,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5981,
											"end": 6073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5981,
											"end": 6073,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6091,
											"end": 6098,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6098,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6084,
											"end": 6098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5897,
											"end": 6106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7235,
											"end": 7535,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 7235,
											"end": 7535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7328,
											"end": 7344,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7522,
											"end": 7526,
											"name": "PUSH",
											"source": 7,
											"value": "E10"
										},
										{
											"begin": 7504,
											"end": 7518,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7504,
											"end": 7518,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7467,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7460,
											"end": 7476,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7468,
											"end": 7475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7476,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7460,
											"end": 7476,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7476,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7460,
											"end": 7476,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7476,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7460,
											"end": 7476,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7476,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7476,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7476,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7476,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7460,
											"end": 7476,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7476,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7460,
											"end": 7476,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7489,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7460,
											"end": 7489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7460,
											"end": 7489,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7413,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7406,
											"end": 7422,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7414,
											"end": 7421,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7422,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7406,
											"end": 7422,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7422,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7406,
											"end": 7422,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7422,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7422,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7422,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7406,
											"end": 7422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7422,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7422,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7422,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7406,
											"end": 7422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7422,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7406,
											"end": 7422,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7439,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7406,
											"end": 7439,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7439,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7388,
											"end": 7403,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 7388,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 7388,
											"end": 7439,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7388,
											"end": 7439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7388,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 7388,
											"end": 7439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7388,
											"end": 7439,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 7388,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7387,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 7387,
											"end": 7489,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7387,
											"end": 7489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7387,
											"end": 7489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 7387,
											"end": 7489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7387,
											"end": 7489,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 7387,
											"end": 7489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7371,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 7371,
											"end": 7518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7371,
											"end": 7518,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7371,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 7371,
											"end": 7518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7371,
											"end": 7518,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 7371,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7370,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 7370,
											"end": 7526,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7370,
											"end": 7526,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7370,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 7370,
											"end": 7526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7370,
											"end": 7526,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 7370,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7362,
											"end": 7527,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7362,
											"end": 7527,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7235,
											"end": 7535,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7235,
											"end": 7535,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7235,
											"end": 7535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7235,
											"end": 7535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "105"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 1350,
											"end": 1355,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 1332,
											"end": 1356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1325,
											"end": 1330,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1322,
											"end": 1357,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1361,
											"end": 1373,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1458,
											"end": 1478,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 1487,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1591,
											"end": 1597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1642,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1638,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1643,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 1646,
											"end": 1725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1816,
											"end": 1825,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 1791,
											"end": 1844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1737,
											"end": 1854,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1867,
											"end": 2009,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 1867,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1996,
											"end": 2001,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 2002,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1867,
											"end": 2009,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1867,
											"end": 2009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1867,
											"end": 2009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1867,
											"end": 2009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2227,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 2015,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2142,
											"end": 2153,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2182,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2171,
											"end": 2174,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2164,
											"end": 2183,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2216,
											"end": 2220,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2211,
											"end": 2214,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2207,
											"end": 2221,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2192,
											"end": 2221,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2192,
											"end": 2221,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2227,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2227,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2227,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2227,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2393,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 2233,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2328,
											"end": 2332,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2351,
											"end": 2354,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2354,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2354,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2381,
											"end": 2385,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2376,
											"end": 2379,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2372,
											"end": 2386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2364,
											"end": 2386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2364,
											"end": 2386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2393,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2393,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2233,
											"end": 2393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2399,
											"end": 2507,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 2399,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 2494,
											"end": 2499,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 2476,
											"end": 2500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2476,
											"end": 2500,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 2476,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2471,
											"end": 2474,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2464,
											"end": 2501,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2399,
											"end": 2507,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2399,
											"end": 2507,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2399,
											"end": 2507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2621,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 2513,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2608,
											"end": 2613,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 2590,
											"end": 2614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2590,
											"end": 2614,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2590,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2585,
											"end": 2588,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2578,
											"end": 2615,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2621,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2621,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2703,
											"end": 3211,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 2703,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2846,
											"end": 2850,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2841,
											"end": 2844,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2837,
											"end": 2851,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2939,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2928,
											"end": 2933,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2924,
											"end": 2940,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 2941,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 3017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 3011,
											"end": 3015,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3006,
											"end": 3009,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3016,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2988,
											"end": 3000,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 3017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 2954,
											"end": 3017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2954,
											"end": 3017,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2954,
											"end": 3017,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 3027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3112,
											"end": 3116,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3105,
											"end": 3110,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3101,
											"end": 3117,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3095,
											"end": 3118,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 3188,
											"end": 3192,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3183,
											"end": 3186,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3179,
											"end": 3193,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3177,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 3131,
											"end": 3194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3131,
											"end": 3194,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 3131,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2815,
											"end": 3211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2703,
											"end": 3211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2703,
											"end": 3211,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2703,
											"end": 3211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3217,
											"end": 3508,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 3217,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3352,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3363,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 3461,
											"end": 3464,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3453,
											"end": 3459,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3363,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 3363,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3363,
											"end": 3465,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 3363,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3497,
											"end": 3501,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3492,
											"end": 3495,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3502,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3474,
											"end": 3502,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3474,
											"end": 3502,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3217,
											"end": 3508,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3217,
											"end": 3508,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3217,
											"end": 3508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3217,
											"end": 3508,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3217,
											"end": 3508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3655,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3514,
											"end": 3655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3612,
											"end": 3616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3644,
											"end": 3648,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3639,
											"end": 3642,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3635,
											"end": 3649,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3627,
											"end": 3649,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3627,
											"end": 3649,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3655,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3655,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3741,
											"end": 4697,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 3741,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3916,
											"end": 3919,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 4021,
											"end": 4026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3945,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 3945,
											"end": 4027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3945,
											"end": 4027,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 3945,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4043,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 4150,
											"end": 4156,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4145,
											"end": 4148,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4043,
											"end": 4157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 4043,
											"end": 4157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4043,
											"end": 4157,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 4043,
											"end": 4157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4036,
											"end": 4157,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4036,
											"end": 4157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4181,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 4259,
											"end": 4264,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4181,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 4181,
											"end": 4265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4181,
											"end": 4265,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 4181,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4295,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4320,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4304,
											"end": 4672,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 4304,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4329,
											"end": 4335,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4326,
											"end": 4327,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4323,
											"end": 4336,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4304,
											"end": 4672,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4304,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 4304,
											"end": 4672,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4405,
											"end": 4411,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4399,
											"end": 4412,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4432,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 4547,
											"end": 4550,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4532,
											"end": 4545,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4432,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 4432,
											"end": 4551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4432,
											"end": 4551,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 4432,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4425,
											"end": 4551,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 4425,
											"end": 4551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4574,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 4655,
											"end": 4661,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4574,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 4574,
											"end": 4662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4574,
											"end": 4662,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 4574,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4564,
											"end": 4662,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4564,
											"end": 4662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4364,
											"end": 4672,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4352,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4339,
											"end": 4353,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4339,
											"end": 4353,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4304,
											"end": 4672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 4304,
											"end": 4672,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4304,
											"end": 4672,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 4304,
											"end": 4672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4308,
											"end": 4322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4691,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4681,
											"end": 4691,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4681,
											"end": 4691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3921,
											"end": 4697,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3921,
											"end": 4697,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3921,
											"end": 4697,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3741,
											"end": 4697,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3741,
											"end": 4697,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3741,
											"end": 4697,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3741,
											"end": 4697,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3741,
											"end": 4697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4703,
											"end": 5188,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4703,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4902,
											"end": 4906,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4940,
											"end": 4942,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4929,
											"end": 4938,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4925,
											"end": 4943,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4917,
											"end": 4943,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4917,
											"end": 4943,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4989,
											"end": 4998,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4979,
											"end": 4999,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4975,
											"end": 4976,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4964,
											"end": 4973,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4960,
											"end": 4977,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4953,
											"end": 5000,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5017,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 5176,
											"end": 5180,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5173,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5017,
											"end": 5181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 5017,
											"end": 5181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5017,
											"end": 5181,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 5017,
											"end": 5181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5009,
											"end": 5181,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5009,
											"end": 5181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4703,
											"end": 5188,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4703,
											"end": 5188,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4703,
											"end": 5188,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4703,
											"end": 5188,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4703,
											"end": 5188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5194,
											"end": 5254,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 5194,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5222,
											"end": 5225,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5243,
											"end": 5248,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5236,
											"end": 5248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5236,
											"end": 5248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5194,
											"end": 5254,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5194,
											"end": 5254,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5194,
											"end": 5254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5194,
											"end": 5254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5260,
											"end": 5402,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 5260,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5310,
											"end": 5319,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5343,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 5361,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 5370,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 5388,
											"end": 5393,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5370,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 5370,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5370,
											"end": 5394,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 5370,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5361,
											"end": 5395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 5361,
											"end": 5395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5361,
											"end": 5395,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 5361,
											"end": 5395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5343,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 5343,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5343,
											"end": 5396,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 5343,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5396,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5260,
											"end": 5402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5260,
											"end": 5402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5260,
											"end": 5402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5260,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5534,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 5408,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5458,
											"end": 5467,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 5522,
											"end": 5527,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 5491,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5478,
											"end": 5528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5408,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5681,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 5540,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5605,
											"end": 5614,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5638,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 5669,
											"end": 5674,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5638,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 5638,
											"end": 5675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5638,
											"end": 5675,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 5638,
											"end": 5675,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5675,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5625,
											"end": 5675,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5681,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5681,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5687,
											"end": 5848,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 5687,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5789,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 5835,
											"end": 5840,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5789,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 5789,
											"end": 5841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5789,
											"end": 5841,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 5789,
											"end": 5841,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5784,
											"end": 5787,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5842,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5687,
											"end": 5848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5687,
											"end": 5848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5687,
											"end": 5848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5854,
											"end": 6106,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 5854,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5962,
											"end": 5966,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6000,
											"end": 6002,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5989,
											"end": 5998,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5985,
											"end": 6003,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5977,
											"end": 6003,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5977,
											"end": 6003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6099,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 6096,
											"end": 6097,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6085,
											"end": 6094,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6081,
											"end": 6098,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6072,
											"end": 6078,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6099,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 6013,
											"end": 6099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6099,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 6013,
											"end": 6099,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5854,
											"end": 6106,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5854,
											"end": 6106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5854,
											"end": 6106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5854,
											"end": 6106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5854,
											"end": 6106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6112,
											"end": 6230,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 6112,
											"end": 6230,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 6217,
											"end": 6222,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 6199,
											"end": 6223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6223,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 6199,
											"end": 6223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6194,
											"end": 6197,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6187,
											"end": 6224,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6112,
											"end": 6230,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6112,
											"end": 6230,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6112,
											"end": 6230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6236,
											"end": 6678,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 6236,
											"end": 6678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6389,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6425,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6412,
											"end": 6421,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6400,
											"end": 6426,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6400,
											"end": 6426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6436,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 6504,
											"end": 6505,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6493,
											"end": 6502,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6489,
											"end": 6506,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6480,
											"end": 6486,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6436,
											"end": 6507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 6436,
											"end": 6507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6436,
											"end": 6507,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 6436,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6517,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6574,
											"end": 6583,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6570,
											"end": 6588,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6561,
											"end": 6567,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6517,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 6517,
											"end": 6589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6517,
											"end": 6589,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 6517,
											"end": 6589,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 6667,
											"end": 6669,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6656,
											"end": 6665,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6652,
											"end": 6670,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6643,
											"end": 6649,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 6599,
											"end": 6671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6671,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 6599,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6236,
											"end": 6678,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 6236,
											"end": 6678,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6236,
											"end": 6678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6236,
											"end": 6678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6236,
											"end": 6678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6236,
											"end": 6678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6236,
											"end": 6678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6802,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 6684,
											"end": 6802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 6789,
											"end": 6794,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 6771,
											"end": 6795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6771,
											"end": 6795,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 6771,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6766,
											"end": 6769,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6759,
											"end": 6796,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6808,
											"end": 7030,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 6808,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6901,
											"end": 6905,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6939,
											"end": 6941,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6928,
											"end": 6937,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6916,
											"end": 6942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6952,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 7020,
											"end": 7021,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7009,
											"end": 7018,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7005,
											"end": 7022,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6996,
											"end": 7002,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6952,
											"end": 7023,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 6952,
											"end": 7023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6952,
											"end": 7023,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 6952,
											"end": 7023,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6808,
											"end": 7030,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6808,
											"end": 7030,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6808,
											"end": 7030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6808,
											"end": 7030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6808,
											"end": 7030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7036,
											"end": 7176,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 7036,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7109,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7133,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 7164,
											"end": 7169,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7133,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 7133,
											"end": 7170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7133,
											"end": 7170,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 7133,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7120,
											"end": 7170,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7120,
											"end": 7170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7036,
											"end": 7176,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7036,
											"end": 7176,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7036,
											"end": 7176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7036,
											"end": 7176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7182,
											"end": 7341,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 7182,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7283,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 7328,
											"end": 7333,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7283,
											"end": 7334,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 7283,
											"end": 7334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7283,
											"end": 7334,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 7283,
											"end": 7334,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7278,
											"end": 7281,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7271,
											"end": 7335,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7182,
											"end": 7341,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7182,
											"end": 7341,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7182,
											"end": 7341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7597,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 7347,
											"end": 7597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7454,
											"end": 7458,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7492,
											"end": 7494,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7481,
											"end": 7490,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7469,
											"end": 7495,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7469,
											"end": 7495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7505,
											"end": 7590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 7587,
											"end": 7588,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7576,
											"end": 7585,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7572,
											"end": 7589,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7563,
											"end": 7569,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7505,
											"end": 7590,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 7505,
											"end": 7590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7505,
											"end": 7590,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 7505,
											"end": 7590,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7597,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7597,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7347,
											"end": 7597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7603,
											"end": 7825,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 7603,
											"end": 7825,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7696,
											"end": 7700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7734,
											"end": 7736,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 7732,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7719,
											"end": 7737,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7737,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7711,
											"end": 7737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7747,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 7815,
											"end": 7816,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7804,
											"end": 7813,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7817,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7791,
											"end": 7797,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7747,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 7747,
											"end": 7818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7747,
											"end": 7818,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 7747,
											"end": 7818,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7603,
											"end": 7825,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7603,
											"end": 7825,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7603,
											"end": 7825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7603,
											"end": 7825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7603,
											"end": 7825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7831,
											"end": 8000,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 7831,
											"end": 8000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7915,
											"end": 7926,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7949,
											"end": 7955,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7944,
											"end": 7947,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7937,
											"end": 7956,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7989,
											"end": 7993,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7984,
											"end": 7987,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7980,
											"end": 7994,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7965,
											"end": 7994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7965,
											"end": 7994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7831,
											"end": 8000,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7831,
											"end": 8000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7831,
											"end": 8000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7831,
											"end": 8000,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7831,
											"end": 8000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8181,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 8006,
											"end": 8181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8146,
											"end": 8173,
											"name": "PUSH",
											"source": 8,
											"value": "596F752068617665206E6F20746F6B656E73207374616B656400000000000000"
										},
										{
											"begin": 8142,
											"end": 8143,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8134,
											"end": 8140,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8130,
											"end": 8144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8123,
											"end": 8174,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8006,
											"end": 8181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8187,
											"end": 8553,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 8187,
											"end": 8553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8329,
											"end": 8332,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8350,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 8414,
											"end": 8416,
											"name": "PUSH",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 8409,
											"end": 8412,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 8350,
											"end": 8417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8350,
											"end": 8417,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 8350,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8343,
											"end": 8417,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8343,
											"end": 8417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8426,
											"end": 8519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 8515,
											"end": 8518,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8426,
											"end": 8519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 8426,
											"end": 8519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8426,
											"end": 8519,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 8426,
											"end": 8519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8544,
											"end": 8546,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8539,
											"end": 8542,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8535,
											"end": 8547,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8528,
											"end": 8547,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8528,
											"end": 8547,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8187,
											"end": 8553,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8187,
											"end": 8553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8187,
											"end": 8553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8187,
											"end": 8553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8559,
											"end": 8978,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 8559,
											"end": 8978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8725,
											"end": 8729,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8763,
											"end": 8765,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8752,
											"end": 8761,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8748,
											"end": 8766,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8740,
											"end": 8766,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8740,
											"end": 8766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8812,
											"end": 8821,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8806,
											"end": 8810,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8802,
											"end": 8822,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8798,
											"end": 8799,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8787,
											"end": 8796,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8776,
											"end": 8823,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8840,
											"end": 8971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 8966,
											"end": 8970,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8840,
											"end": 8971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 8840,
											"end": 8971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8840,
											"end": 8971,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 8840,
											"end": 8971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8832,
											"end": 8971,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8832,
											"end": 8971,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8559,
											"end": 8978,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8559,
											"end": 8978,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8559,
											"end": 8978,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8559,
											"end": 8978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8984,
											"end": 9159,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 8984,
											"end": 9159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9124,
											"end": 9151,
											"name": "PUSH",
											"source": 8,
											"value": "596F7520646F6E2774206F776E207468697320746F6B656E2100000000000000"
										},
										{
											"begin": 9120,
											"end": 9121,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9112,
											"end": 9118,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9108,
											"end": 9122,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9101,
											"end": 9152,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8984,
											"end": 9159,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8984,
											"end": 9159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9165,
											"end": 9531,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 9165,
											"end": 9531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9307,
											"end": 9310,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9328,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 9392,
											"end": 9394,
											"name": "PUSH",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 9387,
											"end": 9390,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9328,
											"end": 9395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 9328,
											"end": 9395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9328,
											"end": 9395,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 9328,
											"end": 9395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9321,
											"end": 9395,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9321,
											"end": 9395,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9404,
											"end": 9497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 9493,
											"end": 9496,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9404,
											"end": 9497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 9404,
											"end": 9497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9404,
											"end": 9497,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 9404,
											"end": 9497,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9522,
											"end": 9524,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9517,
											"end": 9520,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9513,
											"end": 9525,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9506,
											"end": 9525,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9506,
											"end": 9525,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9165,
											"end": 9531,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9165,
											"end": 9531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9165,
											"end": 9531,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9165,
											"end": 9531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9537,
											"end": 9956,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9537,
											"end": 9956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9703,
											"end": 9707,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9741,
											"end": 9743,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9730,
											"end": 9739,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9726,
											"end": 9744,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9718,
											"end": 9744,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9718,
											"end": 9744,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9790,
											"end": 9799,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9784,
											"end": 9788,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9780,
											"end": 9800,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9776,
											"end": 9777,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9765,
											"end": 9774,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9761,
											"end": 9778,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9754,
											"end": 9801,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9818,
											"end": 9949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 9944,
											"end": 9948,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9818,
											"end": 9949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 9818,
											"end": 9949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9818,
											"end": 9949,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 9818,
											"end": 9949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9810,
											"end": 9949,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9810,
											"end": 9949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9537,
											"end": 9956,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9537,
											"end": 9956,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9537,
											"end": 9956,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9537,
											"end": 9956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9962,
											"end": 10142,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 9962,
											"end": 10142,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10010,
											"end": 10087,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10007,
											"end": 10008,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10000,
											"end": 10088,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10107,
											"end": 10111,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 10104,
											"end": 10105,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10097,
											"end": 10112,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10131,
											"end": 10135,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10128,
											"end": 10129,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10121,
											"end": 10136,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10148,
											"end": 10339,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10148,
											"end": 10339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10188,
											"end": 10191,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10207,
											"end": 10227,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 10225,
											"end": 10226,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10207,
											"end": 10227,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 10207,
											"end": 10227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10207,
											"end": 10227,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 10207,
											"end": 10227,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10202,
											"end": 10227,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10202,
											"end": 10227,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10241,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 10259,
											"end": 10260,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10241,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 10241,
											"end": 10261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10241,
											"end": 10261,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 10241,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10236,
											"end": 10261,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10236,
											"end": 10261,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10284,
											"end": 10285,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10281,
											"end": 10282,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10277,
											"end": 10286,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10270,
											"end": 10286,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10270,
											"end": 10286,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10305,
											"end": 10308,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10302,
											"end": 10303,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10299,
											"end": 10309,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10296,
											"end": 10332,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10296,
											"end": 10332,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 10296,
											"end": 10332,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10312,
											"end": 10330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 10312,
											"end": 10330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 10312,
											"end": 10330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10312,
											"end": 10330,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 10312,
											"end": 10330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10296,
											"end": 10332,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 10296,
											"end": 10332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10148,
											"end": 10339,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10148,
											"end": 10339,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10148,
											"end": 10339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10148,
											"end": 10339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10148,
											"end": 10339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10345,
											"end": 10525,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 10345,
											"end": 10525,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10393,
											"end": 10470,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10390,
											"end": 10391,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10383,
											"end": 10471,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10490,
											"end": 10494,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 10487,
											"end": 10488,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10480,
											"end": 10495,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10514,
											"end": 10518,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10511,
											"end": 10512,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10504,
											"end": 10519,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10531,
											"end": 10702,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 10531,
											"end": 10702,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10570,
											"end": 10573,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10593,
											"end": 10617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 10611,
											"end": 10616,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10593,
											"end": 10617,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 10593,
											"end": 10617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10593,
											"end": 10617,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 10593,
											"end": 10617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10584,
											"end": 10617,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10584,
											"end": 10617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10639,
											"end": 10643,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10632,
											"end": 10637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10629,
											"end": 10644,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10626,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 10626,
											"end": 10667,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10647,
											"end": 10665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 10647,
											"end": 10665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 10647,
											"end": 10665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10647,
											"end": 10665,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 10647,
											"end": 10665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10626,
											"end": 10667,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 10626,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10694,
											"end": 10695,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 10687,
											"end": 10692,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10683,
											"end": 10696,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10676,
											"end": 10696,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10676,
											"end": 10696,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10531,
											"end": 10702,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10531,
											"end": 10702,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10531,
											"end": 10702,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10531,
											"end": 10702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10708,
											"end": 11150,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 10708,
											"end": 11150,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10857,
											"end": 10861,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10895,
											"end": 10897,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10884,
											"end": 10893,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10880,
											"end": 10898,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10872,
											"end": 10898,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10872,
											"end": 10898,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10908,
											"end": 10979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 10976,
											"end": 10977,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10965,
											"end": 10974,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10961,
											"end": 10978,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10952,
											"end": 10958,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10908,
											"end": 10979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 10908,
											"end": 10979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10908,
											"end": 10979,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 10908,
											"end": 10979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10989,
											"end": 11061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 11057,
											"end": 11059,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11046,
											"end": 11055,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11042,
											"end": 11060,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11033,
											"end": 11039,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10989,
											"end": 11061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 10989,
											"end": 11061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10989,
											"end": 11061,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 10989,
											"end": 11061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11071,
											"end": 11143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 11139,
											"end": 11141,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11128,
											"end": 11137,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11124,
											"end": 11142,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11115,
											"end": 11121,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11071,
											"end": 11143,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 11071,
											"end": 11143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11071,
											"end": 11143,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 11071,
											"end": 11143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10708,
											"end": 11150,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 10708,
											"end": 11150,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10708,
											"end": 11150,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10708,
											"end": 11150,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10708,
											"end": 11150,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10708,
											"end": 11150,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10708,
											"end": 11150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11156,
											"end": 11334,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 11156,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11296,
											"end": 11326,
											"name": "PUSH",
											"source": 8,
											"value": "596F752068617665206E6F207265776172647320746F20636C61696D00000000"
										},
										{
											"begin": 11292,
											"end": 11293,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11284,
											"end": 11290,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11280,
											"end": 11294,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11273,
											"end": 11327,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11156,
											"end": 11334,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11156,
											"end": 11334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11340,
											"end": 11706,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 11340,
											"end": 11706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11482,
											"end": 11485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11503,
											"end": 11570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 11567,
											"end": 11569,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 11562,
											"end": 11565,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11503,
											"end": 11570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 11503,
											"end": 11570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11503,
											"end": 11570,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 11503,
											"end": 11570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11496,
											"end": 11570,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11496,
											"end": 11570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11579,
											"end": 11672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 11668,
											"end": 11671,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11579,
											"end": 11672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 11579,
											"end": 11672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11579,
											"end": 11672,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 11579,
											"end": 11672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11697,
											"end": 11699,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11692,
											"end": 11695,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11688,
											"end": 11700,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11681,
											"end": 11700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11681,
											"end": 11700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11340,
											"end": 11706,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11340,
											"end": 11706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11340,
											"end": 11706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11340,
											"end": 11706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11712,
											"end": 12131,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 11712,
											"end": 12131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11878,
											"end": 11882,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11916,
											"end": 11918,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11905,
											"end": 11914,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11901,
											"end": 11919,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11893,
											"end": 11919,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11893,
											"end": 11919,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11965,
											"end": 11974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11959,
											"end": 11963,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11955,
											"end": 11975,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11951,
											"end": 11952,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11940,
											"end": 11949,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11936,
											"end": 11953,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11929,
											"end": 11976,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11993,
											"end": 12124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 12119,
											"end": 12123,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11993,
											"end": 12124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 11993,
											"end": 12124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11993,
											"end": 12124,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 11993,
											"end": 12124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11985,
											"end": 12124,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11985,
											"end": 12124,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11712,
											"end": 12131,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11712,
											"end": 12131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11712,
											"end": 12131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11712,
											"end": 12131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12137,
											"end": 12317,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 12137,
											"end": 12317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12185,
											"end": 12262,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12182,
											"end": 12183,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12175,
											"end": 12263,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12282,
											"end": 12286,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 12279,
											"end": 12280,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12272,
											"end": 12287,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12306,
											"end": 12310,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12303,
											"end": 12304,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12296,
											"end": 12311,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12323,
											"end": 12556,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 12323,
											"end": 12556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12362,
											"end": 12365,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12385,
											"end": 12409,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 12403,
											"end": 12408,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12385,
											"end": 12409,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 12385,
											"end": 12409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12385,
											"end": 12409,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 12385,
											"end": 12409,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12376,
											"end": 12409,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12376,
											"end": 12409,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12431,
											"end": 12497,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12424,
											"end": 12429,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12421,
											"end": 12498,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12418,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 12418,
											"end": 12521,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12501,
											"end": 12519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 12501,
											"end": 12519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 12501,
											"end": 12519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12501,
											"end": 12519,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 12501,
											"end": 12519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12418,
											"end": 12521,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 12418,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12548,
											"end": 12549,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 12541,
											"end": 12546,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12537,
											"end": 12550,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12530,
											"end": 12550,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12530,
											"end": 12550,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12323,
											"end": 12556,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12323,
											"end": 12556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12323,
											"end": 12556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12323,
											"end": 12556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12562,
											"end": 12705,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 12562,
											"end": 12705,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12619,
											"end": 12624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12650,
											"end": 12656,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12644,
											"end": 12657,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12635,
											"end": 12657,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12635,
											"end": 12657,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12666,
											"end": 12699,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 12693,
											"end": 12698,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12666,
											"end": 12699,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 12666,
											"end": 12699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12666,
											"end": 12699,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 12666,
											"end": 12699,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12562,
											"end": 12705,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12562,
											"end": 12705,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12562,
											"end": 12705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12562,
											"end": 12705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12562,
											"end": 12705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12711,
											"end": 13062,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 12711,
											"end": 13062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12781,
											"end": 12787,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12830,
											"end": 12832,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12818,
											"end": 12827,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12809,
											"end": 12816,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12805,
											"end": 12828,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12801,
											"end": 12833,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 12798,
											"end": 12917,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12798,
											"end": 12917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 12798,
											"end": 12917,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12836,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 12836,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 12836,
											"end": 12915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12836,
											"end": 12915,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 12836,
											"end": 12915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12798,
											"end": 12917,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 12798,
											"end": 12917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12956,
											"end": 12957,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12981,
											"end": 13045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13028,
											"end": 13034,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13017,
											"end": 13026,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13013,
											"end": 13035,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12981,
											"end": 13045,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 12981,
											"end": 13045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12981,
											"end": 13045,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 12981,
											"end": 13045,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12971,
											"end": 13045,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12971,
											"end": 13045,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12927,
											"end": 13055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12711,
											"end": 13062,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12711,
											"end": 13062,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12711,
											"end": 13062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12711,
											"end": 13062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12711,
											"end": 13062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13068,
											"end": 13249,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 13068,
											"end": 13249,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13208,
											"end": 13241,
											"name": "PUSH",
											"source": 8,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 13204,
											"end": 13205,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13196,
											"end": 13202,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13192,
											"end": 13206,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13185,
											"end": 13242,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13068,
											"end": 13249,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13068,
											"end": 13249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13255,
											"end": 13621,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 13255,
											"end": 13621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13397,
											"end": 13400,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13418,
											"end": 13485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 13482,
											"end": 13484,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 13477,
											"end": 13480,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13418,
											"end": 13485,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 13418,
											"end": 13485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13418,
											"end": 13485,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 13418,
											"end": 13485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13411,
											"end": 13485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13411,
											"end": 13485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13494,
											"end": 13587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 13583,
											"end": 13586,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13494,
											"end": 13587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 13494,
											"end": 13587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13494,
											"end": 13587,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 13494,
											"end": 13587,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13612,
											"end": 13614,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13607,
											"end": 13610,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13603,
											"end": 13615,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13596,
											"end": 13615,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13596,
											"end": 13615,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13255,
											"end": 13621,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13255,
											"end": 13621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13255,
											"end": 13621,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13255,
											"end": 13621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13627,
											"end": 14046,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 13627,
											"end": 14046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13793,
											"end": 13797,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13831,
											"end": 13833,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13820,
											"end": 13829,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13816,
											"end": 13834,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13808,
											"end": 13834,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13808,
											"end": 13834,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13880,
											"end": 13889,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13874,
											"end": 13878,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13870,
											"end": 13890,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13866,
											"end": 13867,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13855,
											"end": 13864,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13851,
											"end": 13868,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13844,
											"end": 13891,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13908,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 14034,
											"end": 14038,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13908,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 13908,
											"end": 14039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13908,
											"end": 14039,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 13908,
											"end": 14039,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13900,
											"end": 14039,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13900,
											"end": 14039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13627,
											"end": 14046,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13627,
											"end": 14046,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13627,
											"end": 14046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13627,
											"end": 14046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14052,
											"end": 14246,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 14052,
											"end": 14246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14092,
											"end": 14096,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14112,
											"end": 14132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 14130,
											"end": 14131,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14112,
											"end": 14132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 14112,
											"end": 14132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14112,
											"end": 14132,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 14112,
											"end": 14132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14107,
											"end": 14132,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14107,
											"end": 14132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14146,
											"end": 14166,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 14164,
											"end": 14165,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14146,
											"end": 14166,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 14146,
											"end": 14166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14146,
											"end": 14166,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 14146,
											"end": 14166,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14141,
											"end": 14166,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14141,
											"end": 14166,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14190,
											"end": 14191,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14187,
											"end": 14188,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14183,
											"end": 14192,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14175,
											"end": 14192,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14175,
											"end": 14192,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14214,
											"end": 14215,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14208,
											"end": 14212,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14205,
											"end": 14216,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 14202,
											"end": 14239,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14202,
											"end": 14239,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 14202,
											"end": 14239,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14219,
											"end": 14237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 14219,
											"end": 14237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 14219,
											"end": 14237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14219,
											"end": 14237,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 14219,
											"end": 14237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14202,
											"end": 14239,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 14202,
											"end": 14239,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14052,
											"end": 14246,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14052,
											"end": 14246,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14052,
											"end": 14246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14052,
											"end": 14246,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14052,
											"end": 14246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14252,
											"end": 14662,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 14252,
											"end": 14662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14292,
											"end": 14299,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14315,
											"end": 14335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 14333,
											"end": 14334,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14315,
											"end": 14335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 14315,
											"end": 14335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14315,
											"end": 14335,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 14315,
											"end": 14335,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14310,
											"end": 14335,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14310,
											"end": 14335,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14349,
											"end": 14369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 14367,
											"end": 14368,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14349,
											"end": 14369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 14349,
											"end": 14369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14349,
											"end": 14369,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 14349,
											"end": 14369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14344,
											"end": 14369,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14344,
											"end": 14369,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14404,
											"end": 14405,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14401,
											"end": 14402,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14397,
											"end": 14406,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 14426,
											"end": 14456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 14444,
											"end": 14455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14426,
											"end": 14456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 14426,
											"end": 14456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14426,
											"end": 14456,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 14426,
											"end": 14456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14415,
											"end": 14456,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14415,
											"end": 14456,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14605,
											"end": 14606,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14596,
											"end": 14603,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14592,
											"end": 14607,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 14589,
											"end": 14590,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14586,
											"end": 14608,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 14566,
											"end": 14567,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14559,
											"end": 14568,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14539,
											"end": 14622,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 14516,
											"end": 14655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 14516,
											"end": 14655,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14635,
											"end": 14653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 14635,
											"end": 14653,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 14635,
											"end": 14653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14635,
											"end": 14653,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 14635,
											"end": 14653,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14516,
											"end": 14655,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 14516,
											"end": 14655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14300,
											"end": 14662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14252,
											"end": 14662,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14252,
											"end": 14662,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14252,
											"end": 14662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14252,
											"end": 14662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14252,
											"end": 14662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14668,
											"end": 14848,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 14668,
											"end": 14848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14716,
											"end": 14793,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14713,
											"end": 14714,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14706,
											"end": 14794,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14813,
											"end": 14817,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 14810,
											"end": 14811,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 14803,
											"end": 14818,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14837,
											"end": 14841,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 14834,
											"end": 14835,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14827,
											"end": 14842,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14854,
											"end": 15039,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 14854,
											"end": 15039,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14894,
											"end": 14895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14911,
											"end": 14931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 14929,
											"end": 14930,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14911,
											"end": 14931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 14911,
											"end": 14931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14911,
											"end": 14931,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 14911,
											"end": 14931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14906,
											"end": 14931,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14906,
											"end": 14931,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14945,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 14963,
											"end": 14964,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14945,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 14945,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14945,
											"end": 14965,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 14945,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14940,
											"end": 14965,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14940,
											"end": 14965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14984,
											"end": 14985,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14974,
											"end": 15009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 14974,
											"end": 15009,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14989,
											"end": 15007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 14989,
											"end": 15007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 14989,
											"end": 15007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14989,
											"end": 15007,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 14989,
											"end": 15007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14974,
											"end": 15009,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 14974,
											"end": 15009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15031,
											"end": 15032,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15028,
											"end": 15029,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15024,
											"end": 15033,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 15019,
											"end": 15033,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15019,
											"end": 15033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14854,
											"end": 15039,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14854,
											"end": 15039,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14854,
											"end": 15039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14854,
											"end": 15039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14854,
											"end": 15039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15045,
											"end": 15377,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 15045,
											"end": 15377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15166,
											"end": 15170,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15204,
											"end": 15206,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15193,
											"end": 15202,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15189,
											"end": 15207,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15181,
											"end": 15207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15181,
											"end": 15207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15217,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 15285,
											"end": 15286,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15274,
											"end": 15283,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15270,
											"end": 15287,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15261,
											"end": 15267,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15217,
											"end": 15288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 15217,
											"end": 15288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15217,
											"end": 15288,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 15217,
											"end": 15288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15298,
											"end": 15370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 15366,
											"end": 15368,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15355,
											"end": 15364,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15351,
											"end": 15369,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15342,
											"end": 15348,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15298,
											"end": 15370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 15298,
											"end": 15370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15298,
											"end": 15370,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 15298,
											"end": 15370,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15045,
											"end": 15377,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 15045,
											"end": 15377,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15045,
											"end": 15377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15045,
											"end": 15377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15045,
											"end": 15377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15045,
											"end": 15377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15383,
											"end": 15473,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 15383,
											"end": 15473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15417,
											"end": 15424,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15460,
											"end": 15465,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15453,
											"end": 15466,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15446,
											"end": 15467,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15435,
											"end": 15467,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15435,
											"end": 15467,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15383,
											"end": 15473,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15383,
											"end": 15473,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15383,
											"end": 15473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15383,
											"end": 15473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15479,
											"end": 15595,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 15479,
											"end": 15595,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15549,
											"end": 15570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 15564,
											"end": 15569,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15549,
											"end": 15570,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 15549,
											"end": 15570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15549,
											"end": 15570,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 15549,
											"end": 15570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15542,
											"end": 15547,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15539,
											"end": 15571,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 15529,
											"end": 15589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 15529,
											"end": 15589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15585,
											"end": 15586,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15582,
											"end": 15583,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15575,
											"end": 15587,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15529,
											"end": 15589,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 15529,
											"end": 15589,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15479,
											"end": 15595,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15479,
											"end": 15595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15601,
											"end": 15738,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 15601,
											"end": 15738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15655,
											"end": 15660,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15686,
											"end": 15692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15680,
											"end": 15693,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15671,
											"end": 15693,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15671,
											"end": 15693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15702,
											"end": 15732,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 15726,
											"end": 15731,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15702,
											"end": 15732,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 15702,
											"end": 15732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15702,
											"end": 15732,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 15702,
											"end": 15732,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15601,
											"end": 15738,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15601,
											"end": 15738,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15601,
											"end": 15738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15601,
											"end": 15738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15601,
											"end": 15738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15744,
											"end": 16089,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 15744,
											"end": 16089,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15811,
											"end": 15817,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15860,
											"end": 15862,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15848,
											"end": 15857,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15839,
											"end": 15846,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15835,
											"end": 15858,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15831,
											"end": 15863,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 15828,
											"end": 15947,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15828,
											"end": 15947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 15828,
											"end": 15947,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15866,
											"end": 15945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 15866,
											"end": 15945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 15866,
											"end": 15945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15866,
											"end": 15945,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 15866,
											"end": 15945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15828,
											"end": 15947,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 15828,
											"end": 15947,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15986,
											"end": 15987,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16011,
											"end": 16072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 16064,
											"end": 16071,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16055,
											"end": 16061,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16044,
											"end": 16053,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16040,
											"end": 16062,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16011,
											"end": 16072,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 16011,
											"end": 16072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16011,
											"end": 16072,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 16011,
											"end": 16072,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16001,
											"end": 16072,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16001,
											"end": 16072,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15957,
											"end": 16082,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15744,
											"end": 16089,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15744,
											"end": 16089,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15744,
											"end": 16089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15744,
											"end": 16089,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15744,
											"end": 16089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16095,
											"end": 16193,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 16095,
											"end": 16193,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16146,
											"end": 16152,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16180,
											"end": 16185,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16174,
											"end": 16186,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16164,
											"end": 16186,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16164,
											"end": 16186,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16095,
											"end": 16193,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16095,
											"end": 16193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16095,
											"end": 16193,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16095,
											"end": 16193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16199,
											"end": 16346,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 16199,
											"end": 16346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16300,
											"end": 16311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16337,
											"end": 16340,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16322,
											"end": 16340,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16322,
											"end": 16340,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16199,
											"end": 16346,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16199,
											"end": 16346,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16199,
											"end": 16346,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16199,
											"end": 16346,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16199,
											"end": 16346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16352,
											"end": 16598,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 16352,
											"end": 16598,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16433,
											"end": 16434,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16443,
											"end": 16556,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 16443,
											"end": 16556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16457,
											"end": 16463,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16454,
											"end": 16455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16451,
											"end": 16464,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 16443,
											"end": 16556,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16443,
											"end": 16556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 16443,
											"end": 16556,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16542,
											"end": 16543,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16537,
											"end": 16540,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16533,
											"end": 16544,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16527,
											"end": 16545,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16523,
											"end": 16524,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16518,
											"end": 16521,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16514,
											"end": 16525,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16507,
											"end": 16546,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16479,
											"end": 16481,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16476,
											"end": 16477,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16472,
											"end": 16482,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16467,
											"end": 16482,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16467,
											"end": 16482,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16443,
											"end": 16556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 16443,
											"end": 16556,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16443,
											"end": 16556,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 16443,
											"end": 16556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16590,
											"end": 16591,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16581,
											"end": 16587,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16576,
											"end": 16579,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16572,
											"end": 16588,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16565,
											"end": 16592,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16414,
											"end": 16598,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16352,
											"end": 16598,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16352,
											"end": 16598,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16352,
											"end": 16598,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16352,
											"end": 16598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16604,
											"end": 16990,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 16604,
											"end": 16990,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16708,
											"end": 16711,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16736,
											"end": 16774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 16768,
											"end": 16773,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16736,
											"end": 16774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 16736,
											"end": 16774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16736,
											"end": 16774,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 16736,
											"end": 16774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16790,
											"end": 16878,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 16871,
											"end": 16877,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16866,
											"end": 16869,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16790,
											"end": 16878,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 16790,
											"end": 16878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16790,
											"end": 16878,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 16790,
											"end": 16878,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16783,
											"end": 16878,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 16783,
											"end": 16878,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16887,
											"end": 16952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 16945,
											"end": 16951,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16940,
											"end": 16943,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16933,
											"end": 16937,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16926,
											"end": 16931,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 16922,
											"end": 16938,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16887,
											"end": 16952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 16887,
											"end": 16952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16887,
											"end": 16952,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 16887,
											"end": 16952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16977,
											"end": 16983,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16972,
											"end": 16975,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16968,
											"end": 16984,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16961,
											"end": 16984,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16961,
											"end": 16984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16712,
											"end": 16990,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16604,
											"end": 16990,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16604,
											"end": 16990,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16604,
											"end": 16990,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16604,
											"end": 16990,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16604,
											"end": 16990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16996,
											"end": 17267,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 16996,
											"end": 17267,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17126,
											"end": 17129,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17148,
											"end": 17241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 17237,
											"end": 17240,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17228,
											"end": 17234,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17148,
											"end": 17241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 17148,
											"end": 17241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17148,
											"end": 17241,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 17148,
											"end": 17241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17141,
											"end": 17241,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17141,
											"end": 17241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17258,
											"end": 17261,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17251,
											"end": 17261,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17251,
											"end": 17261,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16996,
											"end": 17267,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16996,
											"end": 17267,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16996,
											"end": 17267,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16996,
											"end": 17267,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16996,
											"end": 17267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"nft-staking-app/StakingContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"availableRewards(address)": "f854a27f",
							"claimRewards()": "372500ab",
							"getStakedTokens(address)": "63c28db1",
							"nftCollection()": "6588103b",
							"rewardsToken()": "d1af0c7d",
							"stake(uint256)": "a694fc3a",
							"stakerAddress(uint256)": "94067045",
							"stakers(address)": "9168ae72",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_nftCollection\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_rewardsToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"availableRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakedTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC721Staking.StakedToken[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftCollection\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeOfLastUpdate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unclaimedRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft-staking-app/StakingContract.sol\":\"ERC721Staking\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"nft-staking-app/StakingContract.sol\":{\"keccak256\":\"0x262a210ae7cbd074c97d81e52b9282a20503d8a23f2b5259bae0b8f7beca73ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89e9f14dac404dc53ad26cd2f6172837f19413e532b094f3b96ee2be0a92cd8a\",\"dweb:/ipfs/QmSU7jSyH3P3PYV4XPb9kkxZqgxkJLazPaHozifUgsU1HK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "nft-staking-app/StakingContract.sol:ERC721Staking",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 905,
								"contract": "nft-staking-app/StakingContract.sol:ERC721Staking",
								"label": "rewardsPerHour",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 910,
								"contract": "nft-staking-app/StakingContract.sol:ERC721Staking",
								"label": "stakers",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(Staker)902_storage)"
							},
							{
								"astId": 914,
								"contract": "nft-staking-app/StakingContract.sol:ERC721Staking",
								"label": "stakerAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(StakedToken)891_storage)dyn_storage": {
								"base": "t_struct(StakedToken)891_storage",
								"encoding": "dynamic_array",
								"label": "struct ERC721Staking.StakedToken[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(Staker)902_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct ERC721Staking.Staker)",
								"numberOfBytes": "32",
								"value": "t_struct(Staker)902_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_struct(StakedToken)891_storage": {
								"encoding": "inplace",
								"label": "struct ERC721Staking.StakedToken",
								"members": [
									{
										"astId": 888,
										"contract": "nft-staking-app/StakingContract.sol:ERC721Staking",
										"label": "staker",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 890,
										"contract": "nft-staking-app/StakingContract.sol:ERC721Staking",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Staker)902_storage": {
								"encoding": "inplace",
								"label": "struct ERC721Staking.Staker",
								"members": [
									{
										"astId": 893,
										"contract": "nft-staking-app/StakingContract.sol:ERC721Staking",
										"label": "amountStaked",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 897,
										"contract": "nft-staking-app/StakingContract.sol:ERC721Staking",
										"label": "stakedTokens",
										"offset": 0,
										"slot": "1",
										"type": "t_array(t_struct(StakedToken)891_storage)dyn_storage"
									},
									{
										"astId": 899,
										"contract": "nft-staking-app/StakingContract.sol:ERC721Staking",
										"label": "timeOfLastUpdate",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 901,
										"contract": "nft-staking-app/StakingContract.sol:ERC721Staking",
										"label": "unclaimedRewards",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1676:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1723:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1767:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1811:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:0"
									},
									"scope": 64,
									"src": "1797:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2251:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 21,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2261:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2303:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 29,
									"name": "nonReentrant",
									"nameLocation": "2236:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:0"
									},
									"src": "2227:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2375:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 34,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:0"
									},
									"scope": 64,
									"src": "2336:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2667:171:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2819:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:0"
									},
									"scope": 64,
									"src": "2629:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3081:43:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 58,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "3098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 59,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3109:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 57,
												"id": 61,
												"nodeType": "Return",
												"src": "3091:26:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3075:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:0"
									},
									"scope": 64,
									"src": "3017:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 65,
							"src": "888:2238:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							142
						]
					},
					"id": 143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 66,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 67,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 142,
							"linearizedBaseContracts": [
								142
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 76,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 85,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 82,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 91,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 142,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 142,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 142,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 142,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 126,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 142,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 142,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 143,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								76,
								85
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							178
						]
					},
					"id": 179,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 144,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 145,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:2",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 178,
							"linearizedBaseContracts": [
								178
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:2",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3022:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3045:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3070:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3093:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3119:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 155,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3136:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 157,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "3155:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 159,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:2"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:2"
									},
									"scope": 178,
									"src": "2997:183:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:2",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3501:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:2"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "3539:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:2"
									},
									"scope": 178,
									"src": "3485:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:2",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:2"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "3791:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 174,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:2"
									},
									"scope": 178,
									"src": "3740:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 179,
							"src": "2113:1689:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							838
						],
						"IERC20": [
							142
						],
						"IERC20Permit": [
							178
						],
						"SafeERC20": [
							468
						]
					},
					"id": 469,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 180,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 143,
							"src": "141:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 181,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 142,
										"src": "149:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 184,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 179,
							"src": "179:60:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 183,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 178,
										"src": "187:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 186,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 839,
							"src": "240:51:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 185,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 838,
										"src": "248:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 187,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 190,
									"libraryName": {
										"id": 188,
										"name": "Address",
										"nameLocations": [
											"781:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 838,
										"src": "781:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:3",
									"typeName": {
										"id": 189,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:3",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 195,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "907:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:3"
									},
									"src": "876:46:3"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:3",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 204,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1043:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1060:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1086:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:3"
									},
									"src": "1004:109:3"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "1375:88:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 216,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "1405:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 219,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 208,
																		"src": "1427:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:3",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 109,
																	"src": "1427:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 221,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 210,
																			"src": "1444:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 222,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 212,
																			"src": "1448:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 223,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 217,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 215,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "1385:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:3"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:3",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1325:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 207,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 206,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "1325:6:3"
													},
													"referencedDeclaration": 142,
													"src": "1325:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1339:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1351:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:3"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:3"
									},
									"scope": 468,
									"src": "1303:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "1792:98:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 242,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "1822:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 245,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 232,
																		"src": "1844:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:3",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 141,
																	"src": "1844:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 247,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 234,
																			"src": "1865:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 248,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 236,
																			"src": "1871:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 249,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 238,
																			"src": "1875:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 250,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 243,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 241,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "1802:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:3"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:3",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1728:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 231,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 230,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "1728:6:3"
													},
													"referencedDeclaration": 142,
													"src": "1728:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1742:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1756:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1768:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:3"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:3"
									},
									"scope": 468,
									"src": "1702:188:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "2167:139:3",
										"statements": [
											{
												"assignments": [
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 285,
														"src": "2177:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 266,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 276,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 272,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$468",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$468",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 270,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 274,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "2231:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 268,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "2200:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:3",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 119,
														"src": "2200:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 278,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "2262:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 279,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "2269:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "2278:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 281,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "2293:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 277,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "2249:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:3"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:3",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2112:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 258,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 257,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "2112:6:3"
													},
													"referencedDeclaration": 142,
													"src": "2112:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2126:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "2143:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:3"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:3"
									},
									"scope": 468,
									"src": "2081:225:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2607:370:3",
										"statements": [
											{
												"id": 327,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:3",
												"statements": [
													{
														"assignments": [
															298
														],
														"declarations": [
															{
																"constant": false,
																"id": 298,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:3",
																"nodeType": "VariableDeclaration",
																"scope": 327,
																"src": "2641:24:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 297,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 307,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 303,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$468",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$468",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 301,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 305,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "2699:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 299,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "2668:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:3",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 119,
																"src": "2668:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 308,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 298,
																"src": "2725:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 309,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "2744:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 318,
														"nodeType": "IfStatement",
														"src": "2721:160:3",
														"trueBody": {
															"id": 317,
															"nodeType": "Block",
															"src": "2763:118:3",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 312,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 292,
																				"src": "2821:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 313,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 298,
																				"src": "2830:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 314,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 294,
																				"src": "2848:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 311,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 204,
																			"src": "2788:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 316,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:3"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 320,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "2907:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 321,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "2914:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 322,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 298,
																		"src": "2923:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 323,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 294,
																		"src": "2942:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 319,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "2894:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 326,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:3",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2540:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 289,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 288,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "2540:6:3"
													},
													"referencedDeclaration": 142,
													"src": "2540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2554:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2571:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:3"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:3"
									},
									"scope": 468,
									"src": "2509:468:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "3373:303:3",
										"statements": [
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "3383:25:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 340,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 350,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 344,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "3426:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$142",
																	"typeString": "contract IERC20"
																}
															},
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:3",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 129,
															"src": "3426:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 346,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "3442:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 347,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 337,
																	"src": "3451:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 348,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 342,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:3",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:3"
											},
											{
												"condition": {
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:3",
													"subExpression": {
														"arguments": [
															{
																"id": 352,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "3498:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$142",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 353,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "3505:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$142",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 351,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "3474:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 374,
												"nodeType": "IfStatement",
												"src": "3469:201:3",
												"trueBody": {
													"id": 373,
													"nodeType": "Block",
													"src": "3520:150:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 357,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "3554:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 360,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 333,
																					"src": "3576:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$142",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 361,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:3",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 129,
																				"src": "3576:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 362,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 335,
																						"src": "3592:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 363,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 364,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 358,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:3",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 356,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "3534:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 367,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 369,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "3639:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 370,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "3646:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$142",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 368,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "3619:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 372,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:3",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "3318:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 332,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 331,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "3318:6:3"
													},
													"referencedDeclaration": 142,
													"src": "3318:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "3332:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "3349:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:3"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:3"
									},
									"scope": 468,
									"src": "3296:380:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "4129:559:3",
										"statements": [
											{
												"assignments": [
													386
												],
												"declarations": [
													{
														"constant": false,
														"id": 386,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 417,
														"src": "4478:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 385,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 394,
												"initialValue": {
													"arguments": [
														{
															"id": 392,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "4532:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 389,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "4512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 387,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:3",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 659,
														"src": "4504:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 395,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "4551:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 401,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "4589:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 402,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 404,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 399,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 416,
												"nodeType": "IfStatement",
												"src": "4547:135:3",
												"trueBody": {
													"id": 415,
													"nodeType": "Block",
													"src": "4610:72:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 411,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 380,
																				"src": "4664:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$142",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$142",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 409,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 408,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "4631:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 414,
															"nodeType": "RevertStatement",
															"src": "4624:47:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "4088:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 379,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 378,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "4088:6:3"
													},
													"referencedDeclaration": 142,
													"src": "4088:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "4102:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:3"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:3"
									},
									"scope": 468,
									"src": "4059:629:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "5278:489:3",
										"statements": [
											{
												"assignments": [
													430,
													432
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "5574:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 429,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 466,
														"src": "5588:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 431,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [
														{
															"id": 438,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "5635:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 435,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "5623:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$142",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 433,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 441,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "5657:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 442,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 432,
																				"src": "5669:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 448,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 432,
																				"src": "5706:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 450,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 449,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 451,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 446,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:3",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 454,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 458,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 422,
																			"src": "5738:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$142",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$142",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 456,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:3",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 428,
												"id": 465,
												"nodeType": "Return",
												"src": "5650:110:3"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "5222:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 421,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 420,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "5222:6:3"
													},
													"referencedDeclaration": 142,
													"src": "5222:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "5236:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 423,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:3"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "5272:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:3"
									},
									"scope": 468,
									"src": "5189:578:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 469,
							"src": "751:5018:3",
							"usedErrors": [
								195,
								204
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							850
						],
						"IERC721": [
							585
						]
					},
					"id": 586,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 470,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 472,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 851,
							"src": "134:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 471,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 850,
										"src": "142:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 474,
										"name": "IERC165",
										"nameLocations": [
											"287:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 850,
										"src": "287:7:4"
									},
									"id": 475,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:4"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 473,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 585,
							"linearizedBaseContracts": [
								585,
								850
							],
							"name": "IERC721",
							"nameLocation": "276:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 484,
									"name": "Transfer",
									"nameLocation": "400:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "409:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "431:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "451:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:4"
									},
									"src": "394:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 493,
									"name": "Approval",
									"nameLocation": "587:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "596:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "619:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "645:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:4"
									},
									"src": "581:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 502,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "819:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "842:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "868:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 499,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:4"
									},
									"src": "798:85:4"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 510,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "989:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:4"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "1027:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:4"
									},
									"scope": 585,
									"src": "970:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1203:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:4"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1243:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:4"
									},
									"scope": 585,
									"src": "1186:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 530,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "1860:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "1874:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "1886:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "1903:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:4"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:4"
									},
									"scope": 585,
									"src": "1834:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "2675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "2689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "2701:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:4"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:4"
									},
									"scope": 585,
									"src": "2649:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 550,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3492:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3506:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3518:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:4"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:4"
									},
									"scope": 585,
									"src": "3470:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4024:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "4036:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:4"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:4"
									},
									"scope": 585,
									"src": "4007:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4415:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "4433:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 562,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:4"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:4"
									},
									"scope": 585,
									"src": "4388:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 574,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "4628:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:4"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "4668:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:4"
									},
									"scope": 585,
									"src": "4607:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "4861:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "4876:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:4"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "4917:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 581,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:4"
									},
									"scope": 585,
									"src": "4835:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 586,
							"src": "266:4659:4",
							"usedErrors": [],
							"usedEvents": [
								484,
								493,
								502
							]
						}
					],
					"src": "108:4818:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							838
						]
					},
					"id": 839,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 587,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 588,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 838,
							"linearizedBaseContracts": [
								838
							],
							"name": "Address",
							"nameLocation": "203:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:5",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 593,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "349:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:5"
									},
									"src": "316:50:5"
								},
								{
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:5",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 598,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "475:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:5"
									},
									"src": "452:39:5"
								},
								{
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:5",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 601,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:5"
									},
									"src": "591:24:5"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "1602:260:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 611,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$838",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$838",
																		"typeString": "library Address"
																	}
																],
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 609,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 614,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "1640:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 624,
												"nodeType": "IfStatement",
												"src": "1612:109:5",
												"trueBody": {
													"id": 623,
													"nodeType": "Block",
													"src": "1648:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 619,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$838",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$838",
																					"typeString": "library Address"
																				}
																			],
																			"id": 618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 617,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 616,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "1669:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 622,
															"nodeType": "RevertStatement",
															"src": "1662:48:5"
														}
													]
												}
											},
											{
												"assignments": [
													626,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 641,
														"src": "1732:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 625,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 633,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 627,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "1750:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 629,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "1772:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:5"
											},
											{
												"condition": {
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:5",
													"subExpression": {
														"id": 634,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "1798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 640,
												"nodeType": "IfStatement",
												"src": "1793:63:5",
												"trueBody": {
													"id": 639,
													"nodeType": "Block",
													"src": "1807:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 636,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "1828:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 638,
															"nodeType": "RevertStatement",
															"src": "1821:24:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1550:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1577:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:5"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:5"
									},
									"scope": 838,
									"src": "1531:331:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "2794:62:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 653,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 645,
															"src": "2833:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 654,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "2841:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 652,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "2811:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 651,
												"id": 657,
												"nodeType": "Return",
												"src": "2804:45:5"
											}
										]
									},
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2727:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2743:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 646,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:5"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "2780:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 649,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:5"
									},
									"scope": 838,
									"src": "2705:151:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "3293:279:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 673,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$838",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$838",
																		"typeString": "library Address"
																	}
																],
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 671,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 676,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "3331:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 686,
												"nodeType": "IfStatement",
												"src": "3303:108:5",
												"trueBody": {
													"id": 685,
													"nodeType": "Block",
													"src": "3338:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 681,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$838",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$838",
																					"typeString": "library Address"
																				}
																			],
																			"id": 680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 679,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 678,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "3359:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 684,
															"nodeType": "RevertStatement",
															"src": "3352:48:5"
														}
													]
												}
											},
											{
												"assignments": [
													688,
													690
												],
												"declarations": [
													{
														"constant": false,
														"id": 688,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 704,
														"src": "3421:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 687,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 690,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 704,
														"src": "3435:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 689,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [
														{
															"id": 695,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "3488:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 691,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "3462:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 693,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "3481:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "3537:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "3545:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 701,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "3554:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 698,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "3510:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 670,
												"id": 703,
												"nodeType": "Return",
												"src": "3503:62:5"
											}
										]
									},
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3211:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3227:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 663,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3246:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:5"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "3279:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 668,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:5"
									},
									"scope": 838,
									"src": "3180:392:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "3811:154:5",
										"statements": [
											{
												"assignments": [
													716,
													718
												],
												"declarations": [
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 730,
														"src": "3822:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 715,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 718,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 730,
														"src": "3836:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 717,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 723,
												"initialValue": {
													"arguments": [
														{
															"id": 721,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "3881:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 719,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "3863:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 725,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "3930:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "3938:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 727,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "3947:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 724,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "3903:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 714,
												"id": 729,
												"nodeType": "Return",
												"src": "3896:62:5"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3739:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3755:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 709,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:5"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "3797:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 712,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:5"
									},
									"scope": 838,
									"src": "3711:254:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "4203:156:5",
										"statements": [
											{
												"assignments": [
													742,
													744
												],
												"declarations": [
													{
														"constant": false,
														"id": 742,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 756,
														"src": "4214:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 741,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 744,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 756,
														"src": "4228:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 743,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 749,
												"initialValue": {
													"arguments": [
														{
															"id": 747,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "4275:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 745,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "4255:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 751,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "4324:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 752,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "4332:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 753,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "4341:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 750,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "4297:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 740,
												"id": 755,
												"nodeType": "Return",
												"src": "4290:62:5"
											}
										]
									},
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "4136:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "4152:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 735,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:5"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "4189:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 738,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:5"
									},
									"scope": 838,
									"src": "4106:253:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "4783:424:5",
										"statements": [
											{
												"condition": {
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:5",
													"subExpression": {
														"id": 769,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "4798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 794,
													"nodeType": "Block",
													"src": "4857:344:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 776,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 764,
																			"src": "5045:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 780,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 760,
																				"src": "5071:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 791,
															"nodeType": "IfStatement",
															"src": "5041:119:5",
															"trueBody": {
																"id": 790,
																"nodeType": "Block",
																"src": "5096:64:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 787,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 760,
																					"src": "5138:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 786,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 598,
																				"src": "5121:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 789,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 792,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "5180:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 768,
															"id": 793,
															"nodeType": "Return",
															"src": "5173:17:5"
														}
													]
												},
												"id": 795,
												"nodeType": "IfStatement",
												"src": "4793:408:5",
												"trueBody": {
													"id": 775,
													"nodeType": "Block",
													"src": "4807:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 772,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "4829:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 771,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "4821:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 774,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "4670:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "4694:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 761,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "4716:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 763,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:5"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "4769:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:5"
									},
									"scope": 838,
									"src": "4625:582:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "5509:122:5",
										"statements": [
											{
												"condition": {
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:5",
													"subExpression": {
														"id": 807,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "5524:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 816,
													"nodeType": "Block",
													"src": "5583:42:5",
													"statements": [
														{
															"expression": {
																"id": 814,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "5604:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 806,
															"id": 815,
															"nodeType": "Return",
															"src": "5597:17:5"
														}
													]
												},
												"id": 817,
												"nodeType": "IfStatement",
												"src": "5519:106:5",
												"trueBody": {
													"id": 813,
													"nodeType": "Block",
													"src": "5533:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 810,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 802,
																		"src": "5555:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 809,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "5547:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 812,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:5",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "5433:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 799,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "5447:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 801,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:5"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "5495:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 804,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:5"
									},
									"scope": 838,
									"src": "5407:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "5798:461:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 825,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "5874:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 834,
													"nodeType": "Block",
													"src": "6204:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 831,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6225:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 833,
															"nodeType": "RevertStatement",
															"src": "6218:24:5"
														}
													]
												},
												"id": 835,
												"nodeType": "IfStatement",
												"src": "5870:383:5",
												"trueBody": {
													"id": 830,
													"nodeType": "Block",
													"src": "5897:301:5",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:5",
																"nodeType": "YulBlock",
																"src": "6055:133:5",
																"statements": [
																	{
																		"nativeSrc": "6073:40:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:5"
																			},
																			"nativeSrc": "6096:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:5",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:5",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:5"
																					},
																					"nativeSrc": "6137:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:5",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:5"
																			},
																			"nativeSrc": "6130:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:5"
																		},
																		"nativeSrc": "6130:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 822,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 822,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:5",
																	"valueSize": 1
																}
															],
															"id": 829,
															"nodeType": "InlineAssembly",
															"src": "6046:142:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:5",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "5760:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 821,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:5"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:5"
									},
									"scope": 838,
									"src": "5743:516:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 839,
							"src": "195:6066:5",
							"usedErrors": [
								593,
								598,
								601
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							850
						]
					},
					"id": 851,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 840,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 841,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:6",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 850,
							"linearizedBaseContracts": [
								850
							],
							"name": "IERC165",
							"nameLocation": "431:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 849,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "817:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 843,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:6"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "860:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 846,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:6"
									},
									"scope": 850,
									"src": "790:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 851,
							"src": "421:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:6"
				},
				"id": 6
			},
			"nft-staking-app/StakingContract.sol": {
				"ast": {
					"absolutePath": "nft-staking-app/StakingContract.sol",
					"exportedSymbols": {
						"Address": [
							838
						],
						"ERC721Staking": [
							1350
						],
						"IERC165": [
							850
						],
						"IERC20": [
							142
						],
						"IERC20Permit": [
							178
						],
						"IERC721": [
							585
						],
						"ReentrancyGuard": [
							64
						],
						"SafeERC20": [
							468
						]
					},
					"id": 1351,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 852,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 853,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1351,
							"sourceUnit": 143,
							"src": "58:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 854,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1351,
							"sourceUnit": 469,
							"src": "116:65:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 855,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1351,
							"sourceUnit": 586,
							"src": "183:58:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 856,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1351,
							"sourceUnit": 65,
							"src": "243:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 857,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"335:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 64,
										"src": "335:15:7"
									},
									"id": 858,
									"nodeType": "InheritanceSpecifier",
									"src": "335:15:7"
								}
							],
							"canonicalName": "ERC721Staking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1350,
							"linearizedBaseContracts": [
								1350,
								64
							],
							"name": "ERC721Staking",
							"nameLocation": "318:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 862,
									"libraryName": {
										"id": 859,
										"name": "SafeERC20",
										"nameLocations": [
											"365:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 468,
										"src": "365:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "359:27:7",
									"typeName": {
										"id": 861,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 860,
											"name": "IERC20",
											"nameLocations": [
												"379:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 142,
											"src": "379:6:7"
										},
										"referencedDeclaration": 142,
										"src": "379:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$142",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 865,
									"mutability": "immutable",
									"name": "rewardsToken",
									"nameLocation": "458:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1350,
									"src": "434:36:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$142",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 864,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 863,
											"name": "IERC20",
											"nameLocations": [
												"434:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 142,
											"src": "434:6:7"
										},
										"referencedDeclaration": 142,
										"src": "434:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$142",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6588103b",
									"id": 868,
									"mutability": "immutable",
									"name": "nftCollection",
									"nameLocation": "502:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1350,
									"src": "477:38:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$585",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 867,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 866,
											"name": "IERC721",
											"nameLocations": [
												"477:7:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 585,
											"src": "477:7:7"
										},
										"referencedDeclaration": 585,
										"src": "477:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$585",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "669:88:7",
										"statements": [
											{
												"expression": {
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 877,
														"name": "nftCollection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "680:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$585",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 878,
														"name": "_nftCollection",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "696:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$585",
															"typeString": "contract IERC721"
														}
													},
													"src": "680:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$585",
														"typeString": "contract IERC721"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "680:30:7"
											},
											{
												"expression": {
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 881,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "721:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 882,
														"name": "_rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "736:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$142",
															"typeString": "contract IERC20"
														}
													},
													"src": "721:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "721:28:7"
											}
										]
									},
									"id": 886,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "_nftCollection",
												"nameLocation": "631:14:7",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "623:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC721_$585",
													"typeString": "contract IERC721"
												},
												"typeName": {
													"id": 870,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 869,
														"name": "IERC721",
														"nameLocations": [
															"623:7:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 585,
														"src": "623:7:7"
													},
													"referencedDeclaration": 585,
													"src": "623:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$585",
														"typeString": "contract IERC721"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "_rewardsToken",
												"nameLocation": "654:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "647:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$142",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 873,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 872,
														"name": "IERC20",
														"nameLocations": [
															"647:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 142,
														"src": "647:6:7"
													},
													"referencedDeclaration": 142,
													"src": "647:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$142",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "622:46:7"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "669:0:7"
									},
									"scope": 1350,
									"src": "611:146:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "ERC721Staking.StakedToken",
									"id": 891,
									"members": [
										{
											"constant": false,
											"id": 888,
											"mutability": "mutable",
											"name": "staker",
											"nameLocation": "801:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 891,
											"src": "793:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 887,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "793:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 890,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "826:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 891,
											"src": "818:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 889,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "818:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakedToken",
									"nameLocation": "770:11:7",
									"nodeType": "StructDefinition",
									"scope": 1350,
									"src": "763:78:7",
									"visibility": "public"
								},
								{
									"canonicalName": "ERC721Staking.Staker",
									"id": 902,
									"members": [
										{
											"constant": false,
											"id": 893,
											"mutability": "mutable",
											"name": "amountStaked",
											"nameLocation": "956:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 902,
											"src": "948:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 892,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "948:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 897,
											"mutability": "mutable",
											"name": "stakedTokens",
											"nameLocation": "1024:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 902,
											"src": "1010:26:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_StakedToken_$891_storage_$dyn_storage_ptr",
												"typeString": "struct ERC721Staking.StakedToken[]"
											},
											"typeName": {
												"baseType": {
													"id": 895,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 894,
														"name": "StakedToken",
														"nameLocations": [
															"1010:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 891,
														"src": "1010:11:7"
													},
													"referencedDeclaration": 891,
													"src": "1010:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakedToken_$891_storage_ptr",
														"typeString": "struct ERC721Staking.StakedToken"
													}
												},
												"id": 896,
												"nodeType": "ArrayTypeName",
												"src": "1010:13:7",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_StakedToken_$891_storage_$dyn_storage_ptr",
													"typeString": "struct ERC721Staking.StakedToken[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 899,
											"mutability": "mutable",
											"name": "timeOfLastUpdate",
											"nameLocation": "1124:16:7",
											"nodeType": "VariableDeclaration",
											"scope": 902,
											"src": "1116:24:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 898,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1116:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 901,
											"mutability": "mutable",
											"name": "unclaimedRewards",
											"nameLocation": "1308:16:7",
											"nodeType": "VariableDeclaration",
											"scope": 902,
											"src": "1300:24:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 900,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "880:6:7",
									"nodeType": "StructDefinition",
									"scope": 1350,
									"src": "873:459:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 905,
									"mutability": "mutable",
									"name": "rewardsPerHour",
									"nameLocation": "1409:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1350,
									"src": "1393:38:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 903,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1393:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 904,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1426:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "9168ae72",
									"id": 910,
									"mutability": "mutable",
									"name": "stakers",
									"nameLocation": "1521:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1350,
									"src": "1487:41:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
										"typeString": "mapping(address => struct ERC721Staking.Staker)"
									},
									"typeName": {
										"id": 909,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 906,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1495:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1487:26:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
											"typeString": "mapping(address => struct ERC721Staking.Staker)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 908,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 907,
												"name": "Staker",
												"nameLocations": [
													"1506:6:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 902,
												"src": "1506:6:7"
											},
											"referencedDeclaration": 902,
											"src": "1506:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$902_storage_ptr",
												"typeString": "struct ERC721Staking.Staker"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "94067045",
									"id": 914,
									"mutability": "mutable",
									"name": "stakerAddress",
									"nameLocation": "1684:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1350,
									"src": "1649:48:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 913,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 911,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1657:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1649:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 912,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1668:7:7",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "2026:1199:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 921,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "2132:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																	"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																}
															},
															"id": 924,
															"indexExpression": {
																"expression": {
																	"id": 922,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2140:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2144:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2140:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2132:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$902_storage",
																"typeString": "struct ERC721Staking.Staker storage ref"
															}
														},
														"id": 925,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2152:12:7",
														"memberName": "amountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 893,
														"src": "2132:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2167:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2132:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 944,
												"nodeType": "IfStatement",
												"src": "2128:177:7",
												"trueBody": {
													"id": 943,
													"nodeType": "Block",
													"src": "2170:135:7",
													"statements": [
														{
															"assignments": [
																929
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 929,
																	"mutability": "mutable",
																	"name": "rewards",
																	"nameLocation": "2193:7:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 943,
																	"src": "2185:15:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 928,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2185:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 934,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 931,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2220:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2224:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2220:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 930,
																	"name": "calculateRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "2203:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2203:28:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2185:46:7"
														},
														{
															"expression": {
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 935,
																			"name": "stakers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 910,
																			"src": "2246:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																				"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																			}
																		},
																		"id": 938,
																		"indexExpression": {
																			"expression": {
																				"id": 936,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2254:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2258:6:7",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2254:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2246:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$902_storage",
																			"typeString": "struct ERC721Staking.Staker storage ref"
																		}
																	},
																	"id": 939,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2266:16:7",
																	"memberName": "unclaimedRewards",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 901,
																	"src": "2246:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 940,
																	"name": "rewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 929,
																	"src": "2286:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2246:47:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 942,
															"nodeType": "ExpressionStatement",
															"src": "2246:47:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 948,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "2424:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 946,
																		"name": "nftCollection",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 868,
																		"src": "2402:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$585",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2416:7:7",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 518,
																	"src": "2402:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2402:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 950,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2437:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2441:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2437:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2402:45:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2462:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															},
															"value": "You don't own this token!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															}
														],
														"id": 945,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2380:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2380:120:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "2380:120:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 959,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2609:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2613:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2609:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 963,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2629:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC721Staking_$1350",
																		"typeString": "contract ERC721Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC721Staking_$1350",
																		"typeString": "contract ERC721Staking"
																	}
																],
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2621:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 961,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2621:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2621:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 965,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "2636:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 956,
															"name": "nftCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "2582:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$585",
																"typeString": "contract IERC721"
															}
														},
														"id": 958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2596:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 550,
														"src": "2582:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2582:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "2582:63:7"
											},
											{
												"assignments": [
													970
												],
												"declarations": [
													{
														"constant": false,
														"id": 970,
														"mutability": "mutable",
														"name": "stakedToken",
														"nameLocation": "2708:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "2689:30:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakedToken_$891_memory_ptr",
															"typeString": "struct ERC721Staking.StakedToken"
														},
														"typeName": {
															"id": 969,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 968,
																"name": "StakedToken",
																"nameLocations": [
																	"2689:11:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 891,
																"src": "2689:11:7"
															},
															"referencedDeclaration": 891,
															"src": "2689:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakedToken_$891_storage_ptr",
																"typeString": "struct ERC721Staking.StakedToken"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 976,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 972,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2734:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2738:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2734:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 974,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "2746:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 971,
														"name": "StakedToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "2722:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_StakedToken_$891_storage_ptr_$",
															"typeString": "type(struct ERC721Staking.StakedToken storage pointer)"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2722:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakedToken_$891_memory_ptr",
														"typeString": "struct ERC721Staking.StakedToken memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2689:66:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 983,
															"name": "stakedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "2858:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakedToken_$891_memory_ptr",
																"typeString": "struct ERC721Staking.StakedToken memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_StakedToken_$891_memory_ptr",
																"typeString": "struct ERC721Staking.StakedToken memory"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 977,
																	"name": "stakers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "2820:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																		"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																	}
																},
																"id": 980,
																"indexExpression": {
																	"expression": {
																		"id": 978,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2828:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2832:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2828:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2820:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$902_storage",
																	"typeString": "struct ERC721Staking.Staker storage ref"
																}
															},
															"id": 981,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2840:12:7",
															"memberName": "stakedTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 897,
															"src": "2820:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakedToken_$891_storage_$dyn_storage",
																"typeString": "struct ERC721Staking.StakedToken storage ref[] storage ref"
															}
														},
														"id": 982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2853:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2820:37:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_StakedToken_$891_storage_$dyn_storage_ptr_$_t_struct$_StakedToken_$891_storage_$returns$__$attached_to$_t_array$_t_struct$_StakedToken_$891_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct ERC721Staking.StakedToken storage ref[] storage pointer,struct ERC721Staking.StakedToken storage ref)"
														}
													},
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2820:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "2820:50:7"
											},
											{
												"expression": {
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2939:34:7",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 986,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "2939:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																	"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																}
															},
															"id": 989,
															"indexExpression": {
																"expression": {
																	"id": 987,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2947:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2951:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2947:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2939:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$902_storage",
																"typeString": "struct ERC721Staking.Staker storage ref"
															}
														},
														"id": 990,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2959:12:7",
														"memberName": "amountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 893,
														"src": "2939:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "2939:34:7"
											},
											{
												"expression": {
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 993,
															"name": "stakerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "3056:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 995,
														"indexExpression": {
															"id": 994,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "3070:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3056:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 996,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3082:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3086:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3082:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3056:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "3056:36:7"
											},
											{
												"expression": {
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1000,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "3163:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																	"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																}
															},
															"id": 1003,
															"indexExpression": {
																"expression": {
																	"id": 1001,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3171:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3175:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3171:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3163:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$902_storage",
																"typeString": "struct ERC721Staking.Staker storage ref"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3183:16:7",
														"memberName": "timeOfLastUpdate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 899,
														"src": "3163:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1005,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3202:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3208:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3202:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3163:54:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "3163:54:7"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 919,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 918,
												"name": "nonReentrant",
												"nameLocations": [
													"2013:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "2013:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2013:12:7"
										}
									],
									"name": "stake",
									"nameLocation": "1980:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "1994:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "1986:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1986:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1985:18:7"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2026:0:7"
									},
									"scope": 1350,
									"src": "1971:1254:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "3536:1732:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1018,
																		"name": "stakers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "3649:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																			"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																		}
																	},
																	"id": 1021,
																	"indexExpression": {
																		"expression": {
																			"id": 1019,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3657:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3661:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3657:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3649:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$902_storage",
																		"typeString": "struct ERC721Staking.Staker storage ref"
																	}
																},
																"id": 1022,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3669:12:7",
																"memberName": "amountStaked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 893,
																"src": "3649:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3684:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3649:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f20746f6b656e73207374616b6564",
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3700:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139",
																"typeString": "literal_string \"You have no tokens staked\""
															},
															"value": "You have no tokens staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_34cded1ef34bcc0ce3f7bc36163c885ad053d2afe82ae5d04f1e2737c4a24139",
																"typeString": "literal_string \"You have no tokens staked\""
															}
														],
														"id": 1017,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3627:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3627:111:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "3627:111:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1029,
																	"name": "stakerAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "3833:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 1031,
																"indexExpression": {
																	"id": 1030,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1012,
																	"src": "3847:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3833:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1032,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3860:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3864:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3860:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3833:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206f776e207468697320746f6b656e21",
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3872:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															},
															"value": "You don't own this token!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_09d0db9a9c13c6d7a5a2a54fb5dd18999b4840cd853bdee3d681c267a34495c9",
																"typeString": "literal_string \"You don't own this token!\""
															}
														],
														"id": 1028,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3825:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3825:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "3825:75:7"
											},
											{
												"assignments": [
													1039
												],
												"declarations": [
													{
														"constant": false,
														"id": 1039,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "4020:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1156,
														"src": "4012:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1038,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4012:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1044,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1041,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4047:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4051:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4047:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1040,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1349,
														"src": "4030:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4030:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4012:46:7"
											},
											{
												"expression": {
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1045,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "4069:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																	"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																}
															},
															"id": 1048,
															"indexExpression": {
																"expression": {
																	"id": 1046,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4077:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4081:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4077:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4069:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$902_storage",
																"typeString": "struct ERC721Staking.Staker storage ref"
															}
														},
														"id": 1049,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4089:16:7",
														"memberName": "unclaimedRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 901,
														"src": "4069:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1050,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "4109:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4069:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "4069:47:7"
											},
											{
												"assignments": [
													1054
												],
												"declarations": [
													{
														"constant": false,
														"id": 1054,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "4207:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1156,
														"src": "4199:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1053,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4199:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1056,
												"initialValue": {
													"hexValue": "30",
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4215:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4199:17:7"
											},
											{
												"body": {
													"id": 1103,
													"nodeType": "Block",
													"src": "4297:283:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1072,
																						"name": "stakers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 910,
																						"src": "4334:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																							"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																						}
																					},
																					"id": 1075,
																					"indexExpression": {
																						"expression": {
																							"id": 1073,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "4342:3:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 1074,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4346:6:7",
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "4342:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4334:19:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$902_storage",
																						"typeString": "struct ERC721Staking.Staker storage ref"
																					}
																				},
																				"id": 1076,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4354:12:7",
																				"memberName": "stakedTokens",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 897,
																				"src": "4334:32:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_StakedToken_$891_storage_$dyn_storage",
																					"typeString": "struct ERC721Staking.StakedToken storage ref[] storage ref"
																				}
																			},
																			"id": 1078,
																			"indexExpression": {
																				"id": 1077,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1058,
																				"src": "4367:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4334:35:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakedToken_$891_storage",
																				"typeString": "struct ERC721Staking.StakedToken storage ref"
																			}
																		},
																		"id": 1079,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4370:7:7",
																		"memberName": "tokenId",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 890,
																		"src": "4334:43:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1080,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1012,
																		"src": "4381:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4334:55:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1082,
																						"name": "stakers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 910,
																						"src": "4429:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																							"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																						}
																					},
																					"id": 1085,
																					"indexExpression": {
																						"expression": {
																							"id": 1083,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "4437:3:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 1084,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4441:6:7",
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "4437:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4429:19:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Staker_$902_storage",
																						"typeString": "struct ERC721Staking.Staker storage ref"
																					}
																				},
																				"id": 1086,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4449:12:7",
																				"memberName": "stakedTokens",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 897,
																				"src": "4429:32:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_StakedToken_$891_storage_$dyn_storage",
																					"typeString": "struct ERC721Staking.StakedToken storage ref[] storage ref"
																				}
																			},
																			"id": 1088,
																			"indexExpression": {
																				"id": 1087,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1058,
																				"src": "4462:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4429:35:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakedToken_$891_storage",
																				"typeString": "struct ERC721Staking.StakedToken storage ref"
																			}
																		},
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4465:6:7",
																		"memberName": "staker",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 888,
																		"src": "4429:42:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4483:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4475:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1090,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4475:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4475:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "4429:56:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4334:151:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1102,
															"nodeType": "IfStatement",
															"src": "4312:257:7",
															"trueBody": {
																"id": 1101,
																"nodeType": "Block",
																"src": "4501:68:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1096,
																				"name": "index",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1054,
																				"src": "4520:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1097,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1058,
																				"src": "4528:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4520:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1099,
																		"nodeType": "ExpressionStatement",
																		"src": "4520:9:7"
																	},
																	{
																		"id": 1100,
																		"nodeType": "Break",
																		"src": "4548:5:7"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1061,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "4247:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 1062,
																	"name": "stakers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "4251:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																		"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																	}
																},
																"id": 1065,
																"indexExpression": {
																	"expression": {
																		"id": 1063,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4259:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4263:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4259:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4251:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Staker_$902_storage",
																	"typeString": "struct ERC721Staking.Staker storage ref"
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4271:12:7",
															"memberName": "stakedTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 897,
															"src": "4251:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakedToken_$891_storage_$dyn_storage",
																"typeString": "struct ERC721Staking.StakedToken storage ref[] storage ref"
															}
														},
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4284:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4251:39:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4247:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1104,
												"initializationExpression": {
													"assignments": [
														1058
													],
													"declarations": [
														{
															"constant": false,
															"id": 1058,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4240:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1104,
															"src": "4232:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1057,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4232:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1060,
													"initialValue": {
														"hexValue": "30",
														"id": 1059,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4244:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4232:13:7"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4292:3:7",
														"subExpression": {
															"id": 1069,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "4292:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1071,
													"nodeType": "ExpressionStatement",
													"src": "4292:3:7"
												},
												"nodeType": "ForStatement",
												"src": "4227:353:7"
											},
											{
												"expression": {
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1105,
																		"name": "stakers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "4676:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																			"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																		}
																	},
																	"id": 1108,
																	"indexExpression": {
																		"expression": {
																			"id": 1106,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4684:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4688:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4684:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4676:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Staker_$902_storage",
																		"typeString": "struct ERC721Staking.Staker storage ref"
																	}
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4696:12:7",
																"memberName": "stakedTokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 897,
																"src": "4676:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_StakedToken_$891_storage_$dyn_storage",
																	"typeString": "struct ERC721Staking.StakedToken storage ref[] storage ref"
																}
															},
															"id": 1111,
															"indexExpression": {
																"id": 1110,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "4709:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4676:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakedToken_$891_storage",
																"typeString": "struct ERC721Staking.StakedToken storage ref"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4716:6:7",
														"memberName": "staker",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 888,
														"src": "4676:46:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4733:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4725:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1113,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4725:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4725:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4676:59:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "4676:59:7"
											},
											{
												"expression": {
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "4804:34:7",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 1119,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "4804:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																	"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																}
															},
															"id": 1122,
															"indexExpression": {
																"expression": {
																	"id": 1120,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4812:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4816:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4812:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4804:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$902_storage",
																"typeString": "struct ERC721Staking.Staker storage ref"
															}
														},
														"id": 1123,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4824:12:7",
														"memberName": "amountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 893,
														"src": "4804:32:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "4804:34:7"
											},
											{
												"expression": {
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1126,
															"name": "stakerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "4965:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1128,
														"indexExpression": {
															"id": 1127,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "4979:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4965:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4999:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4991:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1129,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4991:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4991:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4965:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "4965:36:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1140,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5103:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC721Staking_$1350",
																		"typeString": "contract ERC721Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ERC721Staking_$1350",
																		"typeString": "contract ERC721Staking"
																	}
																],
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5095:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1138,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5095:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5095:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1142,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5110:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5114:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5110:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1144,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "5122:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1135,
															"name": "nftCollection",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "5068:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$585",
																"typeString": "contract IERC721"
															}
														},
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5082:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 550,
														"src": "5068:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5068:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "5068:63:7"
											},
											{
												"expression": {
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1147,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "5206:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																	"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																}
															},
															"id": 1150,
															"indexExpression": {
																"expression": {
																	"id": 1148,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5214:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5218:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5214:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5206:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$902_storage",
																"typeString": "struct ERC721Staking.Staker storage ref"
															}
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5226:16:7",
														"memberName": "timeOfLastUpdate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 899,
														"src": "5206:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1152,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5245:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5251:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5245:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5206:54:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "5206:54:7"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1015,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1014,
												"name": "nonReentrant",
												"nameLocations": [
													"3523:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "3523:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3523:12:7"
										}
									],
									"name": "withdraw",
									"nameLocation": "3487:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "3504:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "3496:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3496:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3495:18:7"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3536:0:7"
									},
									"scope": 1350,
									"src": "3478:1790:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "5484:353:7",
										"statements": [
											{
												"assignments": [
													1161
												],
												"declarations": [
													{
														"constant": false,
														"id": 1161,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "5503:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1205,
														"src": "5495:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1160,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5495:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1172,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 1163,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5530:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5534:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5530:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1162,
															"name": "calculateRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "5513:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5513:28:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1166,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "5557:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																	"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																}
															},
															"id": 1169,
															"indexExpression": {
																"expression": {
																	"id": 1167,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5565:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5569:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5565:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5557:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$902_storage",
																"typeString": "struct ERC721Staking.Staker storage ref"
															}
														},
														"id": 1170,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5577:16:7",
														"memberName": "unclaimedRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 901,
														"src": "5557:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5513:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5495:98:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1174,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "5612:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5622:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5612:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752068617665206e6f207265776172647320746f20636c61696d",
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5625:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e",
																"typeString": "literal_string \"You have no rewards to claim\""
															},
															"value": "You have no rewards to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a3de4fd1af7402b3f03f1a24d11c3c22b00dd13805a4979d5665907707c3fe1e",
																"typeString": "literal_string \"You have no rewards to claim\""
															}
														],
														"id": 1173,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5604:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5604:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "5604:52:7"
											},
											{
												"expression": {
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1180,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "5667:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																	"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																}
															},
															"id": 1183,
															"indexExpression": {
																"expression": {
																	"id": 1181,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5675:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5679:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5675:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5667:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$902_storage",
																"typeString": "struct ERC721Staking.Staker storage ref"
															}
														},
														"id": 1184,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5687:16:7",
														"memberName": "timeOfLastUpdate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 899,
														"src": "5667:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1185,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5706:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5712:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5706:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5667:54:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "5667:54:7"
											},
											{
												"expression": {
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1189,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "5732:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																	"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																}
															},
															"id": 1192,
															"indexExpression": {
																"expression": {
																	"id": 1190,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5740:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5744:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5740:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5732:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$902_storage",
																"typeString": "struct ERC721Staking.Staker storage ref"
															}
														},
														"id": 1193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5752:16:7",
														"memberName": "unclaimedRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 901,
														"src": "5732:36:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5771:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5732:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1196,
												"nodeType": "ExpressionStatement",
												"src": "5732:40:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1200,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5809:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5813:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5809:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1202,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "5821:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1197,
															"name": "rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "5783:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$142",
																"typeString": "contract IERC20"
															}
														},
														"id": 1199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5796:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 228,
														"src": "5783:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$142_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$142_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5783:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "5783:46:7"
											}
										]
									},
									"functionSelector": "372500ab",
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nameLocation": "5460:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5472:2:7"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5484:0:7"
									},
									"scope": 1350,
									"src": "5451:386:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "5970:136:7",
										"statements": [
											{
												"assignments": [
													1214
												],
												"declarations": [
													{
														"constant": false,
														"id": 1214,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "5989:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1226,
														"src": "5981:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1213,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5981:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1223,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1216,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "6016:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1215,
															"name": "calculateRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1349,
															"src": "5999:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5999:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1218,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "6040:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																	"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																}
															},
															"id": 1220,
															"indexExpression": {
																"id": 1219,
																"name": "_staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "6048:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6040:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$902_storage",
																"typeString": "struct ERC721Staking.Staker storage ref"
															}
														},
														"id": 1221,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6057:16:7",
														"memberName": "unclaimedRewards",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 901,
														"src": "6040:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5999:74:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5981:92:7"
											},
											{
												"expression": {
													"id": 1224,
													"name": "rewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1214,
													"src": "6091:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1212,
												"id": 1225,
												"nodeType": "Return",
												"src": "6084:14:7"
											}
										]
									},
									"functionSelector": "f854a27f",
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "availableRewards",
									"nameLocation": "5906:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "5931:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "5923:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5923:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5922:17:7"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "5961:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:9:7"
									},
									"scope": 1350,
									"src": "5897:209:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "6197:790:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1236,
																"name": "stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "6251:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																	"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																}
															},
															"id": 1238,
															"indexExpression": {
																"id": 1237,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1229,
																"src": "6259:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6251:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$902_storage",
																"typeString": "struct ERC721Staking.Staker storage ref"
															}
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6266:12:7",
														"memberName": "amountStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 893,
														"src": "6251:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6281:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6251:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1316,
													"nodeType": "Block",
													"src": "6926:54:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6966:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "6948:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (struct ERC721Staking.StakedToken memory[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1310,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1309,
																				"name": "StakedToken",
																				"nameLocations": [
																					"6952:11:7"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 891,
																				"src": "6952:11:7"
																			},
																			"referencedDeclaration": 891,
																			"src": "6952:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakedToken_$891_storage_ptr",
																				"typeString": "struct ERC721Staking.StakedToken"
																			}
																		},
																		"id": 1311,
																		"nodeType": "ArrayTypeName",
																		"src": "6952:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_StakedToken_$891_storage_$dyn_storage_ptr",
																			"typeString": "struct ERC721Staking.StakedToken[]"
																		}
																	}
																},
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6948:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct ERC721Staking.StakedToken memory[] memory"
																}
															},
															"functionReturnParameters": 1235,
															"id": 1315,
															"nodeType": "Return",
															"src": "6941:27:7"
														}
													]
												},
												"id": 1317,
												"nodeType": "IfStatement",
												"src": "6247:733:7",
												"trueBody": {
													"id": 1308,
													"nodeType": "Block",
													"src": "6284:575:7",
													"statements": [
														{
															"assignments": [
																1246
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1246,
																	"mutability": "mutable",
																	"name": "_stakedTokens",
																	"nameLocation": "6413:13:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1308,
																	"src": "6392:34:7",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct ERC721Staking.StakedToken[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1244,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1243,
																				"name": "StakedToken",
																				"nameLocations": [
																					"6392:11:7"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 891,
																				"src": "6392:11:7"
																			},
																			"referencedDeclaration": 891,
																			"src": "6392:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakedToken_$891_storage_ptr",
																				"typeString": "struct ERC721Staking.StakedToken"
																			}
																		},
																		"id": 1245,
																		"nodeType": "ArrayTypeName",
																		"src": "6392:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_StakedToken_$891_storage_$dyn_storage_ptr",
																			"typeString": "struct ERC721Staking.StakedToken[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1256,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1251,
																				"name": "stakers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "6447:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																					"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																				}
																			},
																			"id": 1253,
																			"indexExpression": {
																				"id": 1252,
																				"name": "_user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1229,
																				"src": "6455:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6447:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$902_storage",
																				"typeString": "struct ERC721Staking.Staker storage ref"
																			}
																		},
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6462:12:7",
																		"memberName": "amountStaked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 893,
																		"src": "6447:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "6429:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (struct ERC721Staking.StakedToken memory[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1248,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1247,
																				"name": "StakedToken",
																				"nameLocations": [
																					"6433:11:7"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 891,
																				"src": "6433:11:7"
																			},
																			"referencedDeclaration": 891,
																			"src": "6433:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakedToken_$891_storage_ptr",
																				"typeString": "struct ERC721Staking.StakedToken"
																			}
																		},
																		"id": 1249,
																		"nodeType": "ArrayTypeName",
																		"src": "6433:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_StakedToken_$891_storage_$dyn_storage_ptr",
																			"typeString": "struct ERC721Staking.StakedToken[]"
																		}
																	}
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6429:46:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct ERC721Staking.StakedToken memory[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6392:83:7"
														},
														{
															"assignments": [
																1258
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1258,
																	"mutability": "mutable",
																	"name": "_index",
																	"nameLocation": "6498:6:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1308,
																	"src": "6490:14:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1257,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6490:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1260,
															"initialValue": {
																"hexValue": "30",
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6507:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6490:18:7"
														},
														{
															"body": {
																"id": 1304,
																"nodeType": "Block",
																"src": "6590:221:7",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"baseExpression": {
																								"id": 1275,
																								"name": "stakers",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 910,
																								"src": "6613:7:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																									"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																								}
																							},
																							"id": 1277,
																							"indexExpression": {
																								"id": 1276,
																								"name": "_user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1229,
																								"src": "6621:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6613:14:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Staker_$902_storage",
																								"typeString": "struct ERC721Staking.Staker storage ref"
																							}
																						},
																						"id": 1278,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6628:12:7",
																						"memberName": "stakedTokens",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 897,
																						"src": "6613:27:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_StakedToken_$891_storage_$dyn_storage",
																							"typeString": "struct ERC721Staking.StakedToken storage ref[] storage ref"
																						}
																					},
																					"id": 1280,
																					"indexExpression": {
																						"id": 1279,
																						"name": "j",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1262,
																						"src": "6641:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6613:30:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakedToken_$891_storage",
																						"typeString": "struct ERC721Staking.StakedToken storage ref"
																					}
																				},
																				"id": 1281,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6644:6:7",
																				"memberName": "staker",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 888,
																				"src": "6613:37:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"components": [
																					{
																						"arguments": [
																							{
																								"hexValue": "30",
																								"id": 1284,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "6663:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								}
																							],
																							"id": 1283,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "6655:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 1282,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "6655:7:7",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1285,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6655:10:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"id": 1286,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6654:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "6613:53:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1303,
																		"nodeType": "IfStatement",
																		"src": "6609:187:7",
																		"trueBody": {
																			"id": 1302,
																			"nodeType": "Block",
																			"src": "6668:128:7",
																			"statements": [
																				{
																					"expression": {
																						"id": 1297,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 1288,
																								"name": "_stakedTokens",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1246,
																								"src": "6691:13:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct ERC721Staking.StakedToken memory[] memory"
																								}
																							},
																							"id": 1290,
																							"indexExpression": {
																								"id": 1289,
																								"name": "_index",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1258,
																								"src": "6705:6:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "6691:21:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_StakedToken_$891_memory_ptr",
																								"typeString": "struct ERC721Staking.StakedToken memory"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 1291,
																										"name": "stakers",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 910,
																										"src": "6715:7:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																											"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																										}
																									},
																									"id": 1293,
																									"indexExpression": {
																										"id": 1292,
																										"name": "_user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1229,
																										"src": "6723:5:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "6715:14:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Staker_$902_storage",
																										"typeString": "struct ERC721Staking.Staker storage ref"
																									}
																								},
																								"id": 1294,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "6730:12:7",
																								"memberName": "stakedTokens",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 897,
																								"src": "6715:27:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_StakedToken_$891_storage_$dyn_storage",
																									"typeString": "struct ERC721Staking.StakedToken storage ref[] storage ref"
																								}
																							},
																							"id": 1296,
																							"indexExpression": {
																								"id": 1295,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1262,
																								"src": "6743:1:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6715:30:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_StakedToken_$891_storage",
																								"typeString": "struct ERC721Staking.StakedToken storage ref"
																							}
																						},
																						"src": "6691:54:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_StakedToken_$891_memory_ptr",
																							"typeString": "struct ERC721Staking.StakedToken memory"
																						}
																					},
																					"id": 1298,
																					"nodeType": "ExpressionStatement",
																					"src": "6691:54:7"
																				},
																				{
																					"expression": {
																						"id": 1300,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "6768:8:7",
																						"subExpression": {
																							"id": 1299,
																							"name": "_index",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1258,
																							"src": "6768:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1301,
																					"nodeType": "ExpressionStatement",
																					"src": "6768:8:7"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1265,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1262,
																	"src": "6545:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1266,
																				"name": "stakers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "6549:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																					"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																				}
																			},
																			"id": 1268,
																			"indexExpression": {
																				"id": 1267,
																				"name": "_user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1229,
																				"src": "6557:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6549:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$902_storage",
																				"typeString": "struct ERC721Staking.Staker storage ref"
																			}
																		},
																		"id": 1269,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6564:12:7",
																		"memberName": "stakedTokens",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 897,
																		"src": "6549:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_StakedToken_$891_storage_$dyn_storage",
																			"typeString": "struct ERC721Staking.StakedToken storage ref[] storage ref"
																		}
																	},
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6577:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6549:34:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6545:38:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1305,
															"initializationExpression": {
																"assignments": [
																	1262
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1262,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "6538:1:7",
																		"nodeType": "VariableDeclaration",
																		"scope": 1305,
																		"src": "6530:9:7",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1261,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6530:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1264,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6542:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6530:13:7"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "6585:3:7",
																	"subExpression": {
																		"id": 1272,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1262,
																		"src": "6585:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1274,
																"nodeType": "ExpressionStatement",
																"src": "6585:3:7"
															},
															"nodeType": "ForStatement",
															"src": "6525:286:7"
														},
														{
															"expression": {
																"id": 1306,
																"name": "_stakedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1246,
																"src": "6834:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct ERC721Staking.StakedToken memory[] memory"
																}
															},
															"functionReturnParameters": 1235,
															"id": 1307,
															"nodeType": "Return",
															"src": "6827:20:7"
														}
													]
												}
											}
										]
									},
									"functionSelector": "63c28db1",
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakedTokens",
									"nameLocation": "6123:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "6147:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "6139:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6139:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6138:15:7"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "6175:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_StakedToken_$891_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct ERC721Staking.StakedToken[]"
												},
												"typeName": {
													"baseType": {
														"id": 1232,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1231,
															"name": "StakedToken",
															"nameLocations": [
																"6175:11:7"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 891,
															"src": "6175:11:7"
														},
														"referencedDeclaration": 891,
														"src": "6175:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakedToken_$891_storage_ptr",
															"typeString": "struct ERC721Staking.StakedToken"
														}
													},
													"id": 1233,
													"nodeType": "ArrayTypeName",
													"src": "6175:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakedToken_$891_storage_$dyn_storage_ptr",
														"typeString": "struct ERC721Staking.StakedToken[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:22:7"
									},
									"scope": 1350,
									"src": "6114:873:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "7351:184:7",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1338,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 1332,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"expression": {
																												"id": 1326,
																												"name": "block",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 4294967292,
																												"src": "7388:5:7",
																												"typeDescriptions": {
																													"typeIdentifier": "t_magic_block",
																													"typeString": "block"
																												}
																											},
																											"id": 1327,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "7394:9:7",
																											"memberName": "timestamp",
																											"nodeType": "MemberAccess",
																											"src": "7388:15:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"expression": {
																												"baseExpression": {
																													"id": 1328,
																													"name": "stakers",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 910,
																													"src": "7406:7:7",
																													"typeDescriptions": {
																														"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																														"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																													}
																												},
																												"id": 1330,
																												"indexExpression": {
																													"id": 1329,
																													"name": "_staker",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1321,
																													"src": "7414:7:7",
																													"typeDescriptions": {
																														"typeIdentifier": "t_address",
																														"typeString": "address"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "7406:16:7",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_Staker_$902_storage",
																													"typeString": "struct ERC721Staking.Staker storage ref"
																												}
																											},
																											"id": 1331,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "7423:16:7",
																											"memberName": "timeOfLastUpdate",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 899,
																											"src": "7406:33:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "7388:51:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 1333,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "7387:53:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 1334,
																										"name": "stakers",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 910,
																										"src": "7460:7:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$902_storage_$",
																											"typeString": "mapping(address => struct ERC721Staking.Staker storage ref)"
																										}
																									},
																									"id": 1336,
																									"indexExpression": {
																										"id": 1335,
																										"name": "_staker",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1321,
																										"src": "7468:7:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "7460:16:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Staker_$902_storage",
																										"typeString": "struct ERC721Staking.Staker storage ref"
																									}
																								},
																								"id": 1337,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "7477:12:7",
																								"memberName": "amountStaked",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 893,
																								"src": "7460:29:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "7387:102:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1339,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "7386:104:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1340,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "7371:130:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1341,
																			"name": "rewardsPerHour",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 905,
																			"src": "7504:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7371:147:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1343,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7370:149:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "33363030",
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7522:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3600_by_1",
																	"typeString": "int_const 3600"
																},
																"value": "3600"
															},
															"src": "7370:156:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1346,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7369:158:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1325,
												"id": 1347,
												"nodeType": "Return",
												"src": "7362:165:7"
											}
										]
									},
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRewards",
									"nameLocation": "7244:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "_staker",
												"nameLocation": "7269:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "7261:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7261:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7260:17:7"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "_rewards",
												"nameLocation": "7336:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "7328:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7328:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7327:18:7"
									},
									"scope": 1350,
									"src": "7235:300:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1351,
							"src": "309:7229:7",
							"usedErrors": [
								195,
								593,
								598,
								601
							],
							"usedEvents": []
						}
					],
					"src": "33:7505:7"
				},
				"id": 7
			}
		}
	}
}